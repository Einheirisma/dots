sway
ll
sudo -e nvim /etc/zsh/zprofile
cd /etc/zsh
ll
cd
clear
ls
nvim ~/.config/zsh/.zshrc
git clone https://github.com/Aloxaf/fzf-tab /usr/share/zsh/plugins/\

git clone https://github.com/Aloxaf/fzf-tab /usr/share/zsh/plugins/fzf-tab\

sudo git clone https://github.com/Aloxaf/fzf-tab /usr/share/zsh/plugins/fzf-tab\

mkdir -p /home/ame/code/notify-platform\
cd /home/ame/code/notify-platform
go mod init notify-platform
mkdir -p cmd/cli cmd/gateway internal/{auth,user,notification,queue,metrics} pkg/lib deployments docs\
touch .env docker-compose.yml Makefile
v /home/ame/code/notify-platform/docker-compose.yml
mkdir -p deployments\
nvim /home/ame/code/notify-platform/deployments/prometheus.yml
v /home/ame/code/notify-platform/deployments/loki-config.yml
v /home/ame/code/notify-platform/.env
v home/ame/code/notify-platform/start.sh
v /home/ame/code/notify-platform/start.sh
v /home/ame/code/notify-platform/stop.sh
chmod +x /home/ame/code/notify-platform/start.sh\
chmod +x /home/ame/code/notify-platform/stop.sh
/home/ame/code/notify-platform/start.sh\

systemctl start docker
/home/ame/code/notify-platform/start.sh\

v /home/ame/code/notify-platform/docker-compose.yml
sudo usermod -aG docker $USER
newgrp docker
sudo systemctl restart docker
docker info 
/home/ame/code/notify-platform/stop.sh
/home/ame/code/notify-platform/start.sh
docker ps 
cd code/notify-platform
git init
ga
gcm "Environment preparation"
clear
docker ps 
mkdir -p /home/ame/code/notify-platform/internal/auth\
touch /home/ame/code/notify-platform/internal/auth/{main.go,handlers.go,models.go,utils.go,Dockerfile}
v internal/auth/models.go
v internal/auth/utils.go
v internal/auth/handlers.go
v internal/auth/main.go
go get github.com/golang-jwt/jwt/v5
go get github.com/labstack/echo/v4\

go get golang.org/x/crypto/bcrypt
/home/ame/code/notify-platform/stop.sh
clear
ll
v /home/ame/code/notify-platform/Dockerfile
v /home/ame/code/notify-platform/docker-compose.yml
/home/ame/code/notify-platform/start.sh
v /home/ame/code/notify-platform/docker-compose.yml
v internal/auth/main.go
v internal/auth/models.go
v internal/auth/utils.go
v internal/auth/main.go
go get github.com/labstack/echo/v4/middleware\

v internal/auth/main.go
v go.mod
v internal/auth/main.go
v internal/auth/utils.g
v internal/auth/utils.go
cd internal
ls
cd ..
v go.mod
v internal/auth/utils.go
v internal/auth/handlers.go
v internal/auth/models.go
v internal/auth/utils.go
v internal/auth/models.go
v internal/auth/main.go
v internal/auth/models.go
v internal/auth/utils.go
v internal/auth/models.go
v internal/auth/main.go
docker ps
cd code/notify-platform
ls
ll
tree
v internal/auth/main.go
cd code/notify-platform
ls
cd internal
ls
cd auth
ls
v Dockerfile
ls
v Dockerfile
rm Dockerfile
ls
cd ..
ls
cd ..
ll
v Dockerfile
go mod tidy
go vet
cd internal/auth
go vet
v handlers.go
v models.go
v utils.go
cd ..
rm -rf /home/ame/go/pkg/mod/notify-platform\

go mod tidy
cd code/notify-platform
go mod tidy
v go.mod
v internal/auth/main.go
v go.mod
cd
sudo pacman -Syyu
cd -
/home/ame/code/notify-platform/start.sh
reboot
sway
cd code/notify-platform
sudo systemctl start docker
/home/ame/code/notify-platform/start.sh
/home/ame/code/notify-platform/stop.sh
cd internal/auth
v handlers.go
ls
v main.go
v handlers.go
v main.go
v handlers.go
v utils.go
v /home/ame/code/notify-platform/internal/auth/main.go
v /home/ame/code/notify-platform/internal/auth/handlers.go
v /home/ame/code/notify-platform/internal/auth/models.go
v /home/ame/code/notify-platform/internal/auth/utils.go
v /home/ame/code/notify-platform/Dockerfile
v /home/ame/code/notify-platform/internal/auth/models.go
v /home/ame/code/notify-platform/internal/auth/utils.go
cd ..
ls
v go.mod
go mod tidy
v go.mod
v /home/ame/code/notify-platform/internal/auth/models.go
v /home/ame/code/notify-platform/internal/auth/handlers.go
v /home/ame/code/notify-platform/internal/auth/
go clean -modcache
go mod tidy
v /home/ame/code/notify-platform/internal/auth/
tree
rm go.mod
go mod init notify-platform
v /home/ame/code/notify-platform/internal/auth/
sudo pacman -S code
cd .config/sway
v config
go mod tidy
mkdir -p /home/ame/code/notify-platform/cmd/auth\
mv /home/ame/code/notify-platform/internal/auth/main.go /home/ame/code/notify-platform/cmd/auth/
cd code/notify-platform
go get github.com/labstack/echo-jwt/v4/\

cd code
ls
rm notify-platform
mkdir -p /home/ame/code/notification-platform/{cmd,cmd/auth-service,cmd/user-service,cmd/notification-service,cmd/delivery/email,cmd/cli,cmd/worker,cmd/analytics-service,internal/{config,models,repository,services,utils},web/{rest,websocket},scripts}\
cd /home/ame/code/notification-platform
go mod init notification-platform
v /home/ame/code/notification-platform/.env
v /home/ame/code/notification-platform/docker-compose.yaml
v /home/ame/code/notification-platform/scripts/start.sh
v /home/ame/code/notification-platform/scripts/stop.sh
chmod +x /home/ame/code/notification-platform/scripts/*.sh
/home/ame/code/notification-platform/scripts/start.sh\

cd ..
rm notification-platform
reboot
sway
sudo pacman -Syyu
paru
mkdir -p /home/ame/code/notification-platform/{cmd,internal,scripts,deployments,config}\
cd /home/ame/code/notification-platform
go mod init notification-platform
v /home/ame/code/notification-platform/deployments/docker-compose.yml
v /home/ame/code/notification-platform/.env
v /home/ame/code/notification-platform/scripts/start.sh
v /home/ame/code/notification-platform/scripts/stop.sh
chmod +x scripts/*.sh
v /home/ame/code/notification-platform/cmd/auth-service/main.go
go get github.com/labstack/echo/v4
mkdir /home/ame/code/notification-platform/cmd/auth-service/
v /home/ame/code/notification-platform/cmd/auth-service/main.go
./scripts/start.sh
sudo systemctl start docker
./scripts/start.sh
docker ps
docker exec -it notification-platform-mysql-1 mysql -uroot -psecret\

./scripts/stop.sh
./scripts/start.sh
./scripts/stop.sh
cd ..
rm notification-platform
ls
mkdir -p /home/ame/code/notify-platform\
cd /home/ame/code/notify-platform
mkdir -p {api-gateway,user-service,notification-service,workers,deployments,scripts,pkg/common}\

cd /home/ame/code/notify-platform\
go mod init notify-platform
v /home/ame/code/notify-platform/.env
cat << EOF > .env\
# –Éæ–±—É©–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\
APP_ENV=development\
SERVER_PORT=8080\
\
# –É±–∞–∑—É´ –¥–∞–Ω–Ω—É´—É•\
MYSQL_ROOT_PASSWORD=secret\
MYSQL_DATABASE=notify\
MYSQL_USER=app\
MYSQL_PASSWORD=app_password\
\
REDIS_HOST=redis\
REDIS_PORT=6379\
\
# JWT\
JWT_SECRET=your_jwt_secret_here\
JWT_EXPIRATION=24h\
\
# RabbitMQ\
RABBITMQ_USER=guest\
RABBITMQ_PASSWORD=guest\
EOF
v /home/ame/code/notify-platform/.env
cat << EOF > deployments/docker-compose.yml\
version: '3.8'\
\
services:\
  mysql:\
    image: mysql:8.0\
    env_file: ../.env\
    ports:\
      - "3306:3306"\
    volumes:\
      - mysql_data:/var/lib/mysql\
\
  redis:\
    image: redis:7.0-alpine\
    ports:\
      - "6379:6379"\
\
  rabbitmq:\
    image: rabbitmq:3.11-management\
    ports:\
      - "5672:5672"\
      - "15672:15672"\
\
  prometheus:\
    image: prom/prometheus:latest\
    ports:\
      - "9090:9090"\
    volumes:\
      - ./prometheus.yml:/etc/prometheus/prometheus.yml\
\
volumes:\
  mysql_data:\
EOF
v deployments/docker-compose.yml
docker-compose -f deployments/docker-compose.yml up -d\

mkdir -p /home/ame/code/notify-platform/deployments/prometheus\

cat << EOF > /home/ame/code/notify-platform/deployments/prometheus/prometheus.yml\
global:\
  scrape_interval: 15s\
\
scrape_configs:\
  - job_name: 'notify-platform'\
    static_configs:\
      - targets: ['api-gateway:8080']\
EOF\

cat << EOF > deployments/docker-compose.yml\
version: '3.8'\
\
services:\
  mysql:\
    image: mysql:8.0\
    env_file: ../.env\
    ports:\
      - "3306:3306"\
    volumes:\
      - mysql_data:/var/lib/mysql\
\
  redis:\
    image: redis:7.0-alpine\
    ports:\
      - "6379:6379"\
\
  rabbitmq:\
    image: rabbitmq:3.11-management\
    ports:\
      - "5672:5672"\
      - "15672:15672"\
\
  prometheus:\
    image: prom/prometheus:latest\
    ports:\
      - "9090:9090"\
    volumes:\
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml\
\
volumes:\
  mysql_data:\
EOF
docker-compose -f deployments/docker-compose.yml down\

docker-compose -f deployments/docker-compose.yml up -d\

ls -l /home/ame/code/notify-platform/deployments/prometheus/prometheus.yml\

docker ps --format "table {{.Names}}\t{{.Status}}"\

mkdir -p /home/ame/code/notify-platform/user-service/{cmd,internal/model,internal/repository,internal/handler,migrations}
cat << EOF > user-service/migrations/001_create_users_table.up.sql\
CREATE TABLE users (\
    id INT AUTO_INCREMENT PRIMARY KEY,\
    email VARCHAR(255) UNIQUE NOT NULL,\
    password_hash VARCHAR(255) NOT NULL,\
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\
);\
EOF
cd /home/ame/code/notify-platform/user-service\

go mod init github.com/skillissu3e/notify-platform/user-service\

go get github.com/go-sql-driver/mysql github.com/golang-jwt/jwt/v5 github.com/redis/go-redis/v9
cd ..
v /home/ame/code/notify-platform/user-service/cmd/main.go
cat << EOF > user-service/cmd/main.go\
package main\
\
import (\
	"database/sql"\
	"fmt"\
	"log"\
	"net/http"\
	"os"\
	\
	"github.com/labstack/echo/v4"\
	_ "github.com/go-sql-driver/mysql"\
)\
\
func main() {\
	// –É∏–Ω–∏—É¶–∏–∞–ª–∏–∑–∞—É¶–∏—ÉØ –ø–æ–¥–∫–ª—ÉÆ—Éß–µ–Ω–∏—ÉØ –∫ MySQL\
	db, err := sql.Open("mysql", \
		fmt.Sprintf("%s:%s@tcp(%s:%s)/%s",\
			os.Getenv("MYSQL_USER"),\
			os.Getenv("MYSQL_PASSWORD"),\
			"localhost",\
			"3306",\
			os.Getenv("MYSQL_DATABASE")))\
	if err != nil {\
		log.Fatal(err)\
	}\
	defer db.Close()\
\
	// –Éø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—ÉÆ—Éß–µ–Ω–∏—ÉØ\
	err = db.Ping()\
	if err != nil {\
		log.Fatal("Database connection failed:", err)\
	}\
\
	// –ÉÅ–æ–∑–¥–∞–Ω–∏–µ Echo –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—ÉØ\
	e := echo.New()\
\
	// –Éº–∞—Ä—É®—Ä—É£—Ç—É´\
	e.GET("/health", func(c echo.Context) error {\
		return c.JSON(http.StatusOK, map[string]string{"status": "ok"})\
	})\
\
	// –É∑–∞–ø—É£—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞\
	port := os.Getenv("SERVER_PORT")\
	if port == "" {\
		port = "8081"\
	}\
	e.Logger.Fatal(e.Start(":" + port))\
}\
EOF
v /home/ame/code/notify-platform/user-service/cmd/main.go
cd user-service
go get github.com/labstack/echo/v4
cd ..
v /home/ame/code/notify-platform/user-service/cmd/main.go
docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql\

cd /home/ame/code/notify-platform/user-service\

SERVER_PORT=8081 MYSQL_USER=app MYSQL_PASSWORD=app_password MYSQL_DATABASE=notify go run cmd/main.go\

curl http://localhost:8081/health\

cd ..
git init
ga
gcm "Creating a project structure, environment and User Service."
cat << EOF > pkg/common/password.go\
package common\
\
import (\
	"crypto/rand"\
	"encoding/base64"\
	"golang.org/x/crypto/argon2"\
)\
\
func HashPassword(password string) (string, error) {\
	salt := make([]byte, 16)\
	if _, err := rand.Read(salt); err != nil {\
		return "", err\
	}\
\
	hash := argon2.IDKey([]byte(password), salt, 1, 64*1024, 4, 32)\
	\
	return base64.RawStdEncoding.EncodeToString(salt) + "$" + \
		base64.RawStdEncoding.EncodeToString(hash), nil\
}\
\
func VerifyPassword(password, hash string) bool {\
	parts := strings.Split(hash, "$")\
	if len(parts) != 2 {\
		return false\
	}\
\
	salt, err := base64.RawStdEncoding.DecodeString(parts[0])\
	if err != nil {\
		return false\
	}\
\
	hashedPassword := argon2.IDKey(\
		[]byte(password), \
		salt, \
		1, \
		64*1024, \
		4, \
		32,\
	)\
\
	return parts[1] == base64.RawStdEncoding.EncodeToString(hashedPassword)\
}\
EOF
cat << EOF > user-service/internal/handler/auth.go\
package handler\
\
import (\
	"net/http"\
	\
	"github.com/labstack/echo/v4"\
	"github.com/yourusername/notify-platform/pkg/common"\
)\
\
type RegisterRequest struct {\
	Email    string `json:"email" validate:"required,email"`\
	Password string `json:"password" validate:"required,min=8"`\
}\
\
func RegisterHandler(db *sql.DB) echo.HandlerFunc {\
	return func(c echo.Context) error {\
		var req RegisterRequest\
		if err := c.Bind(&req); err != nil {\
			return c.JSON(http.StatusBadRequest, map[string]string{"error": "invalid request"})\
		}\
\
		// –Éø—Ä–æ–≤–µ—Ä–∫–∞ —É£–Ω–∏–∫–∞–ª—É¨–Ω–æ—Å—Ç–∏ email\
		var exists bool\
		err := db.QueryRow("SELECT EXISTS(SELECT 1 FROM users WHERE email = ?)", req.Email).Scan(&exists)\
		if err != nil {\
			return c.JSON(http.StatusInternalServerError, map[string]string{"error": "database error"})\
		}\
		if exists {\
			return c.JSON(http.StatusConflict, map[string]string{"error": "email already exists"})\
		}\
\
		// –•–µ—É®–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—ÉØ\
		hashedPassword, err := common.HashPassword(req.Password)\
		if err != nil {\
			return c.JSON(http.StatusInternalServerError, map[string]string{"error": "password hashing failed"})\
		}\
\
		// –ÉÅ–æ—É•—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—É¨–∑–æ–≤–∞—Ç–µ–ª—ÉØ\
		_, err = db.Exec(\
			"INSERT INTO users (email, password_hash) VALUES (?, ?)",\
			req.Email,\
			hashedPassword,\
		)\
		if err != nil {\
			return c.JSON(http.StatusInternalServerError, map[string]string{"error": "user creation failed"})\
		}\
\
		return c.JSON(http.StatusCreated, map[string]string{"status": "user created"})\
	}\
}\
EOF
v /home/ame/code/notify-platform/user-service/cmd/main.go\

v /home/ame/code/notify-platform/user-service/internal/handler/auth.go
v /home/ame/code/notify-platform/pkg/common/password.go
go get 	"golang.org/x/crypto/argon2"\

v /home/ame/code/notify-platform/pkg/common/password.go
v /home/ame/code/notify-platform/user-service/internal/handler/auth.go
v /home/ame/code/notify-platform/pkg/common/password.go
v /home/ame/code/notify-platform/user-service/internal/handler/auth.go
sed -i 's|github.com/skillissu3e/notify-platform/pkg/common|notify-platform/pkg/common|g' user-service/internal/handler/auth.go\

cat << EOF > user-service/go.mod\
module github.com/yourusername/notify-platform/user-service\
\
go 1.20\
\
replace notify-platform => ../\
\
require (\
	github.com/go-sql-driver/mysql v1.7.1\
	github.com/golang-jwt/jwt/v5 v5.2.0\
	github.com/labstack/echo/v4 v4.11.4\
	github.com/redis/go-redis/v9 v9.4.0\
	golang.org/x/crypto v0.17.0\
)\
\
require (\
	github.com/golang-jwt/jwt v3.2.2+incompatible // indirect\
	github.com/mattn/go-colorable v0.1.13 // indirect\
	github.com/mattn/go-isatty v0.0.20 // indirect\
	github.com/valyala/bytebufferpool v1.0.0 // indirect\
	github.com/valyala/fasttemplate v1.2.2 // indirect\
	golang.org/x/net v0.19.0 // indirect\
	golang.org/x/sys v0.15.0 // indirect\
	golang.org/x/text v0.14.0 // indirect\
	golang.org/x/time v0.5.0 // indirect\
)\
EOF
v /home/ame/code/notify-platform/user-service/go.mod
sed -i '/package common/a \\nimport "strings"' pkg/common/password.go\

cd /home/ame/code/notify-platform/user-service\

go mod tidy\

v /home/ame/code/notify-platform/user-service/cmd/main.go\

cd ..
curl -X POST http://localhost:8081/register \\
  -H "Content-Type: application/json" \\
  -d '{"email":"test@example.com", "password":"securepass123"}'
cd user-service
curl -X POST http://localhost:8081/register \\
  -H "Content-Type: application/json" \\
  -d '{"email":"test@example.com", "password":"securepass123"}'
cd /home/ame/code/notify-platform\

docker-compose -f deployments/docker-compose.yml down\

docker-compose -f deployments/docker-compose.yml up -d\

docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql
cd /home/ame/code/notify-platform/user-service\

go mod tidy\

SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
go run cmd/main.go
v /home/ame/code/notify-platform/pkg/common/password.go
SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
go run cmd/main.go
curl -X POST http://localhost:8081/register \\
  -H "Content-Type: application/json" \\
  -d '{"email":"test@example.com", "password":"securepass123"}'
docker exec deployments-mysql-1 mysql -uapp -papp_password notify -e "SELECT * FROM users"\

cat << EOF >> user-service/internal/handler/auth.go\
type LoginRequest struct {\
	Email    string `json:"email" validate:"required,email"`\
	Password string `json:"password" validate:"required"`\
}\
\
func LoginHandler(db *sql.DB, rdb *redis.Client) echo.HandlerFunc {\
	return func(c echo.Context) error {\
		var req LoginRequest\
		if err := c.Bind(&req); err != nil {\
			return c.JSON(http.StatusBadRequest, map[string]string{"error": "invalid request"})\
		}\
\
		// –Éø–æ–ª—É£—Éß–∞–µ–º –ø–æ–ª—É¨–∑–æ–≤–∞—Ç–µ–ª—ÉØ –∏–∑ –É±–É¥\
		var (\
			id           int\
			passwordHash string\
		)\
		err := db.QueryRow(\
			"SELECT id, password_hash FROM users WHERE email = ?",\
			req.Email,\
		).Scan(&id, &passwordHash)\
		\
		if err != nil {\
			return c.JSON(http.StatusUnauthorized, map[string]string{"error": "invalid credentials"})\
		}\
\
		// –Éø—Ä–æ–≤–µ—Ä—ÉØ–µ–º –ø–∞—Ä–æ–ª—É¨\
		if !common.VerifyPassword(req.Password, passwordHash) {\
			return c.JSON(http.StatusUnauthorized, map[string]string{"error": "invalid credentials"})\
		}\
\
		// –É≥–µ–Ω–µ—Ä–∏—Ä—É£–µ–º JWT —Ç–æ–∫–µ–Ω\
		token := jwt.NewWithClaims(jwt.SigningMethodHS256, jwt.RegisteredClaims{\
			Subject:   fmt.Sprintf("%d", id),\
			ExpiresAt: jwt.NewNumericDate(time.Now().Add(24 * time.Hour)),\
		})\
\
		accessToken, err := token.SignedString([]byte(os.Getenv("JWT_SECRET")))\
		if err != nil {\
			return c.JSON(http.StatusInternalServerError, map[string]string{"error": "token generation failed"})\
		}\
\
		// –ÉÅ–æ—É•—Ä–∞–Ω—ÉØ–µ–º refresh —Ç–æ–∫–µ–Ω –≤ Redis\
		refreshToken := uuid.New().String()\
		err = rdb.Set(c.Request().Context(), \
			fmt.Sprintf("refresh:%d", id), \
			refreshToken, \
			7*24*time.Hour,\
		).Err()\
		\
		if err != nil {\
			return c.JSON(http.StatusInternalServerError, map[string]string{"error": "failed to store refresh token"})\
		}\
\
		return c.JSON(http.StatusOK, map[string]string{\
			"access_token":  accessToken,\
			"refresh_token": refreshToken,\
		})\
	}\
}\
EOF
v /home/ame/code/notify-platform/user-service/internal/handler/auth.go
v /home/ame/code/notify-platform/user-service/cmd/main.go
cd user-service
go get github.com/redis/go-redis/v9
v /home/ame/code/notify-platform/user-service/cmd/main.go
cd /home/ame/code/notify-platform\

docker-compose -f deployments/docker-compose.yml down\

docker-compose -f deployments/docker-compose.yml up -d\

docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql
cd /home/ame/code/notify-platform/user-service\

go mod tidy\

SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
go run cmd/main.go
v /home/ame/code/notify-platform/user-service/internal/handler/auth.go
go get github.com/google/uuid\
go get golang.org/x/crypto/argon2
go mod tidy
v /home/ame/code/notify-platform/user-service/internal/handler/auth.go
SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
go run cmd/main.go
clear
cd code/notify-platform
docker-compose -f deployments/docker-compose.yml down\

docker-compose -f deployments/docker-compose.yml up -d\

docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql\

cd /home/ame/code/notify-platform/user-service\

go mod tidy
SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
go run cmd/main.go
SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
REDIS_HOST=localhost \\
REDIS_PORT=6379 \\
JWT_SECRET=your_jwt_secret_here \\
go run cmd/main.go
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"test@example.com", "password":"securepass123"}'
clear
docker-compose -f deployments/docker-compose.yml down\

clear
mkdir -p user-service/internal/middleware\

cat << EOF > user-service/internal/middleware/auth.go\
package middleware\
\
import (\
	"errors"\
	"net/http"\
	"strings"\
	\
	"github.com/golang-jwt/jwt/v5"\
	"github.com/labstack/echo/v4"\
)\
\
func JWTAuth(secret string) echo.MiddlewareFunc {\
	return func(next echo.HandlerFunc) echo.HandlerFunc {\
		return func(c echo.Context) error {\
			authHeader := c.Request().Header.Get("Authorization")\
			if authHeader == "" {\
				return c.JSON(http.StatusUnauthorized, map[string]string{"error": "missing authorization header"})\
			}\
\
			tokenString := strings.TrimPrefix(authHeader, "Bearer ")\
			if tokenString == authHeader {\
				return c.JSON(http.StatusUnauthorized, map[string]string{"error": "invalid token format"})\
			}\
\
			token, err := jwt.Parse(tokenString, func(token *jwt.Token) (interface{}, error) {\
				if _, ok := token.Method.(*jwt.SigningMethodHMAC); !ok {\
					return nil, errors.New("unexpected signing method")\
				}\
				return []byte(secret), nil\
			})\
\
			if err != nil || !token.Valid {\
				return c.JSON(http.StatusUnauthorized, map[string]string{"error": "invalid token"})\
			}\
\
			claims, ok := token.Claims.(jwt.MapClaims)\
			if !ok {\
				return c.JSON(http.StatusUnauthorized, map[string]string{"error": "invalid token claims"})\
			}\
\
			c.Set("userID", claims["sub"])\
			return next(c)\
		}\
	}\
}\
EOF
v /home/ame/code/notify-platform/user-service/cmd/main.go
v /home/ame/code/notify-platform/user-service/internal/middleware/auth.go
v /home/ame/code/notify-platform/user-service/cmd/main.go
v /home/ame/code/notify-platform/user-service/internal/middleware/auth.go
v /home/ame/code/notify-platform/user-service/cmd/main.go
docker-compose -f deployments/docker-compose.yml up -d\

docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql\

cd /home/ame/code/notify-platform/user-service\

go mod tidy
SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
REDIS_HOST=localhost \\
REDIS_PORT=6379 \\
JWT_SECRET=your_jwt_secret_here \\
go run cmd/main.go
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"test@example.com", "password":"securepass123"}'
curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZXhwIjoxNzQ4NDQ5MjExfQ.eU9RfTef9Cq-fN5CInhMZfjlPkVzgJXoV1n_Yb-Ltuc" http://localhost:8081/api/me\

clear
ga
gcm "JWT Authentication"
clear
docker-compose -f deployments/docker-compose.yml down\

cd code/notify-platform
docker-compose -f deployments/docker-compose.yml down\

ls
cd code/notify-platform
ls
mkdir -p /home/ame/code/notify-platform/notification-service/{cmd,internal/queue,internal/handler}
cd /home/ame/code/notify-platform/notification-service\

go mod init github.com/skillissu3e/notify-platform/notification-service\

go get github.com/labstack/echo/v4 github.com/streadway/amqp
go get github.com/labstack/echo/v4 github.com/rabbitmq/amqp091-go
clear
cat << EOF > cmd/main.go\
package main\
\
import (\
	"log"\
	"net/http"\
	"os"\
\
	"github.com/labstack/echo/v4"\
	"github.com/streadway/amqp"\
)\
\
func main() {\
	// –Éø–æ–¥–∫–ª—ÉÆ—Éß–µ–Ω–∏–µ –∫ RabbitMQ\
	conn, err := amqp.Dial("amqp://guest:guest@localhost:5672/")\
	if err != nil {\
		log.Fatal("Failed to connect to RabbitMQ:", err)\
	}\
	defer conn.Close()\
\
	// –ÉÅ–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞\
	ch, err := conn.Channel()\
	if err != nil {\
		log.Fatal("Failed to open a channel:", err)\
	}\
	defer ch.Close()\
\
	// –ÉÅ–æ–∑–¥–∞–Ω–∏–µ Exchange\
	err = ch.ExchangeDeclare(\
		"notifications", // name\
		"direct",        // type\
		true,            // durable\
		false,           // auto-deleted\
		false,           // internal\
		false,           // no-wait\
		nil,             // arguments\
	)\
	if err != nil {\
		log.Fatal("Failed to declare an exchange:", err)\
	}\
\
	// –É∏–Ω–∏—É¶–∏–∞–ª–∏–∑–∞—É¶–∏—ÉØ Echo\
	e := echo.New()\
\
	// –Éº–∞—Ä—É®—Ä—É£—Ç—É´\
	e.POST("/notify", func(c echo.Context) error {\
		// –É∑–¥–µ—Å—É¨ –±—É£–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\
		return c.JSON(http.StatusOK, map[string]string{"status": "received"})\
	})\
\
	// –É∑–∞–ø—É£—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞\
	port := os.Getenv("SERVER_PORT")\
	if port == "" {\
		port = "8082"\
	}\
	e.Logger.Fatal(e.Start(":" + port))\
}\
EOF
SERVER_PORT=8082 go run cmd/main.go\

v /home/ame/code/notify-platform/notification-service/cmd/main.go
go get github.com/labstack/echo/v4 github.com/streadway/amqp
cat << EOF > notification-service/cmd/main.go\
package main\
\
import (\
	"encoding/json"\
	"log"\
	"net/http"\
	"os"\
\
	"github.com/labstack/echo/v4"\
	amqp "github.com/rabbitmq/amqp091-go"\
)\
\
func main() {\
	// –Éø–æ–¥–∫–ª—ÉÆ—Éß–µ–Ω–∏–µ –∫ RabbitMQ\
	conn, err := amqp.Dial("amqp://guest:guest@localhost:5672/")\
	if err != nil {\
		log.Fatal("Failed to connect to RabbitMQ:", err)\
	}\
	defer conn.Close()\
\
	// –ÉÅ–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞\
	ch, err := conn.Channel()\
	if err != nil {\
		log.Fatal("Failed to open a channel:", err)\
	}\
	defer ch.Close()\
\
	// –ÉÅ–æ–∑–¥–∞–Ω–∏–µ Exchange\
	err = ch.ExchangeDeclare(\
		"notifications", // name\
		"direct",        // type\
		true,            // durable\
		false,           // auto-deleted\
		false,           // internal\
		false,           // no-wait\
		nil,             // arguments\
	)\
	if err != nil {\
		log.Fatal("Failed to declare an exchange:", err)\
	}\
\
	// –É∏–Ω–∏—É¶–∏–∞–ª–∏–∑–∞—É¶–∏—ÉØ Echo\
	e := echo.New()\
\
	// –Éº–∞—Ä—É®—Ä—É£—Ç—É´\
	e.POST("/notify", func(c echo.Context) error {\
		// –É≤—Ä–µ–º–µ–Ω–Ω–∞—ÉØ –∑–∞–≥–ª—É£—É®–∫–∞\
		return c.JSON(http.StatusOK, map[string]string{"status": "received"})\
	})\
\
	// –É∑–∞–ø—É£—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞\
	port := os.Getenv("SERVER_PORT")\
	if port == "" {\
		port = "8082"\
	}\
	e.Logger.Fatal(e.Start(":" + port))\
}\
EOF
cd ..
tree
cd notification-service
cd ..
cat << EOF > notification-service/cmd/main.go\
package main\
\
import (\
	"encoding/json"\
	"log"\
	"net/http"\
	"os"\
\
	"github.com/labstack/echo/v4"\
	amqp "github.com/rabbitmq/amqp091-go"\
)\
\
func main() {\
	// –Éø–æ–¥–∫–ª—ÉÆ—Éß–µ–Ω–∏–µ –∫ RabbitMQ\
	conn, err := amqp.Dial("amqp://guest:guest@localhost:5672/")\
	if err != nil {\
		log.Fatal("Failed to connect to RabbitMQ:", err)\
	}\
	defer conn.Close()\
\
	// –ÉÅ–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞\
	ch, err := conn.Channel()\
	if err != nil {\
		log.Fatal("Failed to open a channel:", err)\
	}\
	defer ch.Close()\
\
	// –ÉÅ–æ–∑–¥–∞–Ω–∏–µ Exchange\
	err = ch.ExchangeDeclare(\
		"notifications", // name\
		"direct",        // type\
		true,            // durable\
		false,           // auto-deleted\
		false,           // internal\
		false,           // no-wait\
		nil,             // arguments\
	)\
	if err != nil {\
		log.Fatal("Failed to declare an exchange:", err)\
	}\
\
	// –É∏–Ω–∏—É¶–∏–∞–ª–∏–∑–∞—É¶–∏—ÉØ Echo\
	e := echo.New()\
\
	// –Éº–∞—Ä—É®—Ä—É£—Ç—É´\
	e.POST("/notify", func(c echo.Context) error {\
		// –É≤—Ä–µ–º–µ–Ω–Ω–∞—ÉØ –∑–∞–≥–ª—É£—É®–∫–∞\
		return c.JSON(http.StatusOK, map[string]string{"status": "received"})\
	})\
\
	// –É∑–∞–ø—É£—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞\
	port := os.Getenv("SERVER_PORT")\
	if port == "" {\
		port = "8082"\
	}\
	e.Logger.Fatal(e.Start(":" + port))\
}\
EOF
cd /home/ame/code/notify-platform/notification-service\

go get github.com/rabbitmq/amqp091-go@latest\

go mod tidy\

SERVER_PORT=8082 go run cmd/main.go\

v cmd/main.go
SERVER_PORT=8082 go run cmd/main.go\

cd /home/ame/code/notify-platform
docker ps
docker-compose -f deployments/docker-compose.yml up -d\

docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql
cd /home/ame/code/notify-platform/user-service
go mod tidy\

SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
REDIS_HOST=localhost \\
REDIS_PORT=6379 \\
JWT_SECRET=your_jwt_secret_here \\
go run cmd/main.go
cd /home/ame/code/notify-platform/notification-service\

SERVER_PORT=8082 go run cmd/main.go\

curl -X POST http://localhost:8082/notify\

v /home/ame/code/notify-platform/notification-service/internal/handler/notification.go
cd code/notify-platform
cat << EOF > notification-service/internal/handler/notification.go\
package handler\
\
import (\
	"encoding/json"\
	"net/http"\
\
	"github.com/labstack/echo/v4"\
	amqp "github.com/rabbitmq/amqp091-go"\
)\
\
type NotificationRequest struct {\
	Channel   string            `json:"channel" validate:"required,oneof=email telegram whatsapp vk push"`\
	Recipient string            `json:"recipient" validate:"required"`\
	Subject   string            `json:"subject" validate:"required"`\
	Body      string            `json:"body" validate:"required"`\
	Data      map[string]string `json:"data"`\
}\
\
func NotifyHandler(ch *amqp.Channel) echo.HandlerFunc {\
	return func(c echo.Context) error {\
		var req NotificationRequest\
		if err := c.Bind(&req); err != nil {\
			return c.JSON(http.StatusBadRequest, map[string]string{"error": "invalid request"})\
		}\
\
		// –É≤–∞–ª–∏–¥–∞—É¶–∏—ÉØ\
		if err := c.Validate(req); err != nil {\
			return c.JSON(http.StatusBadRequest, map[string]string{"error": err.Error()})\
		}\
\
		// –ÉÅ–µ—Ä–∏–∞–ª–∏–∑–∞—É¶–∏—ÉØ —Å–æ–æ–±—É©–µ–Ω–∏—ÉØ\
		message, err := json.Marshal(req)\
		if err != nil {\
			return c.JSON(http.StatusInternalServerError, map[string]string{"error": "failed to serialize message"})\
		}\
\
		// –Éø—É£–±–ª–∏–∫–∞—É¶–∏—ÉØ –≤ RabbitMQ\
		err = ch.Publish(\
			"notifications", // exchange\
			req.Channel,     // routing key\
			false,           // mandatory\
			false,           // immediate\
			amqp.Publishing{\
				ContentType: "application/json",\
				Body:        message,\
			},\
		)\
		if err != nil {\
			return c.JSON(http.StatusInternalServerError, map[string]string{"error": "failed to publish message"})\
		}\
\
		return c.JSON(http.StatusAccepted, map[string]string{"status": "queued"})\
	}\
}\
EOF
v /home/ame/code/notify-platform/notification-service/internal/handler/notification.go
v cmd/main.go
v /home/ame/code/notify-platform/notification-service/cmd/main.go
mkdir -p /home/ame/code/notify-platform/workers/email-worker/{cmd,internal}\

cd /home/ame/code/notify-platform/workers/email-worker\

go mod init github.com/skillissu3e/notify-platform/workers/email-worker\

cd ..
cat << EOF > workers/email-worker/cmd/main.go\
package main\
\
import (\
	"context"\
	"encoding/json"\
	"log"\
	"os"\
	"time"\
\
	amqp "github.com/rabbitmq/amqp091-go"\
	"github.com/emersion/go-smtp"\
)\
\
type NotificationMessage struct {\
	Channel   string            `json:"channel"`\
	Recipient string            `json:"recipient"`\
	Subject   string            `json:"subject"`\
	Body      string            `json:"body"`\
	Data      map[string]string `json:"data"`\
}\
\
func main() {\
	// –Éø–æ–¥–∫–ª—ÉÆ—Éß–µ–Ω–∏–µ –∫ RabbitMQ\
	conn, err := amqp.Dial("amqp://guest:guest@localhost:5672/")\
	if err != nil {\
		log.Fatal("Failed to connect to RabbitMQ:", err)\
	}\
	defer conn.Close()\
\
	ch, err := conn.Channel()\
	if err != nil {\
		log.Fatal("Failed to open a channel:", err)\
	}\
	defer ch.Close()\
\
	// –Éæ–±—É™—ÉØ–≤–ª—ÉØ–µ–º exchange (–µ—Å–ª–∏ –µ—É©–µ –Ω–µ —Å–æ–∑–¥–∞–Ω)\
	err = ch.ExchangeDeclare(\
		"notifications",\
		"direct",\
		true,\
		false,\
		false,\
		false,\
		nil,\
	)\
	if err != nil {\
		log.Fatal("Failed to declare an exchange:", err)\
	}\
\
	// –ÉÅ–æ–∑–¥–∞–µ–º –æ—Éß–µ—Ä–µ–¥—É¨\
	q, err := ch.QueueDeclare(\
		"email_queue", // name\
		true,          // durable\
		false,         // delete when unused\
		false,         // exclusive\
		false,         // no-wait\
		nil,           // arguments\
	)\
	if err != nil {\
		log.Fatal("Failed to declare a queue:", err)\
	}\
\
	// –Éø—Ä–∏–≤—ÉØ–∑—É´–≤–∞–µ–º –æ—Éß–µ—Ä–µ–¥—É¨ –∫ exchange\
	err = ch.QueueBind(\
		q.Name,        // queue name\
		"email",       // routing key\
		"notifications", // exchange\
		false,\
		nil,\
	)\
	if err != nil {\
		log.Fatal("Failed to bind a queue:", err)\
	}\
\
	// –ÉÄ–µ–≥–∏—Å—Ç—Ä–∏—Ä—É£–µ–º –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—ÉØ\
	msgs, err := ch.Consume(\
		q.Name, // queue\
		"",     // consumer\
		false,  // auto-ack\
		false,  // exclusive\
		false,  // no-local\
		false,  // no-wait\
		nil,    // args\
	)\
	if err != nil {\
		log.Fatal("Failed to register a consumer:", err)\
	}\
\
	// –Éæ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—É©–µ–Ω–∏–π\
	forever := make(chan bool)\
\
	go func() {\
		for d := range msgs {\
			// –É¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—É¶–∏—ÉØ —Å–æ–æ–±—É©–µ–Ω–∏—ÉØ\
			var msg NotificationMessage\
			if err := json.Unmarshal(d.Body, &msg); err != nil {\
				log.Printf("Failed to unmarshal message: %s", err)\
				d.Nack(false, false) // –Éæ—Ç–±—Ä–∞—Å—É´–≤–∞–µ–º —Å–æ–æ–±—É©–µ–Ω–∏–µ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏\
				continue\
			}\
\
			// –Éæ—Ç–ø—Ä–∞–≤–∫–∞ email\
			if err := sendEmail(msg.Recipient, msg.Subject, msg.Body); err != nil {\
				log.Printf("Failed to send email: %s", err)\
				d.Nack(false, true) // –Éø–æ–≤—Ç–æ—Ä–Ω–∞—ÉØ –æ–±—Ä–∞–±–æ—Ç–∫–∞\
				continue\
			}\
\
			d.Ack(false)\
		}\
	}()\
\
	log.Printf("Email worker started. Waiting for messages.")\
	<-forever\
}\
\
func sendEmail(to, subject, body string) error {\
	// –É∫–æ–Ω—É§–∏–≥—É£—Ä–∞—É¶–∏—ÉØ SMTP —Å–µ—Ä–≤–µ—Ä–∞\
	smtpHost := os.Getenv("SMTP_HOST")\
	smtpPort := os.Getenv("SMTP_PORT")\
	smtpUser := os.Getenv("SMTP_USER")\
	smtpPass := os.Getenv("SMTP_PASSWORD")\
\
	// –ÉÅ–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç\
	client, err := smtp.Dial(smtpHost + ":" + smtpPort)\
	if err != nil {\
		return err\
	}\
	defer client.Close()\
\
	// –É∞—É£—Ç–µ–Ω—Ç–∏—É§–∏–∫–∞—É¶–∏—ÉØ\
	if err := client.Auth(smtp.PlainAuth("", smtpUser, smtpPass, smtpHost)); err != nil {\
		return err\
	}\
\
	// –Éæ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—É©–µ–Ω–∏—ÉØ\
	msg := []byte("To: " + to + "\r\n" +\
		"Subject: " + subject + "\r\n" +\
		"\r\n" +\
		body + "\r\n")\
\
	return client.SendMail(smtpUser, []string{to}, strings.NewReader(string(msg)))\
}\
EOF
sed -i '/"github.com\/emersion\/go-smtp"/a \\t"strings"' workers/email-worker/cmd/main.go\

cd /home/ame/code/notify-platform/workers/email-worker\

go get github.com/rabbitmq/amqp091-go@latest github.com/emersion/go-smtp@latest\

v /home/ame/code/notify-platform/workers/email-worker/cmd/main.go
cd /home/ame/code/notify-platform/workers/email-worker\

go get github.com/emersion/go-sasl@latest\

docker-compose -f deployments/docker-compose.yml down\

v deployments/docker-compose.yml
docker-compose -f deployments/docker-compose.yml up -d\

go mod tidy\

SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
REDIS_HOST=localhost \\
REDIS_PORT=6379 \\
JWT_SECRET=your_jwt_secret_here \\
go run cmd/main.go
SERVER_PORT=8082 go run cmd/main.go\

cd /home/ame/code/notify-platform/workers/email-worker\

SMTP_HOST=localhost SMTP_PORT=1025 go run cmd/main.go\

curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test Email",\
    "body": "This is a test email from our notification system!"\
  }'
cat << EOF >> deployments/docker-compose.yml\
\
  smtp:\
    image: mailhog/mailhog:latest\
    ports:\
      - "1025:1025"\
      - "8025:8025"\
EOF
v deployments/docker-compose.yml
docker-compose -f deployments/docker-compose.yml down\

docker-compose -f deployments/docker-compose.yml up -d\

docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql
SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
REDIS_HOST=localhost \\
REDIS_PORT=6379 \\
JWT_SECRET=your_jwt_secret_here \\
go run cmd/main.go
SERVER_PORT=8082 go run cmd/main.go\

SMTP_HOST=localhost SMTP_PORT=1025 go run cmd/main.go\

curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test Email",\
    "body": "This is a test email from our notification system!"\
  }'
cd /home/ame/code/notify-platform/notification-service\

go get github.com/go-playground/validator/v10\

go mod tidy\

SERVER_PORT=8082 go run cmd/main.go\

curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test Email",\
    "body": "This is a test email from our notification system!"\
  }'
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"test@example.com", "password":"securepass123"}'
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZXhwIjoxNzQ4NTIyMTM4fQ.esb3NDPV3MgZaQ_PHuQubIgCQt2-PeSpCO-rN6sjw7g","refresh_token":"332f0d0f-9d8c-4d6e-a186-a37bef2a68df" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Protected Email",\
    "body": "This email was sent using JWT authentication!"\
  }'
SMTP_HOST=localhost SMTP_PORT=1025 go run cmd/main.go\

v .env
source /home/ame/code/notify-platform/.env\

go run cmd/main.go\

curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test Corrected Implementation",\
    "body": "This should work now!"\
  }'
docker-compose -f deployments/docker-compose.yml down\

docker-compose -f deployments/docker-compose.yml up -d\

docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql
SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
REDIS_HOST=localhost \\
REDIS_PORT=6379 \\
JWT_SECRET=your_jwt_secret_here \\
go run cmd/main.go
SERVER_PORT=8082 go run cmd/main.go\

go run cmd/main.go\

curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test Corrected Implementation",\
    "body": "This should work now!"\
  }'
docker ps -f name=deployments-smtp-1\

docker logs deployments-smtp-1\

sudo pacman -S inetutils
telnet localhost 1025\

go run cmd/main.go\

curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test Corrected Implementation",\
    "body": "This should work now!"\
  }'
go mod tidy\

SMTP_HOST=localhost SMTP_PORT=1025 go run cmd/main.go\

curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test with net/smtp",\
    "body": "This email was sent using Go net/smtp package"\
  }'
cd code/notify-platform
ga
gcm "Implementation of notification service and email-worker"
clear
docker-compose -f deployments/docker-compose.yml down\

cd code/notify-platform
mkdir -p /home/ame/code/notify-platform/workers/telegram-worker/{cmd,internal}\

cd /home/ame/code/notify-platform/workers/telegram-worker\

go mod init github.com/skillissu3e/notify-platform/workers/telegram-worker\

go get github.com/rabbitmq/amqp091-go github.com/go-telegram-bot-api/telegram-bot-api/v5\

v /home/ame/code/notify-platform/workers/telegram-worker/cmd/main.go\

clear
v /home/ame/code/notify-platform/workers/telegram-worker/cmd/main.go\

cd code/notify-platform
v .env
cd code/notify-platform
v .env
cd /home/ame/code/notify-platform\

docker-compose -f deployments/docker-compose.yml up -d
docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql
cd /home/ame/code/notify-platform/user-service
SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
REDIS_HOST=localhost \\
REDIS_PORT=6379 \\
JWT_SECRET=your_jwt_secret_here \\
go run cmd/main.go
cd /home/ame/code/notify-platform/notification-service\

SERVER_PORT=8082 go run cmd/main.go\

curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "Hello from Telegram Worker!",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'
cd /home/ame/code/notify-platform/workers/telegram-worker\

go run cmd/main.go\

TELEGRAM_BOT_TOKEN=903968693 go run cmd/main.go\

cd code/notify-platform
v .env
source /home/ame/code/notify-platform/.env\

go run cmd/main.go\

cd code/notify-platform
v .env
curl "https://api.telegram.org/bot7787045212:AAHlQOfw_Dw1zzrGr_rz4-aUYE6hF9mOKk4/getUpdates"
v /home/ame/code/notify-platform/workers/telegram-worker/cmd/main.go\

docker-compose -f deployments/docker-compose.yml down\

cd code/notify-platform
docker-compose -f deployments/docker-compose.yml down\

cd code/notify-platform
docker-compose -f deployments/docker-compose.yml up -d\

cd /home/ame/code/notify-platform/user-service\

SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
REDIS_HOST=localhost \\
REDIS_PORT=6379 \\
JWT_SECRET=your_jwt_secret_here \\
go run cmd/main.go
cd /home/ame/code/notify-platform/notification-service\

go run cmd/main.go\

cd /home/ame/code/notify-platform/workers/telegram-worker\

curl -X POST "https://api.telegram.org/bot7787045212:AAHlQOfw_Dw1zzrGr_rz4-aUYE6hF9mOKk4\
/sendMessage" \\
  -H "Content-Type: application/json" \\
  -d '{\
    "chat_id": 903968693,\
    "text": "Test direct message",\
    "parse_mode": "Markdown"\
  }'
curl -X POST "https://api.telegram.org/bot7787045212:AAHlQOfw_Dw1zzrGr_rz4-aUYE6hF9mOKk4/sendMessage" \\
\
  -H "Content-Type: application/json" \\
  -d '{\
    "chat_id": 903968693,\
    "text": "Test direct message",\
    "parse_mode": "Markdown"\
  }'
go run cmd/main.go\

TELEGRAM_BOT_TOKEN=903968693 go run cmd/main.go\

cd code/notify-platform
v .env
v /home/ame/code/notify-platform/workers/telegram-worker/cmd/main.go
v start-all.sh
v stop-all.sh
chmod +x start-all.sh stop-all.sh
./stop-all.sh
./start-all.sh
curl -X POST http://localhost:8081/register \\
  -H "Content-Type: application/json" \\
  -d '{"email":"test@example.com", "password":"securepass123"}'
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"test@example.com", "password":"securepass123"}'
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZXhwIjoxNzQ4NTg2OTgxfQ.-YdyzQmb0R5MniQoy-gDASUrG1TWS4ZZ38j9pLB__HI","refresh_token":"66701bb7-859b-4a73-ae1f-4a7980d9d50c" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "Hello from Telegram Worker!",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'
curl http://localhost:8081/health\

clear
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZXhwIjoxNzQ4NTg2OTgxfQ.-YdyzQmb0R5MniQoy-gDASUrG1TWS4ZZ38j9pLB__HI","refresh_token":"66701bb7-859b-4a73-ae1f-4a7980d9d50c" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test Email",\
    "body": "This is a test email from our notification system!"\
  }'
./stop-all.sh
cd code/notify-platform
docker-compose -f deployments/docker-compose.yml up -d\

docker ps
v .env
docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql
cd code/notify-platform
cd user-service
SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
REDIS_HOST=localhost \\
REDIS_PORT=6379 \\
JWT_SECRET=your_strong_secret_here \\
go run cmd/main.go
btop
reboot
sway
cd /home/ame/code/notify-platform\

sudo systemctl start docker
sudo systemctl status docker
sudo systemctl start docker
docker-compose -f deployments/docker-compose.yml up -d\

clear
docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql\

cd code/notify-platform/user-service\
SERVER_PORT=8081 MYSQL_USER=app MYSQL_PASSWORD=app_password MYSQL_DATABASE=notify REDIS_HOST=localhost REDIS_PORT=6379 JWT_SECRET=your_strong_secret_here go run cmd/main.go > ../user-service.log 2>&1 &
cd code/notify-platform/notification-service
SERVER_PORT=8082 \\
go run cmd/main.go
SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
REDIS_HOST=localhost \\
REDIS_PORT=6379 \\
JWT_SECRET=your_strong_secret_here \\
go run cmd/main.go
cd code/notify-platform/workers/telegram-worker
source ../../.env\
go run cmd/main.go
TELEGRAM_BOT_TOKEN=903968693 go run cmd/main.go\

v cmd/main.go
cd 
cd code/notify-platform/
v .env
cd code
cd notify-platform
ls
v telegram-worker.log
v email-worker.log
v notification-service
v notification-service.log
v user-service.log
cd /home/ame/code/notify-platform\

docker-compose -f deployments/docker-compose.yml down\

docker-compose -f deployments/docker-compose.yml  up -d\

docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql
cd code/notify-platform
cd user-service\
SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
REDIS_HOST=localhost \\
REDIS_PORT=6379 \\
JWT_SECRET=your_strong_secret_here \\
go run cmd/main.go
cd code/notify-platform
cd notification-service\
SERVER_PORT=8082 \\
go run cmd/main.go
cd /home/ame/code/notify-platform/workers/telegram-worker\

TELEGRAM_BOT_TOKEN=$(grep TELEGRAM_BOT_TOKEN ../../.env | cut -d '=' -f2) \\
go run cmd/main.go
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "Hello from FIXED Telegram Worker!",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'
v telegram-worker-test.log
v email-worker-test.log
cd ../email-worker
ls
SMTP_HOST=localhost SMTP_PORT=1025 go run cmd/main.go\

curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test with net/smtp",\
    "body": "This email was sent using Go net/smtp package"\
  }'
clear
docker-compose -f deployments/docker-compose.yml down\

cd code/notify-platform
ga
gcm "Implementation of telegram-worker"
clear
v start-all.sh
v telegram-worker-test.log
v stop-all.sh
chmod +x start-all.sh stop-all.sh
mkdir -p /home/ame/code/notify-platform/workers/vk-worker/{cmd,internal}
cd /home/ame/code/notify-platform/workers/vk-worker\

go mod init github.com/skillissu3e/notify-platform/workers/vk-worker\

go get github.com/rabbitmq/amqp091-go github.com/SevereCloud/vksdk/v2/api
go mod tidy\

v /home/ame/code/notify-platform/workers/vk-worker/cmd/main.go
go get github.com/rabbitmq/amqp091-go github.com/SevereCloud/vksdk/v2/api
v /home/ame/code/notify-platform/workers/vk-worker/cmd/main.go
cd code/notify-platform
v .env
v /home/ame/code/notify-platform/workers/vk-worker/cmd/main.go
sudo pacman -Syyu
paru
rm -rf /home/ame/code/notify-platform/workers/vk-worker\

sed -i '/VK_/d' /home/ame/code/notify-platform/.env\

cd code/notify-platform
v .env
cd
docker exec deployments-rabbitmq-1 rabbitmqadmin delete queue name=vk_queue\

cd code/notify-platform
mkdir -p /home/ame/code/notify-platform/workers/whatsapp-worker/{cmd,internal}\

clear
v /home/ame/code/notify-platform/workers/whatsapp-worker/cmd/main.go
cd /home/ame/code/notify-platform/workers/whatsapp-worker\

go mod init github.com/skillissu3e/notify-platform/workers/whatsapp-worker\

clear
v /home/ame/code/notify-platform/workers/whatsapp-worker/cmd/main.go
go get github.com/rabbitmq/amqp091-go
v /home/ame/code/notify-platform/workers/whatsapp-worker/cmd/main.go
cd ..
v .env
cd 
cd code/notify-platform
v start-all.sh
chmod +x start-all.sh stop-all.sh
./stop-all.sh
./start-all.sh
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "whatsapp",\
    "recipient": "79192492745",\
    "body": "Hello from Green-API!"\
  }'
v start-all.sh
ll
clear
ls
mv start-all.sh stop-all.sh scripts
ls
mkdir logs
mv email-worker.log notification-service.log telegram-worker.log user-service.log logs
ll
v scripts/start-all.sh
chmod +x scripts/start-all.sh scripts/stop-all.sh
cd code/notify-platform
ga
ll
v email-worker-test.log
v whatsapp-worker-test.log
v scripts/start-all.sh
v email-worker-test.log
v scripts/start-all.sh
v whatsapp-worker-test.log
cd code/notify-platform
ls
cd scripts
ls
mkdir verbose
ls
cd
ls
mv email-worker-test.log telegram-worker-test.log whatsapp-worker-test.log ~/code/notify-platform/scripts/verbose
cd code/notify-platform
cd scripts/verbose
ls
mv email-worker-test.log email-worker-setup
ls
v email-worker-setup
v telegram-worker-test.log telegram-worker-setup
mv telegram-worker-test.log telegram-worker-setup
mv whatsapp-worker-test.log whatsapp-worker-setup
ll
v telegram-worker-setup
cd ..
ls
ga
gcm "Implementation of whatsapp-worker; Updated scripts"
clear
ls
mkdir -p /home/ame/code/notify-platform/workers/viber-worker/{cmd,internal}
v /home/ame/code/notify-platform/workers/viber-worker/cmd/main.go
v .env
cd /home/ame/code/notify-platform/workers/viber-worker\

go mod init github.com/skillissu3e/notify-platform/workers/viber-worker\

clear
go get github.com/rabbitmq/amqp091-go
v /home/ame/code/notify-platform/workers/viber-worker/cmd/main.go
cd ..
ls
rm viber-worker
ls
cd ..
ls
v .env
echo .env >> .gitignore
git status
ga
git status
gcm ".gitignore"
clear
ll
tree
v .env
clear
rm -rf /home/ame/code/notify-platform/workers/push-worker
ll
cd api-gateway
ll
cd ..
ls
rm api-gateway
ll
clear
ls
clea
clear
ll
clear
ls
v deployments/docker-compose.yml
mkdir -p /home/ame/code/notify-platform/deployments/prometheus\

cat << EOF > deployments/prometheus/prometheus.yml\
global:\
  scrape_interval: 15s\
  evaluation_interval: 15s\
\
scrape_configs:\
  - job_name: 'notify-platform'\
    static_configs:\
      - targets: ['host.docker.internal:8081'] # User Service\
      - targets: ['host.docker.internal:8082'] # Notification Service\
\
  - job_name: 'rabbitmq'\
    static_configs:\
      - targets: ['rabbitmq:15692'] # RabbitMQ Prometheus plugin\
\
  - job_name: 'node'\
    static_configs:\
      - targets: ['node-exporter:9100'] # –É¥–ª—ÉØ —Å–±–æ—Ä–∞ —Å–∏—Å—Ç–µ–º–Ω—É´—É• –º–µ—Ç—Ä–∏–∫\
\
  - job_name: 'docker'\
    static_configs:\
      - targets: ['docker-exporter:9323'] # –É¥–ª—ÉØ —Å–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫ Docker\
EOF
v deployments/prometheus
cd deployments
ll
cd ..
ls
cd deployments
ls
rm prometheus.yml
ls
cd prometheus
ls
v prometheus.yml
cd ..
.. 1
mkdir -p /home/ame/code/notify-platform/deployments/loki\

cat << EOF > deployments/loki/loki-config.yml\
auth_enabled: false\
\
server:\
  http_listen_port: 3100\
\
ingester:\
  lifecycler:\
    address: 127.0.0.1\
    ring:\
      kvstore:\
        store: inmemory\
      replication_factor: 1\
    final_sleep: 0s\
  chunk_idle_period: 5m\
  chunk_retain_period: 30s\
  max_transfer_retries: 0\
\
schema_config:\
  configs:\
    - from: 2020-10-24\
      store: boltdb\
      object_store: filesystem\
      schema: v11\
      index:\
        prefix: index_\
        period: 24h\
\
storage_config:\
  boltdb:\
    directory: /loki/index\
  filesystem:\
    directory: /loki/chunks\
\
limits_config:\
  enforce_metric_name: false\
  reject_old_samples: true\
  reject_old_samples_max_age: 168h\
\
chunk_store_config:\
  max_look_back_period: 0s\
\
table_manager:\
  retention_deletes_enabled: false\
  retention_period: 0s\
EOF
v deployments/loki/loki-config.yml
mkdir -p /home/ame/code/notify-platform/deployments/promtail\

cat << EOF > deployments/promtail/promtail-config.yml\
server:\
  http_listen_port: 9080\
  grpc_listen_port: 0\
\
positions:\
  filename: /tmp/positions.yaml\
\
clients:\
  - url: http://loki:3100/loki/api/v1/push\
\
scrape_configs:\
- job_name: app\
  static_configs:\
  - targets:\
      - localhost\
    labels:\
      job: app\
      __path__: /app/**/*.log\
      host: \${HOSTNAME}\
\
- job_name: system\
  static_configs:\
  - targets:\
      - localhost\
    labels:\
      job: system\
      __path__: /var/log/**/*.log\
      host: \${HOSTNAME}\
EOF
mkdir -p /home/ame/code/notify-platform/deployments/grafana\

cat << EOF > deployments/grafana/datasources.yml\
apiVersion: 1\
\
datasources:\
  - name: Prometheus\
    type: prometheus\
    access: proxy\
    url: http://prometheus:9090\
    isDefault: true\
\
  - name: Loki\
    type: loki\
    access: proxy\
    url: http://loki:3100\
EOF\
\
cat << EOF > deployments/grafana/dashboards.yml\
apiVersion: 1\
\
providers:\
  - name: 'Default'\
    orgId: 1\
    folder: ''\
    type: file\
    disableDeletion: false\
    editable: true\
    options:\
      path: /var/lib/grafana/dashboards\
EOF\

mkdir -p /home/ame/code/notify-platform/deployments/grafana/dashboards\

v /home/ame/code/notify-platform/user-service/cmd/main.go
cd user-service
ls
go get github.com/prometheus/client_golang/prometheus\

go get github.com/prometheus/client_golang/prometheus/promhttp
go mod tidy
cd ..
ls
v scripts/start-all.sh
v home/ame/code/notify-platform/user-service/cmd/main.go
v /home/ame/code/notify-platform/user-service/cmd/main.go
cd user-service/
ls
cd ..
v /home/ame/code/notify-platform/user-service/cmd/main.go
cd user-service
go get github.com/labstack/echo/v4/middleware\

go mod tidy
v /home/ame/code/notify-platform/user-service/cmd/main.go
v /home/ame/code/notify-platform/notification-service/cmd/main.go
cd ..
cd notification-service
v /home/ame/code/notify-platform/notification-service/cmd/main.go
go get github.com/prometheus/client_golang/prometheus/promhttp
go get github.com/prometheus/client_golang/prometheus\

v /home/ame/code/notify-platform/notification-service/cmd/main.go
v /home/ame/code/notify-platform/notification-service/internal/handler/notification.go
v /home/ame/code/notify-platform/notification-service/cmd/main.go
v /home/ame/code/notify-platform/user-service/internal/middleware/auth.go
v /home/ame/code/notify-platform/notification-service/cmd/main.go
v home/ame/code/notify-platform/user-service/cmd/main.go
cd ..
v /home/ame/code/notify-platform/user-service/cmd/main.go
cd user-service
ls
cd internal
ls
rm model repository
ls
cd middleware
l
ll
cd ..
ls
cd ..
ls
tree
cd ..
v /home/ame/code/notify-platform/user-service/cmd/main.go
v /home/ame/code/notify-platform/user-service/internal/middleware/auth.go
v /home/ame/code/notify-platform/user-service/cmd/main.go
v deployments/prometheus/prometheus.yml
cd code/notify-platform
v deployments/prometheus/prometheus.yml
clear
ls
tree
clear
v scripts/start-all.sh
v scripts/stop-all.sh
chmod +x scripts/start-all.sh scripts/stop-all.sh
clear
ls
sed -i 's|notify-platform/user-service|user-service|g' /home/ame/code/notify-platform/user-service/cmd/main.go
v /home/ame/code/notify-platform/user-service/cmd/main.go
reboot
sway
v /home/ame/code/notify-platform/user-service/cmd/main.go
ls
cd code/notify-platform/user-service
ls
v go.mod
ll
cd internal
ls
ll
tree
v handler/auth.go
v middleware/auth.go
cd ..
v ma
v cmd/main.go
v internal/middleware/auth.go
reboot
sway
cd code/notify-platform/user-service
v internal/middleware/auth.go
cd ..
v /home/ame/code/notify-platform/user-service/cmd/main.go
cd user-service
ls
rm go.mod go.sum
go mod init github.com/skillissu3e/notify-platform/user-service\

ll
v cmd/main.go
rm go.mod go.sum
go mod init notify-platform/user-service\

v cmd/main.go
rm go.mod go.sum
go mod init github.com/skillissu3e/notify-platform/user-service\

v cmd/main.go
mv ~/code/notify-platform/pkg .
ls
v pkg/common/password.go
go get github.com/labstack/echo/v4/middleware@v4.13.4
cd /home/ame/code/notify-platform/user-service\
SERVER_PORT=8081 MYSQL_USER=app MYSQL_PASSWORD=app_password MYSQL_DATABASE=notify REDIS_HOST=localhost REDIS_PORT=6379 JWT_SECRET=test go run cmd/main.go
go mod tidy
cd code/notify-platform/
cd scripts
ls
mv start-all.sh start.sh
mv stop-all.sh stop.sh
ls
cd ..
chmod +x scripts/start.sh scripts/stop.sh
cd code/notify-platform/
./scripts/start.sh
clear
ls
./scripts/stop.sh
sudo systemctl start docker
clear
docker ps
clear
./scripts/start.sh
docker ps
ls
docker ps
sudo systemctl status docker
clear
ls
v deployments/docker-compose.yml
tree
v deepseek.log
v ~/code/notify-platform/deployments/grafana/dashboards.yml\

v ~/code/notify-platform/deployments/grafana/datasources.yml\

cd code/notify-platform/
ll
v deepseek.log
tree
v deployments/loki/loki-config.yml
v deployments/prometheus/prometheus.yml
v deployments/promtail/promtail-config.yml
tree
v deployments/docker-compose.yml
v notification-service/cmd/main.go
v notification-service/internal/handler/notification.go
v notification-service/go.mod
v scripts/start.sh
v scripts/stop.sh
v user-service/cmd/main.go
v ~/code/notify-platform/user-service/internal/handler/auth.go\

v ~/code/notify-platform/user-service/internal/middleware/auth.go\

v ~/code/notify-platform/user-service/migrations/001_create_users_table.up.sql\

v ~/code/notify-platform/user-service/pkg/common/password.go\

v user-service/go.mod
v workers/email-worker/cmd/main.go
v ~/code/notify-platform/workers/email-worker/go.mod\

v ~/code/notify-platform/workers/telegram-worker/cmd/main.go\

v ~/code/notify-platform/workers/telegram-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go\

v ~/code/notify-platform/workers/whatsapp-worker/go.mod\

tree
v .env
v go.mod
tree
clear
cd code/notify-platform/
rm deployments/grafana/dashboards notification-service/internal/queue workers/email-worker/internal workers/telegram-worker/internal workers/whatsapp-worker/internal 
ll
v scripts/start.sh
cd scripts
ls
rm email-worker.log notification-service.log telegram-worker.log user-service.log whatsapp-worker.log
ll
cd ..
ls
cd logs
ls
cd 
clear
ls
cd code/notify-platform/
cd ..
v deepseek.log
v ~/code/notify-platform/deployments/docker-compose.yml
mkdir ~/code/notify-platform/pkg/logger/
v ~/code/notify-platform/pkg/logger/logger.go
mkdir ~/code/notify-platform/deployments/grafana/dashboards/
v ~/code/notify-platform/deployments/grafana/dashboards/overview.json
v ~/code/notify-platform/workers/email-worker/cmd/main.go
v ~/code/notify-platform/user-service/internal/handler/auth_test.go
cd code/notify-platform/user-service
go get github.com/mattn/go-sqlite3
go get github.com/stretchr/testify/assert
go mod tidy
rm ~/code/notify-platform/user-service/internal/handler/auth_test.go
cd ..
v ~/code/notify-platform/workers/email-worker/cmd/main.go
v deployments/docker-compose.yml
v ~/code/notify-platform/user-service/Dockerfile
v ~/code/notify-platform/notification-service/Dockerfile
v ~/code/notify-platform/workers/email-worker/Dockerfile
v ~/code/notify-platform/workers/telegram-worker/Dockerfile
v ~/code/notify-platform/workers/whatsapp-worker/Dockerfile
v ~/code/notify-platform/.dockerignore
cd scripts
ls
v start.sh
v stop.sh
v test.sh
cd ..
chmod +x scripts/*.sh
ll
sudo systemctl status docker
sudo systemctl start docker
clear
ls
docker ps
cd code/notify-platform/
./scripts/start.sh
clear
ls
cd deployments
ls
v docker-compose.yml
cd ..
l
s
ll
cd notification-service
ls
v Dockerfile
clear
l
clear
cd ..
./scripts/start.sh
./scripts/stop.sh
clear
ls
v deployments/docker-compose.yml
v scripts/start.sh
cd ~/code/notify-platform/deployments\

docker-compose up -d --build\

cd ~/code/notify-platform/deployments\

grep 'context:' docker-compose.yml\

ls -l ~/code/notify-platform/.env\

cd code/notify-platform
ls
cd scripts/verbose
v telegram-worker-setup
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "Telegram notify!!1!1",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'\

docker ps
cd ..
./scripts/start.sh
docker ps
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "Telegram notify!!1!1",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'\

cd code/notify-platform/user-service\
SERVER_PORT=8081 \\
MYSQL_USER=app \\
MYSQL_PASSWORD=app_password \\
MYSQL_DATABASE=notify \\
REDIS_HOST=localhost \\
REDIS_PORT=6379 \\
JWT_SECRET=your_strong_secret_here \\
go run cmd/main.go\

cd code/notify-platform/notification-service\
SERVER_PORT=8082 \\
go run cmd/main.go\

cd /home/ame/code/notify-platform/workers/telegram-worker\
TELEGRAM_BOT_TOKEN=$(grep TELEGRAM_BOT_TOKEN ../../.env | cut -d '=' -f2) \\
go run cmd/main.go\

curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "Telegram notify!!1!1",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'\

cd code/notify-platform
ls
./scripts/start.sh
./scripts/stop.sh
ll
v deployments/docker-compose.yml
v scripts/start.sh
cd code/notify-platform
cd scripts/verbose
v email-worker-setup
v telegram-worker-setup
v whatsapp-worker-setup
./scripts/stop.sh
./scripts/start.sh
v scripts/start.sh
v scripts/stop.sh
./scripts/stop.sh
./scripts/start.sh
v scripts/start.sh
v scripts/stop.sh
v scripts/start.sh
./scripts/start.sh
v scripts/start.sh
chmod +x scripts/*.sh
./scripts/stop.sh
chmod +x scripts/*.sh
./scripts/start.sh
v scripts/start.sh
v scripts/stop.sh
chmod +x scripts/*.sh
cd scripts
ll
cd ..
./scripts/start.sh
reboot
sway
sudo systemctl start docker
cd code/notify-platform
./scripts/start.sh
docker ps
clear
ls
cd 
v deepseek.log
cd code/notify-platform
ls
cd deployments
ls
ll
cd grafana
ls
ll
rm dashboards
cd ..
ll
cd grafana
ll
cd ..
ls
ll
v docker-compose.yml
cd ..
ll
cd user-service
ls
ll
ls
cd ..
l
ls
cd .
ls
cd ..
ls
mv notify-platform notify-platform1
ls
mkdir notify-platform
ls
cd notify-platform
v ~/code/notify-platform/deployments/grafana/dashboards.yml:\

ll
rm logs
sudo rm logs
cd code
ls
cd notify-platform
ls
rm -rf logs
sudo m -rf logs
sad
sudo rm -rf logs
mkdir ~/code/notify-platform/deployments/grafana/\

v ~/code/notify-platform/deployments/grafana/dashboards.yml\

mkdir ~/code/notify-platform/deployments/grafana/\

v ~/code/notify-platform/deployments/grafana/datasources.yml\

ll
mkdir ~/code/notify-platform/deployments/loki/\

v ~/code/notify-platform/deployments/loki/loki-config.yml\

mkdir ~/code/notify-platform/deployments/promtail/\

v ~/code/notify-platform/deployments/promtail/promtail-config.yml\

mkdir ~/code/notify-platform/deployments/\

v ~/code/notify-platform/deployments/docker-compose.yml\

mkdir ~/code/notify-platform/notification-service/cmd/\

v ~/code/notify-platform/notification-service/cmd/main.go\

mkdir ~/code/notify-platform/notification-service/internal/handler/\

v ~/code/notify-platform/notification-service/internal/handler/notification.go\

mkdir ~/code/notify-platform/notification-service/\

v ~/code/notify-platform/notification-service/go.mod\

mkdir ~/code/notify-platform/scripts/\

v ~/code/notify-platform/scripts/start.sh\

v ~/code/notify-platform/scripts/stop.sh\

mkdir ~/code/notify-platform/user-service/cmd/\

v ~/code/notify-platform/user-service/cmd/main.go\

mkdir ~/code/notify-platform/user-service/internal/handler/\

v ~/code/notify-platform/user-service/internal/handler/auth.go\

mkdir ~/code/notify-platform/user-service/internal/middleware/\

v ~/code/notify-platform/user-service/internal/middleware/auth.go\

mkdir ~/code/notify-platform/user-service/migrations/\

v ~/code/notify-platform/user-service/migrations/001_create_users_table.up.sql\

mkdir ~/code/notify-platform/user-service/pkg/common/\

v ~/code/notify-platform/user-service/pkg/common/password.go\

v ~/code/notify-platform/user-service/go.mod\

mkdir ~/code/notify-platform/workers/email-worker/cmd/main.go\

v ~/code/notify-platform/workers/email-worker/cmd/main.go\

cd workers/email-worker/cmd
ls
rm main.go
v main.go
cd ..
v ~/code/notify-platform/workers/email-worker/go.mod\

mkdir ~/code/notify-platform/workers/telegram-worker/cmd/\

v ~/code/notify-platform/workers/telegram-worker/cmd/main.go\

v ~/code/notify-platform/workers/telegram-worker/go.mod\

mkdir ~/code/notify-platform/workers/whatsapp-worker/cmd/\

v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go\

v ~/code/notify-platform/workers/whatsapp-worker/go.mod\

v ~/code/notify-platform/.env:\

v ~/code/notify-platform/go.mod:\

chmod +x scripts/*.sh
./scripts/start.sh
clear
v ~/code/notify-platform/deployments/docker-compose.yml
v ~/code/notify-platform/deployments/prometheus/prometheus.yml
mkdir ~/code/notify-platform/deployments/prometheus/
v ~/code/notify-platform/deployments/prometheus/prometheus.yml
v ~/code/notify-platform/deployments/promtail/promtail-config.yml
v ~/code/notify-platform/.env
ll
mv .env: .env
mv go.mod: go.mod
tree
v ~/code/notify-platform/.env
v ~/code/notify-platform/scripts/start.sh
chmod +x ~/code/notify-platform/scripts/*.sh
~/code/notify-platform/scripts/stop.sh
~/code/notify-platform/scripts/start.sh
~/code/notify-platform/scripts/stop.sh
mkdir -p ~/code/notify-platform/logs\

chmod 777 ~/code/notify-platform/logs\

docker-compose -f ~/code/notify-platform/deployments/docker-compose.yml down --remove-orphans\

ls -la ~/code/notify-platform/logs\

sudo rm -rf ~/code/notify-platform/logs\

mkdir -p ~/code/notify-platform/logs\

sudo chown $USER:$USER ~/code/notify-platform/logs\

chmod 755 ~/code/notify-platform/logs\

v ~/code/notify-platform/deployments/docker-compose.yml
reboot
sway
sudo systemctl start docker
cd code/notify-platform
./scripts/start.sh
./scripts/stop.sh
v notification-service/cmd/main.go
v .env
v user-service/cmd/main.go
v .env
clea
rls
cleaer
clear
ls
cd notification-service
go mod tidy
cd ..
cd user-service
ls
go mod tidy
clear
cd ..
v workers/email-worker/cmd/main.go
v workers/telegram-worker/cmd/main.go
v workers/whatsapp-worker/cmd/main.go
v scripts/start.sh
v deployments/docker-compose.yml
chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/stop.sh
clear
ls
./scripts/start.sh
clear
cd code/notify-platform1
ls
cd scripts
ls
cd verbose
ls
v email-worker-setup
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test with net/smtp",\
    "body": "This email was sent using Go net/smtp package!!1!1"\
  }'\

v telegram-worker-setup
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "Hello from FIXED Telegram Worker!",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'\

v whatsapp-worker-setup
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "whatsapp",\
    "recipient": "79192492745",\
    "body": "Hello from Green-API!"\
  }'\

v notification-service/internal/handler/notification.go
clear
ls
./scripts/stop.sh
./scripts/start.sh
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test with net/smtp",\
    "body": "This email was sent using Go net/smtp package!!1!1"\
  }'\

curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test Subject",\
    "body": "Hello from Email Worker!"\
  }'
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "Hello from FIXED Telegram Worker!",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "whatsapp",\
    "recipient": "79192492745",\
    "body": "Hello from Green-API!"\
  }'\

cd code/notify-platform1
cd ..
cd notify-platform
ls
./scripts/stop.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/start.sh
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "Hello from FIXED Telegram Worker!",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "whatsapp",\
    "recipient": "79192492745",\
    "body": "Hello from Green-API!"\
  }'
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test Subject",\
    "body": "Hello from Email Worker!"\
  }'
nvim ~/code/notify-platform/logs/notification-service.log
reboot
sway
sudo systemctl start docker
cd code/notify-platform1
cd ~/code/notify-platform
./scripts/start.sh
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test Subject",\
    "body": "Hello from Email Worker!"\
  }'
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test Subject",\
    "body": "Hello from Email Worker! 1221"\
  }'
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "Hello from FIXED Telegram Worker! 1221",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "whatsapp",\
    "recipient": "79192492745",\
    "body": "Hello from Green-API! 1221"\
  }'
v ~/code/notify-platform/deployments/prometheus/prometheus.yml
v ~/code/notify-platform/deployments/docker-compose.yml
./scripts/stop.sh
docker volume prune -f\

clear
~/code/notify-platform/scripts/start.sh\

docker exec -it deployments-prometheus-1 sh\

curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "Hello from FIXED Telegram Worker! 1221",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'
reboot
sway
cd code/notify-platform
ls
./scripts/start.sh
clear
sudo systemctl start docker
./scripts/start.sh
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "email",\
    "recipient": "test@example.com",\
    "subject": "Test Subject",\
    "body": "Hello from Email Worker!"\
  }'
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "Hello from FIXED Telegram Worker! 1221",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "whatsapp",\
    "recipient": "79192492745",\
    "body": "Hello from Green-API! 1221"\
  }'
curl -G http://localhost:3100/loki/api/v1/series\

docker logs deployments-promtail-1\

v deployments/docker-compose.yml
v ~/code/notify-platform/deployments/promtail/promtail-config.yml
./scripts/stop.sh
ls
clear
ls
reboot
sway
sudo systemctl start docker
cd code/notify-platform
./scripts/start.sh
clear
ls
v scripts/start.sh
clear
ls
cd code/notify-platform
./scripts/start.sh
v deployments/docker-compose.yml
docker-compose -f deployments/docker-compose.yml down\
docker volume prune -f
cd
sudo pacman -S python-yamllint\

sudo pacman -S yamllint\

cd code/notify-platform
yamllint deployments/docker-compose.yml\

./scripts/start.sh\

curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "H3llo from FIXED Telegram Worker! 1221",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'
docker exec -it deployments-promtail-1 curl http://loki:3100/ready\

docker logs deployments-promtail-1\

v deployments/docker-compose.yml
cd code/notify-platform
v deployments/docker-compose.yml
./scripts/start.sh\

./scripts/stop.sh\

v deployments/docker-compose.yml
clear
v deployments/docker-compose.yml
docker network inspect deployments_notify-net\

reboot
sway
sudo systemctl start docker
cd code/notify-platform
./scripts/start.sh\

v deployments/docker-compose.yml
cd deployments
ll
v promtail/promtail-config.yml
cd ..
./scripts/start.sh\

curl -G http://localhost:3100/loki/api/v1/series\

docker ps
docker ps 
reboot
sway
sudo systemctl start docker
cd code/notify-platform
./scripts/start.sh\

docker ps -a | grep loki\

docker logs deployments-loki-1\

v deployments/loki/loki-config.yml
v deployments/docker-compose.yml
./scripts/stop.sh\

./scripts/start.sh\

docker inspect -f '{{.State.Status}}' deployments-loki-1\

docker logs deployments-loki-1\

./scripts/stop.sh\

docker run --rm -p 3100:3100 \\
  -v $(pwd)/deployments/loki/loki-config.yml:/etc/loki/local-config.yaml \\
  grafana/loki:latest \\
  -config.file=/etc/loki/local-config.yaml
./scripts/stop.sh\

clear
v ~/code/notify-platform/deployments/loki/loki-config.yml
v deployments/docker-compose.yml
docker volume rm deployments_loki_data\

./scripts/start.sh\

docker logs deployments-loki-1\

curl -I http://localhost:3100/ready\

curl wttr.in
yamllint deployments/loki/loki-config.yml
v deployments/loki/loki-config.yml
docker system prune -f\

docker volume prune -f\

./scripts/stop.sh\

v deployments/loki/loki-config.yml
docker logs deployments-loki-1\

v deployments/loki/loki-config.yml
./scripts/start.sh\

docker logs deployments-loki-1\

v deployments/docker-compose.yml
mkdir ~/code/notify-platform/deployments/signoz/
v ~/code/notify-platform/deployments/signoz/otel-collector-config.yaml
v deployments/grafana/datasources.yml
rm -rf ~/code/notify-platform/deployments/loki\
rm -rf ~/code/notify-platform/deployments/promtail
cd deployments
ll
cd ..
v scripts/start.sh
v scripts/stop.sh
chmod +x ~/code/notify-platform/scripts/*.sh
clear
cker 
docker ps
./scripts/stop.sh\

v deployments/docker-compose.yml
clear
docker system prune -f\

docker volume prune -f\

docker volume rm deployments_loki_data\

docker-compose -f ~/code/notify-platform/deployments/docker-compose.yml down --remove-orphans\

clear
ls
cd scripts
ls
mv stop.sh down.sh
mv start.sh up.sh
v up.sh
v down.sh
cd ..
chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
v deployments/docker-compose.yml
v deployments/signoz/otel-collector-config.yaml
clear
./scripts/down.sh
v scripts/up.sh
clear
chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
v scripts/up.sh
v deployments/docker-compose.yml
v ~/code/notify-platform/deployments/filebeat.yml
v scripts/up.sh
v deployments/docker-compose.yml
chmod +x ~/code/notify-platform/scripts/*.sh
docker ps
./scripts/up.sh
reboot
sway
sudo systemctl start docker
docker ps
clear
cd code/notify-platform
./scripts/up.sh
docker login -u thesankareaa -p a21w9n703
v deployments/docker-compose.yml
cd deployments
ll
rm filebeat.yml signoz
ls
cd ..
mkdir ~/code/notify-platform/deployments/signoz/
v ~/code/notify-platform/deployments/signoz/otel-collector-config.yaml
v deployments/grafana/datasources.yml
v scripts/up.sh
v scripts/down.sh
chmod +x ~/code/notify-platform/scripts/*.sh
docker ps
./scripts/up.sh
v deployments/docker-compose.yml
v ~/code/notify-platform/deployments/signoz/otel-collector-config.yaml
./scripts/down.sh
docker volume rm deployments_clickhouse_data deployments_signoz_data\

v scripts/up.sh
docker volume prune -f\

clear
chmod +x ~/code/notify-platform/scripts/*.sh
clear
ls
./scripts/up.sh
./scripts/down.sh
clear
v deployments/docker-compose.yml
mkdir -p ~/code/notify-platform/deployments/fluentbit
v ~/code/notify-platform/deployments/fluentbit/fluent-bit.conf
v scripts/up.sh
clear
ls
docker volume prune -f\

chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
docker login -u thesankareaa -p a21w9n703
./scripts/up.sh
v deployments/docker-compose.yml
mkdir ~/code/notify-platform/deployments/signoz/
v ~/code/notify-platform/deployments/signoz/otel-collector-config.yaml
./scripts/down.sh
docker volume rm deployments_signoz_data deployments_clickhouse_data\

clear
./scripts/up.sh
docker login -u thesankareaa -p a21w9n703
./scripts/up.sh
v deployments/docker-compose.yml
docker pull signoz/ui:0.27.0\

docker pull signoz/frontend:0.27.0\

docker pull signoz/query-service:0.27.0\

docker pull signoz/otel-collector:0.111.24\

docker pull clickhouse/clickhouse-server:23.8-alpine\

docker login -u thesankareaa -p a21w9n703
docker pull signoz/otel-collector:0.111.24\

docker pull signoz/signoz-otel-collector:0.111.24\

ll
./scripts/down.sh
docker volume rm deployments_signoz_data deployments_clickhouse_data\

v /scripts/up.sh
v scripts/up.sh
./scripts/up.sh
v deployments/docker-compose.yml
./scripts/down.sh
./scripts/up.sh
./scripts/down.sh
./scripts/up.sh
curl -X POST http://localhost:8000/api/v1/register \\
  -H "Content-Type: application/json" \\
  -d '{"email":"test@example.com","password":"Test@123","name":"Test User"}'
./scripts/down.sh
docker volume rm deployments_signoz_data deployments_clickhouse_data\

./scripts/up.sh
v deployments/signoz/otel-collector-config.yaml
v deployments/signoz/signoz-query-service.yml
./scripts/down.sh
clear
ls
cd deployments/signoz
ls
rm signoz-query-service.yml
clear
cd ..
ll
rm fluentbit
cd ..
clear
./scripts/down.sh
clear
cd ~/code/notify-platform\

npm create vite@latest frontend -- --template svelte\

cd frontend\

npm install\

npm install -D tailwindcss postcss autoprefixer\

npm install svelte-routing axios svelte-icons date-fns\

npx tailwindcss init -p\

v ~/code/notify-platform/frontend/tailwind.config.cjs
v ~/code/notify-platform/frontend/src/app.css
v ~/code/notify-platform/frontend/src/main.js
v ~/code/notify-platform/frontend/src/App.svelte
v ~/code/notify-platform/frontend/src/lib/stores/auth.js
mkdir ~/code/notify-platform/frontend/src/lib/stores
v ~/code/notify-platform/frontend/src/lib/stores/auth.js
mkdir ~/code/notify-platform/frontend/src/lib/api/
v ~/code/notify-platform/frontend/src/lib/api/auth.js
v ~/code/notify-platform/frontend/src/lib/api/notifications.js
v ~/code/notify-platform/frontend/src/lib/components/Header.svelte
mkdir ~/code/notify-platform/frontend/src/lib/components/
v ~/code/notify-platform/frontend/src/lib/components/Header.svelte
v ~/code/notify-platform/frontend/src/lib/components/NotificationForm.svelte
v ~/code/notify-platform/frontend/src/routes/Login.svelte
mkdir ~/code/notify-platform/frontend/src/routes/
v ~/code/notify-platform/frontend/src/routes/Login.svelte
v ~/code/notify-platform/frontend/src/routes/Dashboard.svelte
mkdir ~/code/notify-platform/frontend/src/routes/
v ~/code/notify-platform/frontend/src/routes/Dashboard.svelte
ll
v package.json
npm run dev\

clear
npm run dev\

rm -rf node_modules package-lock.json\

npm install -D tailwindcss@latest postcss@latest autoprefixer@latest\

npm install svelte-routing axios svelte-icons date-fns\

npx tailwindcss init -p\

clear
rm -rf node_modules package-lock.json\

cd ..
rm frontend
ls
clear
ls
–¥–¥
clear
ls
v frontend/index.html
mkdir frontend/
v frontend/index.html
v frontend/login.html
v frontend/dashboard.html
mkdir frontend/css/
v frontend/css/style.css
mkdir frontend/js/
v frontend/js/api.js
v frontend/js/auth.js
v frontend/js/notifications.js
npm install axios\

cd frontend
npm install axios\

cd ..
ll
rm package.json package-lock.json 
cd frontend
ls
ll
npm install axios\

ll
cd ..
ll
v user-service/cmd/main.go
v notification-service/cmd/main.go
v user-service/cmd/main.go
v notification-service/cmd/main.go
cd notification-service
go get github.com/labstack/echo/v4/middleware@v4.13.4
v /cmd/main.go
v cmd/main.go
cd ..
clear
mkdir ~/code/notify-platform/frontend-server/
v ~/code/notify-platform/frontend-server/main.go
v scripts/up.sh
v scripts/down.sh
v scripts/up.sh
v user-service/cmd/main.go
chmod +x ~/code/notify-platform/scripts/*.sh\

clear
./scripts/down.sh
./scripts/up.sh
v frontend/register.html
v frontend/js/auth.js
v frontend/js/api.js
v frontend/index.html
v frontend/login.html
./scripts/down.sh
./scripts/up.sh
v frontend/js/auth.js
v frontend/js/api.js
v frontend/css/style.css
v frontend/login.html
v frontend/register.html
v user-service/internal/handler/auth.go
v scripts/up.sh
chmod +x ~/code/notify-platform/scripts/*.sh\

clear
./scripts/down.sh
./scripts/up.sh
v scripts/up.sh
cd
sudo pacman -S lsof
cd code/notify-platform
./scripts/down.sh
clear
chmod +x ~/code/notify-platform/scripts/*.sh\

./scripts/up.sh
reboot
sway
cd code/notify-platform
sudo systemctl start docker
clear
./scripts/up.sh
cd code/
ll
cd notify-platform1
ls
v scripts/verbose/telegram-worker-setup
v frontend/dashboard.html
v frontend/js/notifications.js
v frontend/css/style.css
v notification-service/internal/handler/notification.go
v workers/telegram-worker/cmd/main.go
clear
./scripts/down.sh
./scripts/up.sh
btop
v scripts/down.sh
reboot
sway
sudo systemctl start docker
cd code/notify-platform
./scripts/up.sh
./scripts/down.sh
ll
v deepseek.log
cd code/notify-platform
ls
ll
v .env
cd deployments
ls
ll
v docker-compose.yml
cd grafana
ls
v datasources.yml
v dashboards.yml
cd dashboards
ls
cd ..
ls
cd ..
ls
cd prometheus
ls
v prometheus.yml
cd ..
ls
cd signoz
ls
v otel-collector-config.yaml
cd ..
ls
ll
cd frontend
ls
ll
v register.html
v login.html
v index.html
v dashboard.html
cd js
ls
ll
v api.js
v auth.js
v notifications.js
cd ..
cd css/
ls
v style.css
cd ..
ls
cd frontend-server
ls
v main.go
cd ..
ll
v go.mod
cd node_modules
ls
cd ..
cd logs
ls
cd ..
clear
ll
cd notification-service
ll
v go.mod
v internal/handler/notification.go
cd internal
ls
ll
cd ..
ls
cd cmd
ls
v main.go
cd ..
ls
v go.sum
cd ..
ll
v package-lock.json
v package.json
cd scripts
ls
v up.sh
v down.sh
cd ..
ls
ll
cd user-service
ls
ll
clear
ll
v go.mod
ll
v cmd/main.go
cd cmd
ll
v main.go
cd ..
ls
cd internal
ls
cd handler
ll
v auth.go
cd ..
ll
cd middleware
ls
v auth.go
cd ..
ll
cd ..
ll
cd migrations
ls
v 001_create_users_table.up.sql
cd ..
cd pkg
ls
cd common
ls
v password.go
cd ..
ll
cd ..
ll
cd workers
ls
cd email-worker
ls
v cmd/main.go
ll
v go.mod
cd ..
cd telegram-worker
v cmd/main.go
v go.mod
cd ..
cd whatsapp-worker
ls
v cmd/main.go
ll
v go.mod
ll
cd ..
ls
cd ..
ll
v deepseek.log
cd code/notify-platform
v .env
v ~/code/notify-platform/user-service/internal/handler/auth.go
cd code/notify-platform
cd ..
cp notify-platform 123123
cd notify-platform
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/user-service/pkg/common/email.go
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/user-service/migrations/002_add_verification_fields.up.sql
v ~/code/notify-platform/deployments/docker-compose.yml
v ~/code/notify-platform/user-service/internal/handler/password.go
v ~/code/notify-platform/notification-service/internal/repository/notification.go
mkdir ~/code/notify-platform/notification-service/internal/repository/
v ~/code/notify-platform/notification-service/internal/repository/notification.go
v ~/code/notify-platform/user-service/pkg/common/limiter.go
v ~/code/notify-platform/user-service/cmd/main.go
v ~/code/notify-platform/notification-service/internal/handler/template.go
v ~/code/notify-platform/notification-service/internal/handler/bulk.go
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
sudo -e v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
sudo  v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
sudo nvim ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
chmod +w ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
touch ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
sudo touch ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
chmod +w ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
sudo chmod +w ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
v .env
v scripts/up.sh
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
v ~/code/notify-platform/notification-service/internal/handler/template.go
\:wq
v ~/code/notify-platform/notification-service/internal/handler/template.go
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
chmod 666 ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
sudo chmod 666 ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
v ~/code/notify-platform/notification-service/internal/repository/notification.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
v ~/code/notify-platform/notification-service/internal/repository/notification.go
v ~/code/notify-platform/notification-service/cmd/main.go
v  ~/code/notify-platform/notification-service/internal/handler/template.go
v ~/code/notify-platform/notification-service/internal/repository/notification.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
v ~/code/notify-platform/notification-service/cmd/main.go
v  ~/code/notify-platform/user-service/migrations/003_create_notifications_table.up.sql
v ~/code/notify-platform/user-service/migrations/004_create_templates_table.up.sql
mkdir -p ~/code/notify-platform/deployments/grafana/dashboards
touch ~/code/notify-platform/deployments/grafana/dashboards/notifications.json\

docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/002_add_verification_fields.up.sql\
docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/003_create_notifications_table.up.sql\
docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/004_create_templates_table.up.sql
v scripts/up.sh
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/notification-service/internal/repository/notification.go
v .env
clear
ls
v ~/code/notify-platform/notification-service/cmd/main.go
clear
ls
clear
cd code/notify-platform
ls
reboot
sway
sudo systemctl start docker
clear
cd code/notify-platform
chmod +x ~/code/notify-platform/scripts/*.sh\

clear
./scripts/up.sh
v ~/code/notify-platform/deployments/docker-compose.yml
v .env
v scripts/down.sh
v scripts/up.sh
v ~/code/notify-platform/workers/email-worker/cmd/main.go
cd
sudo pacman -S psmisc
clear
chmod +x ~/code/notify-platform/scripts/*.sh\

reboot
sway
sudo systemctl start docker
cd code/notify-platform
./scripts/up.sh
curl -X POST http://localhost:8081/register \\
  -H "Content-Type: application/json" \\
  -d '{"email":"test@example.com", "password":"strongpassword"}'
curl -X POST http://localhost:8081/register \\
  -H "Content-Type: application/json" \\
  -d '{"email":"test21@example.com", "password":"strongpassword"}'
curl -X POST http://localhost:8081/register \\
  -H "Content-Type: application/json" \\
  -d '{"email":"test211@example.com", "password":"strongpassword"}'
curl -X POST http://localhost:8081/register \\
  -H "Content-Type: application/json" \\
  -d '{"email":"re.kitaev@gmail.com", "password":"a21w9n703"}'
tail -n 50 ~/code/notify-platform/logs/user-service.log\

clear
telnet localhost 1026\

docker ps | grep mailhog\

docker logs deployments-mailhog-1\

v ~/code/notify-platform/user-service/pkg/common/email.go
reboot
sway
sudo systemctl start docker
chmod +x ~/code/notify-platform/scripts/*.sh\

cd code/notify-platform
./scripts/up.sh
curl -X POST http://localhost:8081/register \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest@example.com", "password":"passwd"}'
curl -X GET "http://localhost:8081/verify-email?token=c042bb55-5d79-4951-8e25-358639e739f1"
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest@example.com", "password":"passwd"}'
curl -X GET "http://localhost:8081/verify-email?token=c042bb55-5d79-4951-8e25-358639e739f1"\

v ~/code/notify-platform/user-service/cmd/main.go
v scripts/up.sh
v ~/code/notify-platform/user-service/pkg/common/email.go
reboot
sway
sudo systemctl start docker
cd code/notify-platform
chmod +x ~/code/notify-platform/scripts/*.sh\

./scripts/up.sh
curl -X POST http://localhost:8081/register \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest@example.com", "password":"passwd"}'
curl -X POST http://localhost:8081/register \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"passwd"}'
curl -X GET "http://localhost:8081/verify-email?token=8bd7940b-1f4d-4702-883a-8e5e5c37570c"\

curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"passwd"}'
curl -X POST http://localhost:8081/forgot-password \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTE4MzQ4fQ.ZALk_HqDh2lLiSuIWN3jg8T_TrU4xNtgtEja_J52xxE" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"test@example.com", "subject":"Test", "body":"Hello"}'
./scripts/down.sh
v ~/code/notify-platform/user-service/cmd/main.go
v ~/code/notify-platform/user-service/internal/handler/password.go
./scripts/up.sh
curl -X POST http://localhost:8081/forgot-password \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com"}'
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"passwd"}'
curl -X POST http://localhost:8081/forgot-password \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com"}'
tail -f ~/code/notify-platform/logs/user-service.log\

./scripts/down.sh
v ~/code/notify-platform/user-service/migrations/005_add_password_reset_fields.up.sql
v .env
v scripts/up.sh
./scripts/down.sh
./scripts/up.sh
curl -X POST http://localhost:8081/forgot-password \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com"}'
curl -X POST http://localhost:8081/reset-password \\
  -H "Content-Type: application/json" \\
  -d '{"token":"4463d83b-951a-43d2-8998-b946ea2f8942", "password":"newpasswd", "confirm_password":"newpasswd"}'
v ~/code/notify-platform/user-service/internal/handler/password.go
docker exec -it deployments-mysql-1 mysql -uapp -papp_password notify -e "SELECT id, email, reset_token, reset_expires FROM users WHERE reset_token='4463d83b-951a-43d2-8998-b946ea2f8942';"\

tail -f ~/code/notify-platform/logs/user-service.log\

./scripts/down.sh
chmod +x ~/code/notify-platform/scripts/*.sh\

./scripts/up.sh
curl -X POST http://localhost:8081/forgot-password \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com"}'
curl -X POST http://localhost:8081/reset-password \\
  -H "Content-Type: application/json" \\
  -d '{"token":"55334740-6d98-4fc8-af1c-e7642c524ce2", "password":"newpasswd", "confirm_password":"newpasswd"}'
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
TOKEN=$(curl -s -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}' | jq -r '.access_token')
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer $TOKEN" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"test@example.com", "subject":"Test", "body":"Hello"}'
clear
ls
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTIwMDU1fQ.df0Eag1O-KOQ8t658xzM7cFV8FEzJn2CpafVhz3ClZM" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"test@example.com", "subject":"Test", "body":"Hello"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTIwMDU1fQ.df0Eag1O-KOQ8t658xzM7cFV8FEzJn2CpafVhz3ClZM" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello"}'
reboot
sway
sudo systemctl start docker
cd code/notify-platform
./scripts/up.sh
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTIwMTk2fQ.BhG7JTUit4EQIbOPN48krbOtK6uCcuAhPrWkLxp3G2o" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello"}'
tail -f ~/code/notify-platform/logs/notification-service.log\

curl -I http://localhost:8082/health\

docker ps | grep mysql\

docker logs deployments-rabbitmq-1\

docker logs deployments-mysql-1\

curl -v -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTIwMTk2fQ.BhG7JTUit4EQIbOPN48krbOtK6uCcuAhPrWkLxp3G2o" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello"}'\

tail -f ~/code/notify-platform/logs/notification-service.log\

v ~/code/notify-platform/notification-service/internal/handler/notification.go
curl -v -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTIwMTk2fQ.BhG7JTUit4EQIbOPN48krbOtK6uCcuAhPrWkLxp3G2o" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello"}'\

./scripts/down.sh
cd code/notify-platform
./scripts/down.sh
./scripts/up.sh
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -v -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTIwOTU0fQ.A2m_HU128jJu0DnHldfV6gInbnWMLFirno5vg385yGY" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello"}'\

v ~/code/notify-platform/notification-service/cmd/main.go
clear
./scripts/down.sh
./scripts/up.sh
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -v -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTIxODQzfQ._L1fhPFdjnjGYB5YVOU6s0BKIvdGAcg43lgoVZXvzA8" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello"}'\

tail -f ~/code/notify-platform/logs/notification-service.log\

curl -v -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTIxODQzfQ._L1fhPFdjnjGYB5YVOU6s0BKIvdGAcg43lgoVZXvzA8" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello"}'\

v  ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/notification-service/internal/middleware/auth.go
mkdir ~/code/notify-platform/notification-service/internal/middleware/
v ~/code/notify-platform/notification-service/internal/middleware/auth.go
cd code/notify-platform
./scripts/down.sh
./scripts/up.sh
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -v -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTIzMDY2fQ.xS_Bke7IVrYuu4z_LSXj6eFb_0uRTXEIM7hFWu1_ktI" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello"}'\

curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTIzMDY2fQ.xS_Bke7IVrYuu4z_LSXj6eFb_0uRTXEIM7hFWu1_ktI" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello"}'\

pkill -f "notification-service/cmd/main.go"\

cd ~/code/notify-platform/notification-service\
SERVER_PORT=8082 \\
RABBITMQ_HOST=localhost \\
RABBITMQ_USER=guest \\
RABBITMQ_PASSWORD=guest \\
MYSQL_DSN="app:app_password@tcp(localhost:3306)/notify?parseTime=true" \\
JWT_SECRET=your_jwt_secret_here \  # –É≤–∞–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—É¨\
go run cmd/main.go > ~/code/notify-platform/logs/notification-service.log 2>&1 &
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTIzMDY2fQ.xS_Bke7IVrYuu4z_LSXj6eFb_0uRTXEIM7hFWu1_ktI" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello"}'\

curl -I http://localhost:8082/health\

./scripts/down.sh
reboot
sway
cd code/notify-platform
sudo systemctl start docker
./scripts/up.sh
ps aux | grep 'notification-service/cmd/main.go'
lsof -i :8082
clear
curl -I http://localhost:8082/health\

tail -f ~/code/notify-platform/logs/notification-service.log
pkill -f "notification-service/cmd/main.go"\

cd ~/code/notify-platform/notification-service\
SERVER_PORT=8082 \\
RABBITMQ_HOST=localhost \\
RABBITMQ_USER=guest \\
RABBITMQ_PASSWORD=guest \\
MYSQL_DSN="app:app_password@tcp(localhost:3306)/notify?parseTime=true" \\
JWT_SECRET=your_jwt_secret_here \\
go run cmd/main.go > ~/code/notify-platform/logs/notification-service.log 2>&1 &
lsof -i :8082
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTI5MDA5fQ.rlaI69MpFQR5vnZDsJJFnphc3WqGKactdXX3rZkt2Xo" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello"}'\

v scripts/up.sh
cd ..
v scripts/up.sh
./scripts/down.sh
./scripts/up.sh
reboot
sway
cd code/notify-platform
sudo systemctl start docker
./scripts/up.sh
clear
ls
./scripts/down.sh
chmod +x ~/code/notify-platform/scripts/*.sh\

reboot
sway
chmod +x ~/code/notify-platform/scripts/*.sh\

sudo systemctl start docker
cd code/notify-platform
./scripts/up.sh
ps aux | grep 'notification-service/cmd/main.go'\

lsof -i :8082\

clear
tail -f ~/code/notify-platform/logs/notification-service.log\

clear
curl -I http://localhost:8082/health\

clear
curl -I http://localhost:8082/health\

clear
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer $TOKEN" \\
  -H "Content-Type: application/json" \ 
clear
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTI5NDQzfQ.kysh2mk6UR5naTgP2s9x4PD2nsMirXS7b3XUTNOUVuM" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello"}'\

v .env
v scripts/up.sh
reboot
sway
sudo systemctl start docker
clear
cd code/notify-platform
chmod +x ~/code/notify-platform/scripts/*.sh\

./scripts/up.sh
clear
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -I http://localhost:8081/health\

clear
v scripts/up.sh
reboot
sway
chmod +x ~/code/notify-platform/scripts/*.sh\

sudo systemctl start docker
cd code/notify-platform
./scripts/up.sh
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTMwMTM3fQ.AoOADwTfQ2fqha4Bgelb_dzqR0nrXDQX9HXJVaxN300" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello"}'\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTMwMTM3fQ.AoOADwTfQ2fqha4Bgelb_dzqR0nrXDQX9HXJVaxN300" http://localhost:8082/history
curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTMwMTM3fQ.AoOADwTfQ2fqha4Bgelb_dzqR0nrXDQX9HXJVaxN300" http://localhost:8082/stats
v ~/code/notify-platform/notification-service/internal/repository/notification.go
clear
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/notification-service/internal/middleware/auth.go
v  ~/code/notify-platform/workers/email-worker/cmd/main.go
v ~/code/notify-platform/workers/telegram-worker/cmd/main.go
v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go
v ~/code/notify-platform/scripts/up.sh
v ~/code/notify-platform/scripts/down.sh
v .env
v ~/code/notify-platform/notification-service/cmd/main.go
./scripts/down.sh
chmod +x ~/code/notify-platform/scripts/*.sh\

./scripts/up.sh
clear
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTM2MTc2fQ.5TXeFiZ8GbqbpNRll6VZpeRUN03u1oQeZFvfYQCKdEQ" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello!!"}'\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTM2MTc2fQ.5TXeFiZ8GbqbpNRll6VZpeRUN03u1oQeZFvfYQCKdEQ" http://localhost:8082/history\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTM2MTc2fQ.5TXeFiZ8GbqbpNRll6VZpeRUN03u1oQeZFvfYQCKdEQ" http://localhost:8082/stats\

curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTM2MTc2fQ.5TXeFiZ8GbqbpNRll6VZpeRUN03u1oQeZFvfYQCKdEQ" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello!!"}'\

reboot
sway
sudo systemctl start docker
cd code/notify-platform
chmod +x ~/code/notify-platform/scripts/*.sh\

./scripts/up.sh
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTM2NTQyfQ.dZMsXoEoH2bDml0q5McA68gkEfarIq9oTckfnCg0iIM" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello!!"}'\

v ~/code/notify-platform/notification-service/cmd/main.go
./scripts/down.sh
./scripts/up.sh
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTM2NzE3fQ.qActyh5H6CodzgfDY4Pjzx_Ie-axEQw2VzZ_DIqWJpA" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello!!"}'\

v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/notification-service/internal/middleware/auth.go
v ~/code/notify-platform/workers/email-worker/cmd/main.go
./scripts/down.sh
clear
chmod +x ~/code/notify-platform/scripts/*.sh\

./scripts/up.sh
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTM3MDEyfQ.snbbZwWgGnURMGOf610n0yN5597f-l0SDE3u-0yd0Ug" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello!!"}'\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTM3MDEyfQ.snbbZwWgGnURMGOf610n0yN5597f-l0SDE3u-0yd0Ug" http://localhost:8082/history\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTM3MDEyfQ.snbbZwWgGnURMGOf610n0yN5597f-l0SDE3u-0yd0Ug" http://localhost:8082/stats\

bash
cd code/notify-platform
./scripts/down.sh
v deepseek.log
ll
cd code
cd notify-platform
ls
clear
ll
v ~/code/notify-platform/.env\

cd deployments
ll
v ~/code/notify-platform/deployments/docker-compose.yml\

ll grafana
v ~/code/notify-platform/deployments/grafana/datasources.yml\

v ~/code/notify-platform/deployments/grafana/dashboards.yml\

cd grafana
ls
cd dashboards
ls
v notifications.json
cd .. 2
cd ..
cd prometheus
ls
v prometheus.yml
cd ..
cd signoz
ls
v ~/code/notify-platform/deployments/signoz/otel-collector-config.yaml\

cd ..
ls
cd ..
cd frontend
ll
v ~/code/notify-platform/frontend/register.html\

v ~/code/notify-platform/frontend/login.html\

v ~/code/notify-platform/frontend/index.html\

v ~/code/notify-platform/frontend/dashboard.html\

v ~/code/notify-platform/frontend/index.html\

v ~/code/notify-platform/frontend/dashboard.html\

cd js
ll
v ~/code/notify-platform/frontend/js/api.js\

v ~/code/notify-platform/frontend/js/auth.js\

v ~/code/notify-platform/frontend/js/notifications.js\

cd ../css
ls
cd ..
v ~/code/notify-platform/frontend/css/style.css\

cd ../frontend-server
ls
v main.go
cd ..
v ~/code/notify-platform/go.mod\

cd notification-service
ll
v ~/code/notify-platform/notification-service/go.mod\

cd internal
ll
cd handler
ls
v ~/code/notify-platform/notification-service/internal/handler/notification.go\

v bulk.go
v template.go
cd ..
ls
cd middleware
ls
v auth.go
cd ..
ll
cd repository
ls
v notification.go
cd ..
ls
ll
cd cmd
ls
v ~/code/notify-platform/notification-service/cmd/main.go\

ll
cd ..
ls
cd ..
ll
v ~/code/notify-platform/package.json\

v ~/code/notify-platform/scripts/up.sh\

v ~/code/notify-platform/scripts/down.sh\

cd user-service
ll
v ~/code/notify-platform/user-service/go.mod\

cd cmd
ls
v ~/code/notify-platform/user-service/cmd/main.go\

ls
cd ..
ls
cd internal
ls
cd handler
ls
v ~/code/notify-platform/user-service/internal/handler/auth.go\

v password.go
cd ..
ls
cd middleware
ls
v ~/code/notify-platform/user-service/internal/middleware/auth.go\

cd ..
ls
cd ..
ls
cd migrations
v 001_create_users_table.up.sql
v 002_add_verification_fields.up.sql
v 003_create_notifications_table.up.sql
v 004_create_templates_table.up.sql
v 005_add_password_reset_fields.up.sql
cd ..
ls
cd pkg
ls
cd common
ls
v ~/code/notify-platform/user-service/pkg/common/password.go\

v ~/code/notify-platform/user-service/pkg/common/email.go\

v ~/code/notify-platform/user-service/pkg/common/limiter.go\

cd ..
cd .
cd ..
ls
cd ..
ls
ll
cd workers
cd email-worker
ls
v ~/code/notify-platform/workers/email-worker/cmd/main.go\

cd cmd
ls
cd ..
v ~/code/notify-platform/workers/email-worker/go.mod\

cd ../telegram-worker
ls
cd cmd
ls
v ~/code/notify-platform/workers/telegram-worker/cmd/main.go\

v ~/code/notify-platform/workers/telegram-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go
cd ../../whatsapp-worker
ls
go get github.com/go-sql-driver/mysql\

clear
v go.mod
v deepseek.log
v ~/code/notify-platform/user-service/cmd/main.go
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/user-service/internal/handler/password.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
v ~/code/notify-platform/notification-service/internal/handler/bulk.go
v ~/code/notify-platform/deployments/docker-compose.yml
v deepseek.log
docker ps
chmod +x ~/code/notify-platform/scripts/*.sh\

cd code/notify-platform
./scripts/up.sh
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQzNTEyfQ.HDeNhFatId22Uycq8WPMJIQAY1tCtAZv3nMK16k1Q6s" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello!!"}'\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQzNTEyfQ.HDeNhFatId22Uycq8WPMJIQAY1tCtAZv3nMK16k1Q6s" http://localhost:8082/history
curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQzNTEyfQ.HDeNhFatId22Uycq8WPMJIQAY1tCtAZv3nMK16k1Q6s" http://localhost:8082/stats
curl -X POST http://localhost:8082/templates \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQzNTEyfQ.HDeNhFatId22Uycq8WPMJIQAY1tCtAZv3nMK16k1Q6s" \\
  -H "Content-Type: application/json" \\
  -d '{"user_id":1, "name":"Welcome", "subject":"–É¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—É¨", "body":"–Éø—Ä–∏–≤–µ—Ç, {{name}}!"}'\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQzNTEyfQ.HDeNhFatId22Uycq8WPMJIQAY1tCtAZv3nMK16k1Q6s" http://localhost:8082/templates\

curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQzNTEyfQ.HDeNhFatId22Uycq8WPMJIQAY1tCtAZv3nMK16k1Q6s" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"test@example.com", "template_id":1, "data": {"name": "–É∏–≤–∞–Ω"}}'\

for i in {1..11}; do\
  curl -X POST http://localhost:8081/register \\
    -H "Content-Type: application/json" \\
    -d '{"email":"test'$i'@example.com", "password":"password"}'\
  echo\
done\

curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer $TOKEN" \\
  -d '{"channel":"email", "recipient":"invalid-email", "subject":"Test", "body":"Hello"}'\

curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQzNTEyfQ.HDeNhFatId22Uycq8WPMJIQAY1tCtAZv3nMK16k1Q6s" \\
  -d '{"channel":"email", "recipient":"invalid-email", "subject":"Test", "body":"Hello"}'\

curl http://localhost:8081/health\

curl http://localhost:8082/health\

cd code/notify-platform
./scripts/down.sh
v ~/code/notify-platform/notification-service/internal/repository/notification.go
v ~/code/notify-platform/notification-service/internal/handler/template.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/notification-service/internal/handler/template.go
v ~/code/notify-platform/notification-service/internal/repository/notification.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
chmod +x ~/code/notify-platform/scripts/*.sh\

cd code/notify-platform
./scripts/up.sh
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ0NTEyfQ.AHsMkBvr5tVYmQVaNlxAMWRFBi0uOSEN1Tjn0DODt6M" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello!!"}'\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ0NTEyfQ.AHsMkBvr5tVYmQVaNlxAMWRFBi0uOSEN1Tjn0DODt6M" http://localhost:8082/history
curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ0NTEyfQ.AHsMkBvr5tVYmQVaNlxAMWRFBi0uOSEN1Tjn0DODt6M" http://localhost:8082/templates
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ0NTEyfQ.AHsMkBvr5tVYmQVaNlxAMWRFBi0uOSEN1Tjn0DODt6M" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"test@example.com", "template_id":1, "data": {"name": "–É∏–≤–∞–Ω"}}'
curl http://localhost:8081/health\

curl http://localhost:8082/health\

curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ0NTEyfQ.AHsMkBvr5tVYmQVaNlxAMWRFBi0uOSEN1Tjn0DODt6M" \\
  -d '{"channel":"email", "recipient":"invalid-email", "subject":"Test", "body":"Hello"}'
v deepseek.log
curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ0NTEyfQ.AHsMkBvr5tVYmQVaNlxAMWRFBi0uOSEN1Tjn0DODt6M" http://localhost:8082/stats\

for i in {1..11}; do\
  curl -X POST http://localhost:8081/register \\
    -H "Content-Type: application/json" \\
    -d '{"email":"test'$i'@example.com", "password":"password"}'\
  echo\
done\

LONG_SUBJECT=$(head -c 300 /dev/zero | tr '\0' 'a')\
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ0NTEyfQ.AHsMkBvr5tVYmQVaNlxAMWRFBi0uOSEN1Tjn0DODt6M" \\
  -d '{"channel":"email", "recipient":"test@example.com", "subject":"'$LONG_SUBJECT'", "body":"Hello"}'\

LONG_SUBJECT=$(head -c 300 /dev/zero | tr '\0' 'a')\
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ0NTEyfQ.AHsMkBvr5tVYmQVaNlxAMWRFBi0uOSEN1Tjn0DODt6M" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"'$LONG_SUBJECT'", "body":"Hello"}'\

./scripts/down.sh
v ~/code/notify-platform/notification-service/internal/repository/notification.go
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
v ~/code/notify-platform/notification-service/internal/handler/template.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
chmod +x ~/code/notify-platform/scripts/*.sh\

clear
./scripts/up.sh
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ1Mzg0fQ.plCaRhoQnoByCSH_o8uCPYDcUgRbD4IL0aW3jSbQskM" \\
  -d '{"channel":"email", "recipient":"invalid-email", "subject":"Test", "body":"Hello"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ1Mzg0fQ.plCaRhoQnoByCSH_o8uCPYDcUgRbD4IL0aW3jSbQskM" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"Hello!!"}'\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ1Mzg0fQ.plCaRhoQnoByCSH_o8uCPYDcUgRbD4IL0aW3jSbQskM" http://localhost:8082/history\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ1Mzg0fQ.plCaRhoQnoByCSH_o8uCPYDcUgRbD4IL0aW3jSbQskM" http://localhost:8082/stats\

curl http://localhost:8082/health\

curl http://localhost:8081/health\

LONG_SUBJECT=$(head -c 300 /dev/zero | tr '\0' 'a')\
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ1Mzg0fQ.plCaRhoQnoByCSH_o8uCPYDcUgRbD4IL0aW3jSbQskM" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"test@example.com", "subject":"'$LONG_SUBJECT'", "body":"Hello"}'
v deepseek.log
for i in {1..11}; do\
  curl -X POST http://localhost:8081/register \\
    -H "Content-Type: application/json" \\
    -d '{"email":"latest'$i'@example.com", "password":"newpasswd"}'\
  echo\
done\

curl -X POST http://localhost:8082/templates \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ1Mzg0fQ.plCaRhoQnoByCSH_o8uCPYDcUgRbD4IL0aW3jSbQskM" \\
  -H "Content-Type: application/json" \\
  -d '{"user_id":1, "name":"Welcome", "subject":"Welcome", "body":"Hello, {{name}}!"}'\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ1Mzg0fQ.plCaRhoQnoByCSH_o8uCPYDcUgRbD4IL0aW3jSbQskM" http://localhost:8082/templates\

curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ1Mzg0fQ.plCaRhoQnoByCSH_o8uCPYDcUgRbD4IL0aW3jSbQskM" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "template_id":2, "data": {"name": "Max"}}'\

clear
./scripts/down.sh
v ~/code/notify-platform/notification-service/internal/repository/notification.go
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/notification-service/internal/handler/template.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
clear
./scripts/down.sh
clear
chmod +x ~/code/notify-platform/scripts/*.sh\

./scripts/up.sh
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ4OTk0fQ.fbvR3-4P_a1Gs8S7AM8Egrsmudj9tqXWwFNtIpfs_-A" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"H3llo!!"}'\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ4OTk0fQ.fbvR3-4P_a1Gs8S7AM8Egrsmudj9tqXWwFNtIpfs_-A" http://localhost:8082/history
curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ4OTk0fQ.fbvR3-4P_a1Gs8S7AM8Egrsmudj9tqXWwFNtIpfs_-A" http://localhost:8082/stats
curl http://localhost:8082/health\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ4OTk0fQ.fbvR3-4P_a1Gs8S7AM8Egrsmudj9tqXWwFNtIpfs_-A" http://localhost:8082/templates
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTQ4OTk0fQ.fbvR3-4P_a1Gs8S7AM8Egrsmudj9tqXWwFNtIpfs_-A" \\
  -d '{"channel":"email", "recipient":"invalid-email", "subject":"Test", "body":"Hello"}'
cd ~/code/notify-platform/logs/
ll
v notification-service.log
v user-service.log
v email-worker.log
cd ..
./scripts/down.sh
v  ~/code/notify-platform/notification-service/cmd/main.go
v  ~/code/notify-platform/workers/email-worker/cmd/main.go
v ~/code/notify-platform/notification-service/internal/handler/template.go
v ~/code/notify-platform/workers/email-worker/cmd/main.go 
clear
v ~/code/notify-platform/workers/email-worker/cmd/main.go
v ~/code/notify-platform/workers/telegram-worker/cmd/main.go
v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go
clear
ls
clear
chmod +x ~/code/notify-platform/scripts/*.sh\

clear
ls
./scripts/up.sh
curl -X POST http://localhost:8081/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"latest1@example.com", "password":"newpasswd"}'
curl -X POST http://localhost:8082/notify \\
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTUwMTkzfQ.PT0pcdJ6RlFJxYU1skn-N27Gzm293Ahvm9WOzQQJ7gk" \\
  -H "Content-Type: application/json" \\
  -d '{"channel":"email", "recipient":"latest1@example.com", "subject":"Test", "body":"H3llo!!"}'\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTUwMTkzfQ.PT0pcdJ6RlFJxYU1skn-N27Gzm293Ahvm9WOzQQJ7gk" http://localhost:8082/history\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTUwMTkzfQ.PT0pcdJ6RlFJxYU1skn-N27Gzm293Ahvm9WOzQQJ7gk" http://localhost:8082/stats\

curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4IiwiZXhwIjoxNzQ5MTUwMTkzfQ.PT0pcdJ6RlFJxYU1skn-N27Gzm293Ahvm9WOzQQJ7gk" http://localhost:8082/templates\

clear
v logs
cd
sudo pacman -Syyu
paru
clear
reboot
sway
v deepseek.log
cd code/notify-platform
ll
v ~/code/notify-platform/.env\

cd deployments
ls
tree
v ~/code/notify-platform/deployments/docker-compose.yml\

v ~/code/notify-platform/deployments/grafana/datasources.yml\

v ~/code/notify-platform/deployments/grafana/dashboards.yml\

v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json\

v ~/code/notify-platform/deployments/prometheus/prometheus.yml\

v ~/code/notify-platform/deployments/signoz/otel-collector-config.yaml\

cd ..
v ~/code/notify-platform/go.mod\

cd notification-service
ls
tree
v ~/code/notify-platform/notification-service/go.mod\

v ~/code/notify-platform/notification-service/internal/handler/notification.go\

v ~/code/notify-platform/notification-service/internal/handler/bulk.go\

v ~/code/notify-platform/notification-service/internal/handler/template.go\

v ~/code/notify-platform/notification-service/internal/middleware/auth.go\

v ~/code/notify-platform/notification-service/internal/repository/notification.go\

v ~/code/notify-platform/notification-service/cmd/main.go\

v ~/code/notify-platform/package.json\

v ~/code/notify-platform/scripts/up.sh\

v ~/code/notify-platform/scripts/down.sh\

cd ../user-service
tree
v ~/code/notify-platform/user-service/go.mod\

v ~/code/notify-platform/user-service/cmd/main.go\

v ~/code/notify-platform/user-service/internal/handler/auth.go\

v ~/code/notify-platform/user-service/internal/handler/password.go\

v ~/code/notify-platform/user-service/internal/middleware/auth.go\

v ~/code/notify-platform/user-service/pkg/common/password.go\

v ~/code/notify-platform/user-service/pkg/common/email.go\

v ~/code/notify-platform/user-service/pkg/common/limiter.go\

cd ../workers/email-worker
tree
v ~/code/notify-platform/workers/email-worker/cmd/main.go\

v ~/code/notify-platform/workers/email-worker/go.mod\

v ~/code/notify-platform/workers/telegram-worker/cmd/main.go\

v ~/code/notify-platform/workers/telegram-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go\

cp deepseek.log deepseek-4ccd7956-ff00-4c4a-a8c5-7e61d0afc67b.log
clear
rm ~/code/notify-platform/notification-service/internal/handler/bulk.go\

rm ~/code/notify-platform/notification-service/internal/handler/template.go\

clear
v ~/code/notify-platform/notification-service/internal/repository/notification.go
v ~/code/notify-platform/notification-service/cmd/main.go
cd code/notify-platform
cd user-service/migrations
ls
rm 004_create_templates_table.up.sql
mv 005_add_password_reset_fields.up.sql 004_add_password_reset_fields.up.sql
clear
cd ..
v scripts/up.sh
v ~/code/notify-platform/frontend/dashboard.html
clear
cd scripts
ls
chmod +x down.sh up.sh
clear
cd ..
reboot
sway
sudo systemctl start docker
clear
cd scripts
cd code/notify-platform
cd scripts
chmod +x down.sh up.sh
clear
./up.sh
v up.sh
reboot
sway
paru
clear
ls
sudo pacman -Syyu
clear
ls
sudo systemctl start docker
clear
reboot
sway
sudo systemctl start docker
clear
cd code/notify-platform
cd scripts
chmod +x down.sh up.sh
clear
cd ..
cd scripts
./up.sh
v up.sh
v ~/code/notify-platform/frontend/verify-email.html\

v ~/code/notify-platform/frontend/js/verify-email.js
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/user-service/cmd/main.go
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/frontend/login.html
v ~/code/notify-platform/frontend/verify-email.html
v ~/code/notify-platform/frontend/js/verify-email.js
v ~/code/notify-platform/user-service/internal/handler/auth.go\

cd ..
v user-service/cmd/main.go
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/user-service/internal/handler/password.go
v user-service/cmd/main.go
reboot
sway
sudo systemctl start docker
clear
cd code/notify-platform
cd scripts
chmod +x down.sh up.sh
./up.sh
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/frontend/verify-email.html
v ~/code/notify-platform/frontend/js/verify-email.js
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ../user-service/cmd/main.go
v ~/code/notify-platform/frontend/css/style.css
./down.sh
./up.sh
./down.sh
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/user-service/cmd/main.go
rm ~/code/notify-platform/frontend/verify-email.html\
rm ~/code/notify-platform/frontend/js/verify-email.js
v ~/code/notify-platform/user-service/internal/handler/password.go
./up.sh
clear
cd ..
clear
ll
rm package.json package-lock.json 
rm frontend frontend-server 
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/user-service/cmd/main.go
v ~/code/notify-platform/.env
v ~/code/notify-platform/deployments/docker-compose.yml\

v scripts/up.sh
v scripts/down.sh
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/user-service/internal/handler/password.go
v ~/code/notify-platform/test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/test-api.sh
clear
ll
v test-api.sh
mv test-api.sh scripts
cd scripts
ls
v test-api.sh
cd ..
clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
clear
–∫—É£–∏—É©—É©–µ
reboot
sway
sudo systemctl start docker
clear
sudo systemctl status docker
clear
docker ps
cd code/notify-platform
cd scripts
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
clear
./up.sh
docker-compose -f ~/code/notify-platform/deployments/docker-compose.yml down --remove-orphans\

v ../deployments/docker-compose.yml
lear
clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
clear
./up.sh
clear
./test-api.sh
clear
./test-api.sh
clear
cd ..
clear
cd
v deepseek.log
ll
v deepseek.log
cd code/notify-platform
v scripts/test-api.sh
v deepseek.log
cd code/notify-platform
ll
v ~/code/notify-platform/.env\

cd deployments
tree
v ~/code/notify-platform/deployments/docker-compose.yml\

v ~/code/notify-platform/deployments/grafana/datasources.yml\

v ~/code/notify-platform/deployments/grafana/dashboards.yml\

v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json\

v ~/code/notify-platform/deployments/prometheus/prometheus.yml\

v ~/code/notify-platform/deployments/signoz/otel-collector-config.yaml\

cd ..
ll
v ~/code/notify-platform/go.mod\

cd notification-service
ls
tree
\:q!
v ~/code/notify-platform/notification-service/go.mod\

v ~/code/notify-platform/notification-service/internal/handler/notification.go\

v ~/code/notify-platform/notification-service/internal/middleware/auth.go\

v ~/code/notify-platform/notification-service/internal/repository/notification.go\

v ~/code/notify-platform/notification-service/cmd/main.go\

cd ..
cd scripts
ls
v ~/code/notify-platform/scripts/up.sh\

v ~/code/notify-platform/scripts/down.sh\

v ~/code/notify-platform/scripts/test-api.sh\

cd ..
ll
rm node_modules
ll
cd logs
rm *
cd ..
ll
cd user-service
tree
v ~/code/notify-platform/user-service/go.mod\

v ~/code/notify-platform/user-service/cmd/main.go\

v ~/code/notify-platform/user-service/internal/handler/auth.go\

v ~/code/notify-platform/user-service/internal/handler/password.go\

v ~/code/notify-platform/user-service/internal/middleware/auth.go\

cd migrations
ls
v 001_create_users_table.up.sql
v ~/code/notify-platform/user-service/migrations/002_add_verification_fields.up.sql\

v ~/code/notify-platform/user-service/migrations/003_create_notifications_table.up.sql\

v ~/code/notify-platform/user-service/migrations/004_add_password_reset_fields.up.sql\

ll
v ~/code/notify-platform/user-service/pkg/common/password.go\

v ~/code/notify-platform/user-service/pkg/common/email.go\

v ~/code/notify-platform/user-service/pkg/common/limiter.go\

cd ..
ls
cd workers
ls
v ~/code/notify-platform/workers/email-worker/cmd/main.go\

v ~/code/notify-platform/workers/email-worker/go.mod\

v ~/code/notify-platform/workers/telegram-worker/cmd/main.go\

v ~/code/notify-platform/workers/telegram-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go\

clear
cd code/notify-platform
v ~/code/notify-platform/workers/telegram-worker/cmd/main.go
v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go
v ~/code/notify-platform/deployments/prometheus/prometheus.yml
v ~/code/notify-platform/deployments/docker-compose.yml
v ~/code/notify-platform/scripts/test-api.sh
cd scripts
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
clear
cd ..
cd scripts
./down.sh
./up.sh
./test-api.sh
clear
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./down.sh
./up.sh
./test-api.sh
curl -X GET "http://localhost:8081/verify-email?token=28136d57-5e81-40f0-b4db-6673468bf49e"
v test-api.sh
clear
v test-api.sh
./down.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./test-api.sh
v test-api.sh
./down.sh
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/scripts/test-api.sh
clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
cd ..
cd scripts
./down.sh
./up.sh
./test-api.sh
./down.sh
clear
ls
cd ..
ls
cd scripts
ls
v test-api.sh
v ~/code/notify-platform/user-service/internal/handler/auth.go
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
./test-api.sh
v ~/code/notify-platform/user-service/internal/handler/auth.go
./down.sh
./up.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./test-api.sh
clear
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./test-api.sh
clear
./down.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
./test-api.sh
reboot
sway
sudo systemctl status docker
sudo systemctl start docker
clear
cd code/notify-platform
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
cd scripts
./up.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./test-api.sh
docker-compose -f deployments/docker-compose.yml ps\

cd code/notify-platform
docker-compose -f deployments/docker-compose.yml ps\

curl -v http://localhost:8081/health\

sudo lsof -i :8081\

cclear
lear
clear
cd ..
clear
v ~/code/notify-platform/user-service/internal/handler/auth.go
clear
cd scripts
./down.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
./test-api.sh
clear
./down.sh
v ~/code/notify-platform/user-service/internal/handler/auth.go
./down.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
./test-api.sh
reboot
sway
sudo systemctl start docker
cd code/notify-platform
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
cd sc
cd scripts
./up.sh
./test-api.sh
v test-api.sh
clear
./down.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
./test-api.sh
curl -X POST http://localhost:8081/reset-password \\\
  -H "Content-Type: application/json" \\\
  -d '{"token":"53a0a79e-24b2-4a0c-8ab9-4376da2a206f", "password":"1234567890", "confirm_password":"1234567890"}'
v test-api.sh
v ~/code/notify-platform/user-service/pkg/common/password.go
./down.sh
v test-api.sh
clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
./test-api.sh
e
clear
v deepseek.log
cd code/notify-platform
v ~/code/notify-platform/.env\

v ~/code/notify-platform/deployments/docker-compose.yml\

v ~/code/notify-platform/deployments/grafana/datasources.yml\

v ~/code/notify-platform/deployments/grafana/dashboards.yml\

v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json\

v ~/code/notify-platform/deployments/prometheus/prometheus.yml\

v ~/code/notify-platform/deployments/signoz/otel-collector-config.yaml\

v ~/code/notify-platform/go.mod\

cd notification-service
tree
v ~/code/notify-platform/notification-service/go.mod\

v ~/code/notify-platform/notification-service/internal/handler/notification.go\

v ~/code/notify-platform/notification-service/internal/middleware/auth.go\

v ~/code/notify-platform/notification-service/internal/repository/notification.go\

v ~/code/notify-platform/notification-service/cmd/main.go\

v ~/code/notify-platform/scripts/up.sh\

v ~/code/notify-platform/scripts/down.sh\

v ~/code/notify-platform/scripts/test-api.sh\

cd ../user-service
tree
v ~/code/notify-platform/user-service/go.mod\

v ~/code/notify-platform/user-service/cmd/main.go\

v ~/code/notify-platform/user-service/internal/handler/auth.go\

v ~/code/notify-platform/user-service/internal/handler/password.go\

v ~/code/notify-platform/user-service/internal/middleware/auth.go\

v ~/code/notify-platform/user-service/pkg/common/password.go\

v ~/code/notify-platform/user-service/pkg/common/email.go\

v ~/code/notify-platform/user-service/pkg/common/limiter.go\

v ~/code/notify-platform/workers/email-worker/cmd/main.go\

v ~/code/notify-platform/workers/email-worker/go.mod\

v ~/code/notify-platform/workers/telegram-worker/cmd/main.go\

v ~/code/notify-platform/workers/telegram-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go\

cd code/notify-platform
./do
cd scripts
./down.sh
v ~/code/notify-platform/user-service/cmd/main.go
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./down.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
./test-api.sh
v ~/code/notify-platform/user-service/internal/handler/auth.go
./down.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
./test-api.sh
v test-api.sh
v ../logs/notification-service.log
v ../logs/user-service.log
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ../user-service/migrations
clear
v up.sh
v test-api.sh
./down.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
./test-api.sh
v ../logs/user-service.log
v ~/code/notify-platform/user-service/internal/handler/auth.go
v up.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./down.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
./test-api.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./test-api.sh
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "telegram",\
    "recipient": "903968693",\
    "body": "Hello from FIXED Telegram Worker! 1221",\
    "data": {\
      "parse_mode": "Markdown"\
    }\
  }'
v test-api.sh
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "whatsapp",\
    "recipient": "79192492745",\
    "body": "Hello from Green-API! 1221"\
  }'
; curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "whatsapp",\
    "recipient": "79192492745",\
    "body": "Hello from Green-API! 1221"\
  }'
curl -X POST http://localhost:8082/notify \\
  -H "Content-Type: application/json" \\
  -d '{\
    "channel": "whatsapp",\
    "recipient": "79192492745",\
    "body": "Hello from Green-API! 1221"\
  }'
v ../logs/whatsapp-worker.log
v test-api.sh
v ../logs/telegram-worker.log
clear
cd ..
clear
v scripts/test-api.sh
curl -s -X POST http://localhost:8081/register \\
  -H \"Content-Type: application/json\" \\
  -d '{\"email\":\"aboba26@gmail.com\", \"password\":\"a21w9n703\"}'\

./deployments
cd ..
clear
cd scripts
./down.sh
clar
clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
cd code/notify-platform1
cd scripts/verbose
v telegram-worker-setup
clear
cd code/notify-platform
v scripts/test-api.sh
clear
./test-api.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./test-api.sh
rebootb
reboot
sway
sudo systemctl start docker
clear
cd code/notify-platform
cd scripts
v test-api.sh
clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
./test-api.sh
clear
reboot
sway
sudo systemctl start docker
cd code/notify-platform
cd scripts
v test-api.sh
clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
./test-api.sh
v ../logs/whatsapp-worker.log
v test-api.sh
cd code/notify-platform1
v scripts/verbose/whatsapp-worker-setup
clear
cd ...
cd ..
ls
rm notify-platform1
ll
rm 123123
cp notify-platform rabotaetvse
ls
cd notify-platform
v ~/code/notify-platform/deployments/docker-compose.yml
v ~/code/notify-platform/user-service/Dockerfile
v ~/code/notify-platform/notification-service/Dockerfile
v ~/code/notify-platform/user-service/Dockerfile
v ~/code/notify-platform/workers/email-worker/Dockerfile
v ~/code/notify-platform/workers/telegram-worker/Dockerfile
v ~/code/notify-platform/workers/whatsapp-worker/Dockerfile
cd scripts
v up.sh
v down.sh
cd ..
v ~/code/notify-platform/.env
rm ~/code/notify-platform/user-service/internal/handler/password.go
rm ~/code/notify-platform/deployments/signoz/otel-collector-config.yaml\
rmdir ~/code/notify-platform/deployments/signoz
clear
ls
v ~/code/notify-platform/user-service/pkg/common/email.go
v .env
docker exec -it deployments-mysql-1 mysql -u app -papp_password notify\

clear
reboot
sway
sudo systemctl start docker
clear
cd code/notify-platform1
cd code/notify-platform
clear
l
cleear
clear
ls
cd scripts
ls
v test-api.sh
clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
cd ..
v deployments/docker-compose.yml
cd workers
cd telegram-worker
v Dockerfile
cd code/notify-platform
v deployments/docker-compose.yml
reboot
sway
sudo systemctl start docker
clear
cd code/notify-platform
cd scripts
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
v te
v test-api.sh
clear
./up.sh
cd ..
v deployments/docker-compose.yml
clear
cd scripts
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./down.sh
clear
./up.sh
./test-api.sh
clear
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./test-api.sh
v ../logs/email-worker.log
v test-api.sh
v ~/code/notify-platform/workers/email-worker/cmd/main.go
./down.sh
docker exec deployments-rabbitmq-1 rabbitmqctl stop_app
./up.sh
docker exec deployments-rabbitmq-1 rabbitmqctl stop_app\

docker exec deployments-rabbitmq-1 rabbitmqctl reset\

docker exec deployments-rabbitmq-1 rabbitmqctl start_app\

docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify <<< "DELETE FROM notifications;"
docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify <<< "DELETE FROM users;"
clear
cd ..
shutdown
sway
paru -S sxwm niri
cd .config
ls
mkdir sxwm
cd sxwm
v sxwmrc
sxwm
niri
cd .config/niri
nvim config.kdl
sway
v sxwmrc
v config.kdl
cd ..
cd 
git clone https://github.com/kuokuo123/otter-launcher /tmp/otter-launcher\
cd /tmp/otter-launcher\
cargo build --release\
sudo cp /tmp/otter-launcher/target/release/otter-launcher /usr/bin/
touch $HOME/.config/otter-launcher/config.toml
cd ..
cd
mkdir otter-launcher
cd otter-launcher
touch $HOME/.config/otter-launcher/config.toml
v config.toml
cd ..
ls
mv sxwmrc sxwm
cd otter-launcher
cd ..
cd sway
ls
v config
cd
v otter-launcher.sh
chmod +x otter-launcher.sh
cd -
v config
cd
./otter-launcher.sh
v otter-launcher.sh
chmod +x otter-launcher.sh
sudo pacman -S foot
sudo pacman -S alacritty
v otter-launcher.sh
sudo pacman -S alacritty
chmod +x otter-launcher.sh
clear
cd ..
cd niri
v config.kdl
niri
clear
v config.kdl
clear
sway
reboot
sxwm
sway
cd .config/sxwm
ls
v sxwmrc
cd ..
ls
cd sxwm
ls
mv sxwmrc ..
ls
cd ..
ls
rm sxwm
cd
sudo pacman -S xorg startx
sudo pacman -S Xinerama libX11 startx
sudo pacman -S libx11 libxinerama gcc make\

sxwm
sway
ll
v .xinitrc
clear
chmod +x .xinitrc
reboot
ll
exec sxwm
sxwm
sway
sudo pacman -S cosmic
reboot
cosmic-session
ll
sway
sudo pacman -S awesome
awesome
clar
celea
clear
swai
sway
paru -S scroll
cd .config
ls
scroll
cd .config
ll
cd ..
scroll
sway
sudo pacman -S labwc\

labwc --reconfigure
cd .config
ls
labwc -s ghostty\

sudo pacman -S xorg xdotool libxft libxcomposite libxcursor libxrandr\

cleara
clear
shutdown
sway
sudo pacman -Runs labwc cosmic alacritty foot awesome sxwm 
sudo pacman -Runs labwc cosmic alacritty awesome sxwm 
sudo pacman -Runs scroll
sudo pacman -Runs scroll-git
clear
sudo pacman -Runs niri
clear
nmtui
sudo pacman -S telegram-desktop
v .config/sway/config
sudo systemctl start docker
v ~/code/notify-platform/workers/email-worker/cmd/main.go
clear
cd code/notify-platform
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
clear
cd scripts
clear
ls
./up.sh
v test-api.sh
clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./test-api.sh
cd code/notify-platform
v scripts/test-api.sh
v ../logs/email-worker.log
v ~/code/notify-platform/workers/email-worker/cmd/main.go
docker exec deployments-rabbitmq-1 rabbitmqctl stop_app\

docker exec deployments-rabbitmq-1 rabbitmqctl reset\

docker exec deployments-rabbitmq-1 rabbitmqctl start_app\

docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify <<< "DELETE FROM notifications;"
v ~/code/notify-platform/deployments/docker-compose.yml
./down.sh
v test-api.sh
cd ../deployments
docker-compose -f deployments/docker-compose.yml build --no-cache\

cd ..
docker-compose -f deployments/docker-compose.yml build --no-cache\

clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

cd scripts
./up.sh
v test-api.sh
./test-api.sh
v ../logs/email-worker.log
v ../logs/notification-service.log
v ../logs/user-service.log
clearl
clear
ls
cd ..
ls
tree
clear
v deepseek
v deepseek.log
cd code/notify-platform
tee
clear
tree
ll
v ~/code/notify-platform/.env\

cd deployments
ls
tree
v ~/code/notify-platform/deployments/docker-compose.yml\

v ~/code/notify-platform/deployments/grafana/datasources.yml\

v ~/code/notify-platform/deployments/grafana/dashboards.yml\

v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json\

v ~/code/notify-platform/deployments/prometheus/prometheus.yml\

tree
cd ..
v ~/code/notify-platform/go.mod\

cd notification-service
ls
tree
v ~/code/notify-platform/notification-service/go.mod\

v ~/code/notify-platform/notification-service/internal/handler/notification.go\

v ~/code/notify-platform/notification-service/internal/middleware/auth.go\

v ~/code/notify-platform/notification-service/internal/repository/notification.go\

v ~/code/notify-platform/notification-service/cmd/main.go\

v Dockerfile
cd ..
cd scripts
ls
v ~/code/notify-platform/scripts/up.sh\

v ~/code/notify-platform/scripts/down.sh\

v ~/code/notify-platform/scripts/test-api.sh\

cd ..
ll
cd user-service
ls
tree
v ~/code/notify-platform/user-service/go.mod\

v ~/code/notify-platform/user-service/Dockerfile\

v ~/code/notify-platform/user-service/pkg/common/limiter.go\

v ~/code/notify-platform/user-service/pkg/common/email.go\

v ~/code/notify-platform/user-service/pkg/common/password.go\

v ~/code/notify-platform/user-service/migrations/004_add_password_reset_fields.up.sql\

v ~/code/notify-platform/user-service/migrations/003_create_notifications_table.up.sql\

v ~/code/notify-platform/user-service/migrations/002_add_verification_fields.up.sql\

v ~/code/notify-platform/user-service/migrations/001_create_users_table.up.sql\

v ~/code/notify-platform/user-service/internal/middleware/auth.go\

v ~/code/notify-platform/user-service/internal/handler/password.go\

v ~/code/notify-platform/user-service/internal/handler/auth.go\

v ~/code/notify-platform/user-service/cmd/main.go\

cd internal/handler
ls
cd ..
cd workers
ls
cd email-worker
ll
cd ..
v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go\

v ~/code/notify-platform/workers/whatsapp-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/Dockerfile\

v ~/code/notify-platform/workers/telegram-worker/go.mod\

v ~/code/notify-platform/workers/telegram-worker/cmd/main.go\

v ~/code/notify-platform/workers/telegram-worker/Dockerfile\

v ~/code/notify-platform/workers/email-worker/go.mod\

v ~/code/notify-platform/workers/email-worker/cmd/main.go\

v ~/code/notify-platform/workers/email-worker/Dockerfile\

cd ..
cd 
cd code/notify-platform
cd logs
ls
v email-worker.log
clear
ls
cd code/notify-platform
v ~/code/notify-platform/workers/email-worker/cmd/main.go
cd scripts
./down.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

cd ..
docker-compose -f deployments/docker-compose.yml build --no-cache\

cd code/notify-platform
v scripts/test-api.sh
cd scripts
clear
ls
./up.sh
./test-api.sh
cd code/notify-platform
docker-compose -f ~/code/notify-platform/deployments/docker-compose.yml down --remove-orphans\

cd scripts
./down.sh
cd ..
clear
ls -a
cd Downloads
ls
clear
ls
cd Telegram\ Desktop
ls
cp Arch\ Install\ Script.txt ~
cd
clar
clear
ll
mv Arch\ Install\ Script.txt archinstallscript
v archinstallscript
cd .config
cd zsh
ls
v .zshrc
cd
v .zprofile
sudo pacman -S blesh
v archinstallscript
alias ls='ls --color=auto'
ls
ls -a
ll
ls -a
ls -ah
ls -lah
ls --hellp
ls --help
ls
ll
clear
ll
v otter-launcher.sh
alacritty
cd code/notify-platform
ls
v deployments/docker-compose.yml
—Å–≤
cd
v deepseek.log
clear
ls
v archinstallscript
pacman -S uutils-coreutils\

sudo pacman -S uutils-coreutils\

cargo run completion ls bash > /usr/local/share/bash-completion/completions/ls\

bash
sudo cargo run completion ls bash > /usr/local/share/bash-completion/completions/ls\

clear


coreutils_ls


uu-coreutils ls
clear
uu-coreutils ls
uu-coreutils ls -ah
uu-coreutils ls -ahl
ll
clear
cd code/notify-platform
v notification-service/cmd/main.go
clear
cd .config
ls
cd ghostty
ls
v config
cd .config
ls
clear
ll
cd ghostty
v config
cd -
cd .config/ghostty
ls
v config
clear
ls
cd code/notify-platform
ls
v .env
cd
v deepseek.log
paru
cd code/notify-platform
ls
cd ..
ls
rm rabotaetvse
cp notify-platform rabotaetvse
ls
cd notify-platform
sudo pacman -Syyu
paru
v .env
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
v ~/code/notify-platform/notification-service/internal/handler/notification.go
v ~/code/notify-platform/user-service/internal/middleware/auth.go
v ~/code/notify-platform/notification-service/cmd/main.go
clear
ls
docker ps
clear
mkdir -p ~/code/notify-platform/deployments/certs\

openssl req -x509 -newkey rsa:4096 \\
  -keyout ~/code/notify-platform/deployments/certs/key.pem \\
  -out ~/code/notify-platform/deployments/certs/cert.pem \\
  -days 365 -nodes -subj "/CN=notify-platform/O=Notification Platform"
v .env
v ~/code/notify-platform/deployments/docker-compose.yml
docker-compose -f deployments/docker-compose.yml down
docker-compose -f ~/code/notify-platform/deployments/docker-compose.yml down --remove-orphans\

clear
docker-compose -f deployments/docker-compose.yml up --build -d\

reboot
sway
sudo systemctl start docker
cd code/notify-platform
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
clear
docker-compose -f deployments/docker-compose.yml up --build -d\

docker-compose -f deployments/docker-compose.yml logs -f notification-service\

v logs/notification-service.log
./deployments
cd ..
cd s
cd scripts
./down.sh
./up.sh
curl -k -v https://localhost:8443/health\

cd ..
clear
v ~/code/notify-platform/deployments/docker-compose.yml
cd user-service
v Dockerfile
cd ..
cd notification-service
v Dockerfile
cd ../workers
ls
cd email-worker
v Dockerfile
cd ../telegram-worker
v Dockerfile
cd ../whatsapp-worker
v Dockerfile
cd ..
cd scripts
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./down.sh
docker-compose -f deployments/docker-compose.yml up --build -d\

cd ..
docker-compose -f deployments/docker-compose.yml up --build -d\

v ~/code/notify-platform/scripts/test-api.sh
cd scripts
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./up.sh
v test-api.sh
clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
clear
./test-api.sh
cd ..
cd deployments
clear
cd ..
cd scripts
./down.sh
cd ..
cd user-service
v Dockerfile
cd ..
cd notification-service
v Dockerfile
clear
cd ..
cd scripts
./down.sh
clwear
clear
v ~/code/notify-platform/notification-service/Dockerfile
v ~/code/notify-platform/user-service/Dockerfile
v ~/code/notify-platform/workers/email-worker/Dockerfile
v ~/code/notify-platform/workers/telegram-worker/Dockerfile
v ~/code/notify-platform/workers/whatsapp-worker/Dockerfile
cd ..
docker-compose -f ~/code/notify-platform/deployments/docker-compose.yml down --remove-orphans\

clear
docker-compose -f deployments/docker-compose.yml build --no-cache\

cd scripts
ls
v test-api.sh
cd ..
v deployments/docker-compose.yml
clear
ls
rm certs
ls
tree
clear
docker-compose -f ~/code/notify-platform/deployments/docker-compose.yml down --remove-orphans\

clear
docker-compose -f deployments/docker-compose.yml build --no-cache\

cd scripts
v test-api.sh
v up.sh
clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./test-api.sh
reboot
sway
sudo systemctl start docker
cd code/notify-platform
cd scripts
./up.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./test-api.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
./test-api.sh
v ../logs/notification-service.log
v ../logs/email-worker.log
cd ..
ls
cd ..
ls
cd rabotaetvse
ls
cd ..
v .config/sway/config
nautilus
cle
clear
ls
cd Ow
cd Downloads
ls
cd rabotaetvse
ls
cd ..
ls
mv notify-platform nerabotaev
mv rabotaetvse notify-platform
ls
cp notify-platform backuprabotaet
ls
cd notify-platform
cd
mv deepseek.log deepseek.txt
ls
v deepseek.txt
cd code/notify-platform
v ~/code/notify-platform/user-service/pkg/common/password.go
v ~/code/notify-platform/user-service/pkg/common/email.go
v ~/code/notify-platform/user-service/migrations/005_restrict_permissions.up.sql
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/user-service/pkg/common/limiter.go
v ~/code/notify-platform/user-service/pkg/common/email.go
v ~/code/notify-platform/deployments/docker-compose.yml
mkdir ~/code/notify-platform/deployments/promtail/
v ~/code/notify-platform/deployments/promtail/config.yaml
mkdir ~/code/notify-platform/deployments/loki/
v ~/code/notify-platform/deployments/loki/local-config.yaml
v ~/code/notify-platform/user-service/pkg/common/email.go
clear
ls
cd ..
ls
rm notify-platform
cp backuprabotaet notify-platform
cd notify-platform
cd scripts
./down.sh
cd ..
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
tree
clear
v ~/code/notify-platform/user-service/internal/middleware/auth.go
v ~/code/notify-platform/notification-service/internal/middleware/auth.go
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
mkdir -p ~/code/notify-platform/certs
openssl req -x509 -newkey rsa:4096 -nodes -keyout ~/code/notify-platform/certs/key.pem -out ~/code/notify-platform/certs/cert.pem -days 365 -subj "/CN=localhost"
v ~/code/notify-platform/.env
v ~/code/notify-platform/deployments/docker-compose.yml
clear
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/user-service/cmd/main.go
v ~/code/notify-platform/deployments/docker-compose.yml
v ~/code/notify-platform/scripts/test-api.sh
echo -e "\n# HTTPS and JWT settings" >> ~/code/notify-platform/.env\
echo "TLS_CERT_FILE=/app/certs/cert.pem" >> ~/code/notify-platform/.env\
echo "TLS_KEY_FILE=/app/certs/key.pem" >> ~/code/notify-platform/.env\
echo "JWT_ISSUER=notify-platform" >> ~/code/notify-platform/.env
v .env
clear
docker-compose -f ~/code/notify-platform/deployments/docker-compose.yml down --remove-orphans\

docker-compose -f deployments/docker-compose.yml up --build -d\

v .env
V
mkdir -p ~/code/notify-platform/certs
openssl req -x509 -newkey rsa:4096 -nodes \\
    -keyout ~/code/notify-platform/certs/key.pem \\
    -out ~/code/notify-platform/certs/cert.pem \\
    -days 365 -subj "/CN=localhost"
clear
docker-compose -f ~/code/notify-platform/deployments/docker-compose.yml down --remove-orphans\

docker-compose -f deployments/docker-compose.yml up --build -d\

v scripts/test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
cd scripts
./up.sh
./test-api.sh
cd ..
docker-compose -f deployments/docker-compose.yml logs -f user-service notification-service\

clear
ls
curl -k https://localhost:8443/metrics\

curl -k https://localhost:8444/metrics\

cd scripts
./down.sh
clear
v ~/code/notify-platform/notification-service/internal/middleware/auth.go
v ~/code/notify-platform/user-service/internal/handler/auth.go
./down.sh
clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
docker-compose -f deployments/docker-compose.yml up --build -d\

cd ..
docker-compose -f deployments/docker-compose.yml up --build -d\

cd scripts
./up.sh
./test-api.sh
cd ..
v logs/notification-service.log
v logs/user-service.log
clear
v scripts/up.sh
cd ..
ls
cp notify-platform rabotaetLATEST
cd notify-platform
./scripts/down.sh
v ~/code/notify-platform/scripts/up.sh
v ~/code/notify-platform/scripts/test-api.sh
v ~/code/notify-platform/workers/email-worker/cmd/main.go
cd scripts
ls
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
clear
./down.sh
—Å–¥—É£—É§–∫
clear
ls
cd ..
clear
ls
v deepseek.txt
cd code/notify-platform'
clear
cd code/notify-platform
clear
ls
tree
v ~/code/notify-platform/workers/whatsapp-worker/go.mod\

chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
cd scripts
v test-api.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
docker-compose -f deployments/docker-compose.yml up --build -d\

cd ..
docker-compose -f deployments/docker-compose.yml up --build -d\

cd scripts
./up.sh
./test-api.sh
clear
cd ..
ls
ll
clear
cd scripts
v up.sh
clear
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
clear
cd ..
ls
v deepseek.txt
v ~/code/notify-platform/workers/whatsapp-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/Dockerfile\

v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go\

tree
\:q!
v ~/code/notify-platform/workers/telegram-worker/go.mod\

v ~/code/notify-platform/workers/telegram-worker/Dockerfile\

v ~/code/notify-platform/workers/telegram-worker/cmd/main.go\

v ~/code/notify-platform/workers/email-worker/go.mod\

v ~/code/notify-platform/workers/email-worker/Dockerfile\

v ~/code/notify-platform/workers/email-worker/cmd/main.go\

cd user-service
tree
v ~/code/notify-platform/user-service/Dockerfile\

v ~/code/notify-platform/user-service/pkg/common/limiter.go\

v ~/code/notify-platform/user-service/pkg/common/email.go\

v ~/code/notify-platform/user-service/pkg/common/password.go\

v ~/code/notify-platform/user-service/migrations/004_add_password_reset_fields.up.sql\

v ~/code/notify-platform/user-service/migrations/003_create_notifications_table.up.sql\

v ~/code/notify-platform/user-service/migrations/002_add_verification_fields.up.sql\

v ~/code/notify-platform/user-service/migrations/001_create_users_table.up.sql\

v ~/code/notify-platform/user-service/internal/middleware/auth.go\

v ~/code/notify-platform/user-service/internal/handler/auth.go\

v ~/code/notify-platform/user-service/cmd/main.go\

v ~/code/notify-platform/user-service/go.mod\

cd ..
tree
v ~/code/notify-platform/scripts/test-api.sh\

v ~/code/notify-platform/scripts/down.sh\

v ~/code/notify-platform/scripts/up.sh\

tree
cd notification-service
ls
tree
v ~/code/notify-platform/notification-service/Dockerfile\

v ~/code/notify-platform/notification-service/cmd/main.go\

v ~/code/notify-platform/notification-service/internal/repository/notification.go\

v ~/code/notify-platform/notification-service/internal/middleware/auth.go\

v ~/code/notify-platform/notification-service/internal/handler/notification.go\

v ~/code/notify-platform/notification-service/go.mod\

cd ..
tree
v ~/code/notify-platform/go.mod\

v ~/code/notify-platform/.env\

tree
cd deployments
tree
v ~/code/notify-platform/deployments/prometheus/prometheus.yml\

v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json\

v ~/code/notify-platform/deployments/grafana/dashboards.yml\

v ~/code/notify-platform/deployments/grafana/datasources.yml\

v ~/code/notify-platform/deployments/docker-compose.yml\

clear
ls
cd ..
tree
v deepseek.txt
v certs/key.pem
v deepseek.txt
clear
cd code
ls
rm backuprabotaet nerabotaev rabotaetLATEST
cd notify-platform
./scripts/down.sh
clear
lc
clear
cd ..
ls
rm nerabotaev
sudo rm nerabotaev
sudo rm -rf nerabotaev
ls
cp notify-platform backup
ls
cd notify-platform
ls
clear
ls
clear
\\ 
clear
tmux
cd code
ll
cd notify-platform
clear
v ~/code/notify-platform/user-service/migrations/005_create_rate_limits_table.up.sql
v ~/code/notify-platform/notification-service/internal/repository/rate_limit.go
v ~/code/notify-platform/notification-service/internal/middleware/rate_limiter.go
clear
v ~/code/notify-platform/user-service/migrations/006_create_audit_logs_table.up.sql
v ~/code/notify-platform/notification-service/internal/repository/audit_log.go
v ~/code/notify-platform/notification-service/internal/service/audit_service.go
mkdir ~/code/notify-platform/notification-service/internal/service/
v ~/code/notify-platform/notification-service/internal/service/audit_service.go
v ~/code/notify-platform/deployments/prometheus/prometheus.yml
v ~/code/notify-platform/deployments/docker-compose.yml
v ~/code/notify-platform/common/pkg/vault/vault.go
mkdir ~/code/notify-platform/common/pkg/vault/
v ~/code/notify-platform/common/pkg/vault/vault.go
v ~/code/notify-platform/scripts/init-vault.sh
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
v ~/code/notify-platform/scripts/up.sh
v ~/code/notify-platform/common/pkg/vault/vault.go
v ~/code/notify-platform/scripts/init-vault.sh
v user-service/cmd/main.go
v notification-service/cmd/main.go
cd workers
ls
v email-worker/cmd/main.go
v telegram-worker/cmd/main.go
v whatsapp-worker/cmd/main.go
clear
cd ..
clear
ls
cd common
ls
cd pkg
ls
cd ..
go mod init github.com/skillissu3e/notify-platform/common\

clear
v pkg/vault/vault.go
go mod tidy
cd ..
ll
cd notification-service
ls
go mod tidy
cd ..
v go.mod
cd notification-service
ls
v go.mod
cd code/notify-platform
ls
cd user-service
ls
go mod tidy
v go.mod
clear
cd ..
clear
ls
cd notification-service
ls
go mod tidy
v go.mod
clear
ls
cd ..
clear
lc
ls
cd common
ls
rm go.mod go.sum 
ls
v ~/code/notify-platform/common/go.mod
v ~/code/notify-platform/common/pkg/vault/vault.go
v ~/code/notify-platform/notification-service/go.mod
cd ../notification-service
go mod tidy
clear
ls
v ~/code/notify-platform/notification-service/go.mod
cd ..
cd common
ls
rm go.sum go.mod
clear
ls
cd ..
v go.mod
go mod tidy
v go.mod
cd common
go mod init github.com/skillissu3e/notify-platform/common\

cd ..
v go.mod
go mod tidy
v go.mod
go mod tidy
cd code/backup
v go.mod
go mod tidy
clear
cd code/notify-platform
clear
–¥—É´
ls
cd common
ls
rm go.sum go.mod
mkdir -p ~/code/notify-platform/common/pkg/vault\

cd ~/code/notify-platform/common\

go mod init github.com/skillissu3e/notify-platform/common\

mv ~/code/notify-platform/common/pkg/vault/vault.go ~/code/notify-platform/common/pkg/vault/vault.go\

clear
v ~/code/notify-platform/notification-service/go.mod
clear
v ~/code/notify-platform/notification-service/cmd/main.go
clear
cd ..
ls
cd common
go mod init github.com/skillissu3e/notify-platform/common\

rm go.sum go.mod
go mod init github.com/skillissu3e/notify-platform/common\

go get github.com/hashicorp/vault/api\

clear
go mod tidy
cd ..
cd notification-service
go mod tidy\

clear
l
cd ,,
cd ..
ls
cd common
ls
cd pkg
ls
cd vault
ls
v vault.go
cd ..
clear
ls
rm common
mkdir ~/code/notify-platform/user-service/pkg/common/
v ~/code/notify-platform/user-service/pkg/common/vault.go
cd ~/code/notify-platform/notification-service\

go get github.com/hashicorp/vault/api@v1.9.2\

cd ~/code/notify-platform/user-service\

go get github.com/hashicorp/vault/api@v1.9.2\

cd ../workers
cd email-worker
go get github.com/hashicorp/vault/api@v1.9.2\

cd ../telegram-worker
go get github.com/hashicorp/vault/api@v1.9.2\

cd ../whatsapp-worker
go get github.com/hashicorp/vault/api@v1.9.2\

clear
cd ..
lear
clear
v notification-service/cmd/main.go
cd user-service
go get github.com/hashicorp/vault/api@v1.9.2\

go mod tidy\

cd ../notification-service
go mod tidy\

mkdir -p ~/code/notify-platform/internal/common\

touch ~/code/notify-platform/internal/common/go.mod\

v ~/code/notify-platform/internal/common/vault.go
~/code/notify-platform/internal/common/go.mod
v ~/code/notify-platform/internal/common/go.mod
clear
ls
cd ..
clear
ls
cd user-service
ls
tree
rm pkg/common/vault.go
ls
go mod tidy\

v cmd
cd ..
ls
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
v ~/code/notify-platform/scripts/up.sh
v ~/code/notify-platform/deployments/docker-compose.yml 
clear
—Å–¥—É£—É§–∫
reboot
sway
sudo systemctl start docker
cd code/notify-platform
cd scripts
ls
rm init-vault.sh
clear
v test-api.sh
clear
v ~/code/notify-platform/scripts/test-rate-limiting.sh
chmod +x ~/code/notify-platform/scripts/test-rate-limiting.sh\

docker-compose -f deployments/docker-compose.yml up --build -d\

cd ..
docker-compose -f deployments/docker-compose.yml up --build -d\

chmod +x ~/code/notify-platform/scripts/test-rate-limiting.sh\

chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
clear
./user-service
cd ../
ls
cd scripts
clear
ls
./up.sh
~/code/notify-platform/scripts/test-rate-limiting.sh\

curl -k -H "Authorization: Bearer $ACCESS_TOKEN" https://localhost:8444/audit?limit=10\

echo $ACCESS_TOKEN
cd ..
docker logs notify-platform_notification-service_1 | grep -E "Rate limit"\

clear
cd scripts
ls
v test-rate-limiting.sh
chmod +x ~/code/notify-platform/scripts/up.sh\
chmod +x ~/code/notify-platform/scripts/down.sh\
chmod +x ~/code/notify-platform/scripts/test-api.sh
chmod +x ~/code/notify-platform/scripts/test-rate-limiting.sh\

clear
./test-rate-limiting.sh
cd ..
docker-compose -f deployments/docker-compose.yml exec notification-service \\
  sh -c "redis-cli -h redis -p 6379 ping"
# –Éø—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É£–∫—Ç—É£—Ä—É£ –É±–É¥\
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify -e "SHOW TABLES LIKE 'rate_limits';"
clear
v ~/code/notify-platform/user-service/migrations/005_create_rate_limits_table.up.sql
v ~/code/notify-platform/user-service/Dockerfile
v ~/code/notify-platform/user-service/scripts/run-migrations.sh
mkdir ~/code/notify-platform/user-service/scripts/
v ~/code/notify-platform/user-service/scripts/run-migrations.sh
v ~/code/notify-platform/notification-service/internal/middleware/rate_limiter.go
v ~/code/notify-platform/notification-service/internal/repository/rate_limit.go
v ~/code/notify-platform/notification-service/internal/middleware/rate_limiter.go
v ~/code/notify-platform/user-service/migrations/005_create_rate_limits_table.up.sql
v ~/code/notify-platform/notification-service/internal/repository/rate_limit.go
v ~/code/notify-platform/user-service/scripts/wait-for.sh
v ~/code/notify-platform/user-service/scripts/run-migrations.sh
v ~/code/notify-platform/user-service/scripts/test-db-connection.sh
v ~/code/notify-platform/user-service/Dockerfile
cd scripts
ls
chmod +x ~/code/notify-platform/scripts/*.sh
clear
./down.sh
./up.sh
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify -e "SHOW TABLES;"
cd ..
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify -e "SHOW TABLES;"
cd user-service/scripts
ls
chmod +x *
ll
cd ..
ls
cd scripts
./down.sh
./up.sh
cd ,,
cd ..
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify -e "SHOW TABLES;"
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify -e "SELECT * FROM rate_limits;"
lcear
clear
mkdir -p ~/code/notify-platform/notification-service/migrations
v ~/code/notify-platform/notification-service/migrations/001_create_rate_limits_table.up.sql
v ~/code/notify-platform/notification-service/migrations/002_create_audit_logs_table.up.sql
v ~/code/notify-platform/notification-service/Dockerfile
v ~/code/notify-platform/notification-service/scripts/wait-for.sh
mkdir ~/code/notify-platform/notification-service/scripts/
v ~/code/notify-platform/notification-service/scripts/wait-for.sh
v ~/code/notify-platform/notification-service/scripts/test-db-connection.sh
v ~/code/notify-platform/notification-service/scripts/run-migrations.sh
rm user-service/migrations/005_create_rate_limits_table.up.sql user-service/migrations/006_create_audit_logs_table.up.sql
chmod +x /home/ame/code/notify-platform/notification-service/scripts/run-migrations.sh /home/ame/code/notify-platform/notification-service/scripts/test-db-connection.sh /home/ame/code/notify-platform/notification-service/scripts/wait-for.sh 
cd scripts
./down.sh
./up.sh
cd ..
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify -e "SHOW TABLES;"
lear
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify
# –£–¥–∞–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—É¶–∏–π –∏–∑ user-service\
rm -f ~/code/notify-platform/user-service/migrations/005_create_rate_limits_table.up.sql\
rm -f ~/code/notify-platform/user-service/migrations/006_create_audit_logs_table.up.sql\
\
# –£–¥–∞–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∏–∑ user-service\
rm -f ~/code/notify-platform/user-service/scripts/wait-for.sh\
rm -f ~/code/notify-platform/user-service/scripts/run-migrations.sh\
rm -f ~/code/notify-platform/user-service/scripts/test-db-connection.sh\
\
# –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–∑ Dockerfile user-service\
sed -i '/# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ MySQL –∫–ª–∏–µ–Ω—Ç–∞/,/CMD \["sh", "-c", "\/app\/wait-for.sh mysql:3306 -- \/app\/run-migrations.sh && \/app\/main"\]/d' ~/code/notify-platform/user-service/Dockerfile\
\
# –É≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—É¨–Ω–æ–≥–æ CMD –≤ user-service Dockerfile\
echo 'CMD ["./main"]' >> ~/code/notify-platform/user-service/Dockerfile\
\
# –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω—É´—É• —Å–∫—Ä–∏–ø—Ç–æ–≤ –∏–∑ notification-service\
rm -rf ~/code/notify-platform/notification-service/scripts\
rm -rf ~/code/notify-platform/notification-service/migrations\
\
# –É≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—É¨–Ω–æ–≥–æ Dockerfile –¥–ª—ÉØ notification-service\
cat > ~/code/notify-platform/notification-service/Dockerfile <<EOL\
FROM golang:1.24.3-alpine AS builder\
WORKDIR /app\
COPY . .\
RUN go mod download\
RUN go build -o main ./cmd/main.go\
\
FROM alpine:latest\
WORKDIR /app\
COPY --from=builder /app/main .\
CMD ["./main"]\
EOL
clear
v ~/code/notify-platform/notification-service/Dockerfile
clear
cd scripts
./down.sh
./up.sh
cd ..
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify -e "SHOW TABLES;"
clear
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify -e "SELECT * FROM rate_limits;"
clear
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify -e "SHOW TABLES;"
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify -e "SELECT * FROM rate_limits;"
# –ÉÅ–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—ÉØ —Ç–µ—Å—Ç–∞\
cat > ~/code/notify-platform/scripts/test-rate-limiting.sh <<'EOL'\
#!/bin/bash\
\
# –Éø–æ–ª—É£—Éß–∞–µ–º —Ç–æ–∫–µ–Ω\
LOGIN_RESPONSE=$(curl -k -s -X POST https://localhost:8443/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"zaknutugno@gufum.com", "password":"newpassword"}')\
\
ACCESS_TOKEN=$(echo $LOGIN_RESPONSE | jq -r '.access_token')\
\
# –§—É£–Ω–∫—É¶–∏—ÉØ –¥–ª—ÉØ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤\
send_request() {\
  local phone="7919$(printf "%07d" $1)"\
  local status_code=$(curl -k -o /dev/null -s -w "%{http_code}\n" \\
    -X POST https://localhost:8444/notify \\
    -H "Authorization: Bearer $ACCESS_TOKEN" \\
    -H "Content-Type: application/json" \\
    -d "{\"channel\":\"whatsapp\", \"recipient\":\"$phone\", \"body\":\"Rate limit test $1\"}")\
  \
  echo "Request $1: HTTP $status_code"\
  if [ "$status_code" -eq 429 ]; then\
    echo "Rate limit triggered on request $i"\
  fi\
}\
\
# –Éæ—Ç–ø—Ä–∞–≤–ª—ÉØ–µ–º 20 –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–¥—Ä—ÉØ–¥\
echo "Sending 20 requests to test rate limiting:"\
for i in {1..20}; do\
  send_request $i\
  sleep 0.1\
done\
EOL\
\
chmod +x ~/code/notify-platform/scripts/test-rate-limiting.sh\
~/code/notify-platform/scripts/test-rate-limiting.sh
TOKEN=$(curl -k -s -X POST https://localhost:8443/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"zaknutugno@gufum.com", "password":"newpassword"}' | jq -r '.access_token')\
\
# –Éø—Ä–æ–≤–µ—Ä—ÉØ–µ–º –∞—É£–¥–∏—Ç –ª–æ–≥–∏\
curl -k -H "Authorization: Bearer $TOKEN" https://localhost:8444/audit?limit=5
v ~/code/notify-platform/scripts/test-rate-limiting.sh
chmod +x ~/code/notify-platform/scripts/test-rate-limiting.sh
clear
./scripts/test-rate-limiting.sh
# –Éø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É£—Éß–µ–Ω–∏—ÉØ —Ç–æ–∫–µ–Ω–∞\
curl -k -v -X POST https://localhost:8443/login \\
  -H "Content-Type: application/json" \\
  -d '{"email":"zaknutugno@gufum.com", "password":"newpassword"}'
clear
grep JWT_SECRET ~/code/notify-platform/.env\

tree
clear
ls
cd ..
ls
cd notify-platform
ls
cp deepseek.txt deepseekrabotaet.txt
v deepseek.txt
cd code/notify-platform
ls
tree
cd code/notify-platform
tree
v ~/code/notify-platform/workers/whatsapp-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/Dockerfile\

v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go\

v ~/code/notify-platform/workers/telegram-worker/go.mod\

v ~/code/notify-platform/workers/telegram-worker/Dockerfile\

v ~/code/notify-platform/workers/telegram-worker/cmd/main.go\

v ~/code/notify-platform/workers/email-worker/go.mod\

v ~/code/notify-platform/workers/email-worker/Dockerfile\

v ~/code/notify-platform/workers/email-worker/cmd/main.go\

tree
rm -rf user-service/scripts
cd user-service
ls
cd ..
v ~/code/notify-platform/user-service/Dockerfile\

v ~/code/notify-platform/user-service/pkg/common/limiter.go\

v ~/code/notify-platform/user-service/pkg/common/email.go\

v ~/code/notify-platform/user-service/pkg/common/password.go\

v ~/code/notify-platform/user-service/migrations/004_add_password_reset_fields.up.sql\

v ~/code/notify-platform/user-service/migrations/003_create_notifications_table.up.sql\

v ~/code/notify-platform/user-service/migrations/002_add_verification_fields.up.sql\

v ~/code/notify-platform/user-service/migrations/001_create_users_table.up.sql\

v ~/code/notify-platform/user-service/internal/middleware/auth.go\

v ~/code/notify-platform/user-service/internal/handler/auth.go\

v ~/code/notify-platform/user-service/cmd/main.go\

v ~/code/notify-platform/user-service/go.mod\

tree
cd scripts
ls
v ~/code/notify-platform/scripts/test-api.sh\

v ~/code/notify-platform/scripts/down.sh\

v ~/code/notify-platform/scripts/up.sh\

v ~/code/notify-platform/scripts/test-rate-limiting.sh\

cd ..
tree
cd notification-service
ls
tree
v ~/code/notify-platform/notification-service/Dockerfile\

v ~/code/notify-platform/notification-service/cmd/main.go\

v ~/code/notify-platform/notification-service/internal/service/audit_service.go\

v ~/code/notify-platform/notification-service/internal/repository/rate_limit.go\

v ~/code/notify-platform/notification-service/internal/repository/audit_log.go\

v ~/code/notify-platform/notification-service/internal/repository/notification.go\

v ~/code/notify-platform/notification-service/internal/middleware/rate_limiter.go\

v ~/code/notify-platform/notification-service/internal/middleware/auth.go\

v ~/code/notify-platform/notification-service/internal/handler/notification.go\

v ~/code/notify-platform/notification-service/go.mod\

v ~/code/notify-platform/go.mod\

cd ../deployments
;s
tree
v ~/code/notify-platform/deployments/prometheus/prometheus.yml\

v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json\

v ~/code/notify-platform/deployments/grafana/dashboards.yml\

v ~/code/notify-platform/deployments/grafana/datasources.yml\

v ~/code/notify-platform/deployments/docker-compose.yml\

v ~/code/notify-platform/.env\

cd code/notify-platform
./scripts/down.sh
chmod +x ~/code/notify-platform/scripts/*.sh
clear
v ~/code/notify-platform/user-service/internal/middleware/auth.go
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/notification-service/internal/middleware/rate_limiter.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
v ~/code/notify-platform/deployments/prometheus/prometheus.yml
v ~/code/notify-platform/deployments/docker-compose.yml
v .env
cd scripts
ls
v test-api.sh
chmod +x ~/code/notify-platform/scripts/*.sh
clear
docker ps
clear
./down.sh
clear
btop
reboot
sway
sudo systemctl start docker
cd .config/sway
v config
cd code/notify-platform
—Å–≤ 
cd
clear
v deepseek.txt
cd code
l
ll
cp notify-platform backup1
ll
cd ..
cd code/notify-platform
clear
–¥—É´
ls
cd scripts
v test-api.sh
./up.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./test-api.sh
cd ..
docker-compose logs -f
v logs/user-service.log
v logs/notification-service.log
v logs/email-worker.log
cd scripts
./down.sh
cd ..
v notification-service/internal/middleware/auth.go
v logs/email-worker.log
v notification-service/internal/middleware/auth.go
clear
cd 
cd .config/nvim
ls
v lua/plugins/colorscheme.lua
clear
cd code/notify-platform
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/user-service/internal/handler/auth.go\
\

v ~/code/notify-platform/workers/email-worker/cmd/main.go
clear
ls
cd scripts
ls
chmod +x ~/code/notify-platform/scripts/*.sh
./down.sh
./up.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./test-api.sh
cd ..
v logs/email-worker.log
clear
v deepseek.txt
cd ..
ccd c
cd 
clear
v deepseek.txt
cd code/notify-platform
v ~/code/notify-platform/notification-service/cmd/main.go\

v ~/code/notify-platform/user-service/internal/handler/auth.go\

v ~/code/notify-platform/workers/email-worker/cmd/main.go\

sudo pacman -S firefox 
firefox
cd code/notify-platform
clear
v ~/code/notify-platform/notification-service/internal/middleware/rate_limiter.go
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/workers/email-worker/cmd/main.go
clear
cd scripts
ls
./down.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./up.sh
v ~/code/notify-platform/workers/telegram-worker/cmd/main.go
v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go
chmod +x ~/code/notify-platform/scripts/*.sh
./down.sh
./up.sh
./test-api.sh
./down.sh
cd ..
v logs/email-worker.log
v logs/whatsapp-worker.log
v logs/telegram-worker.log
clear
v logs/user-service.loG
v logs/user-service.log
v logs/notification-service.log
clear
ls
docker volume rm notify-platform_rabbitmq-data\

clear
lc
clear
./scripts/up.sh
docker volume rm notify-platform_rabbitmq-data\

cd scripts
v te
v test-api.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./test-api.sh
cd ..
v logs/email-worker.log
cd logs
ls
ll
cd ..
docker ps
docker-compose -f ~/code/notify-platform/deployments/docker-compose.yml down --remove-orphans\

v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/workers/email-worker/cmd/main.go
v ~/code/notify-platform/workers/telegram-worker/cmd/main.go
v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go
clear
lear
clear
cd scripts
chmod +x ~/code/notify-platform/scripts/*.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./up.sh
./test-api.sh
cd ..
curl http://localhost:8081/metrics\

curl http://localhost:8082/metrics\

curl http://localhost:8083/metrics\

curl http://localhost:8084/metrics\

curl http://localhost:8085/metrics\

docker-compose -f deployments/docker-compose.yml logs email-worker\

docker-compose -f deployments/docker-compose.yml logs telegram-worker\

docker-compose -f deployments/docker-compose.yml logs whatsapp-worker\

./scripts/down.sh\

clear
cd logs
ls
rm *
ls
cd ..
clear
v scripts/up.sh
clear
chmod +x ~/code/notify-platform/scripts/*.sh
clear
cd 
v deepseek.txt
cd -
v scripts/test-
v scripts/test-api.sh
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/deployments/prometheus/prometheus.yml
v ~/code/notify-platform/deployments/docker-compose.yml
cd scripts
ls
./down.sh
v test-api.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./up.sh
./test-api.sh
cd ..
v ~/code/notify-platform/deployments/docker-compose.yml
cd scripts
./down.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./up.sh
./test-api.sh
curl http://localhost:8081/metrics\

curl https://localhost:8081/metrics\

curl http://localhost:8081/metrics\

curl http://localhost:8082/metrics\

curl http://localhost:8083/metrics\

clear
cd ..
docker-compose -f deployments/docker-compose.yml logs email-worker\

docker-compose -f deployments/docker-compose.yml logs notification-service\

docker-compose -f deployments/docker-compose.yml logs user-service\

clear
docker ps
cd scripts
./down.sh
clear
cd ..
clear
v ~/code/notify-platform/user-service/internal/handler/auth.go
v ~/code/notify-platform/deployments/docker-compose.yml
v ~/code/notify-platform/deployments/prometheus/prometheus.yml
docker-compose -f deployments/docker-compose.yml build --no-cache\

cd scripts
v test-api.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./up.sh
./test-api.sh
curl http://localhost:8081/metrics\

curl http://localhost:8082/metrics\

curl http://localhost:8083/metrics\

curl http://localhost:8084/metrics\

curl http://localhost:8085/metrics\

cd ..
ls
cp notify-platform backup2
clear
cd notify-platform
ls
cd
v deepseek.txt
cd code/notify-platform
tree
v ~/code/notify-platform/workers/whatsapp-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/Dockerfile\

v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go\

v ~/code/notify-platform/workers/telegram-worker/go.mod\

v ~/code/notify-platform/workers/telegram-worker/Dockerfile\

v ~/code/notify-platform/workers/telegram-worker/cmd/main.go\

v ~/code/notify-platform/workers/email-worker/go.mod\

v ~/code/notify-platform/workers/email-worker/Dockerfile\

v ~/code/notify-platform/workers/email-worker/cmd/main.go\

tree
v ~/code/notify-platform/user-service/Dockerfile\

v ~/code/notify-platform/user-service/pkg/common/limiter.go\

v ~/code/notify-platform/user-service/pkg/common/email.go\

v ~/code/notify-platform/user-service/pkg/common/password.go\

v ~/code/notify-platform/user-service/migrations/004_add_password_reset_fields.up.sql\

v ~/code/notify-platform/user-service/migrations/003_create_notifications_table.up.sql\

v ~/code/notify-platform/user-service/migrations/002_add_verification_fields.up.sql\

v ~/code/notify-platform/user-service/migrations/001_create_users_table.up.sql\

v ~/code/notify-platform/user-service/internal/middleware/auth.go\

v ~/code/notify-platform/user-service/internal/handler/auth.go\

v ~/code/notify-platform/user-service/cmd/main.go\

v ~/code/notify-platform/user-service/go.mod\

v ~/code/notify-platform/scripts/test-api.sh\

v ~/code/notify-platform/scripts/down.sh\

v ~/code/notify-platform/scripts/up.sh\

v ~/code/notify-platform/scripts/test-rate-limiting.sh\

tree
v ~/code/notify-platform/notification-service/Dockerfile\

v ~/code/notify-platform/notification-service/cmd/main.go\

v ~/code/notify-platform/notification-service/internal/service/audit_service.go\

v ~/code/notify-platform/notification-service/internal/repository/rate_limit.go\

v ~/code/notify-platform/notification-service/internal/repository/audit_log.go\

v ~/code/notify-platform/notification-service/internal/repository/notification.go\

v ~/code/notify-platform/notification-service/internal/middleware/rate_limiter.go\

v ~/code/notify-platform/notification-service/internal/middleware/auth.go\

v ~/code/notify-platform/notification-service/internal/handler/notification.go\

v ~/code/notify-platform/notification-service/go.mod\

v ~/code/notify-platform/go.mod\

v go.sum
rm go.sum
cd deployments
tree
v ~/code/notify-platform/deployments/prometheus/prometheus.yml\

v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json\

v ~/code/notify-platform/deployments/grafana/dashboards.yml\

v ~/code/notify-platform/deployments/grafana/datasources.yml\

v ~/code/notify-platform/deployments/docker-compose.yml\

v ~/code/notify-platform/.env\

cd code/notify-platform
docker ps
clear
cd scripts
./down.sh
v test-rate-limiting.sh
./up.sh
./test-rate-limiting.sh
v test-rate-limiting.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./test-rate-limiting.sh
v test-rate-limiting.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./test-rate-limiting.sh
clear
./test-api.sh
clear
v test-api.sh
v test-rate-limiting.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./test-api.sh
./test-rate-limiting.sh
./down.sh
clear
cd ..
cd deployments
v docker-compose.yml
cd ..
clear
ls
chmod +x ~/code/notify-platform/scripts/*.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

cd scripts
chmod +x ~/code/notify-platform/scripts/*.sh
./up.sh
clear
docker ps
curl http://localhost:8081/metrics\

curl https://localhost:8081/metrics\

clar
clear
cd ..
docker ps
v ~/code/notify-platform/user-service/Dockerfile
v ~/code/notify-platform/notification-service/Dockerfile
v ~/code/notify-platform/workers/email-worker/Dockerfile
v ~/code/notify-platform/workers/telegram-worker/Dockerfile
v ~/code/notify-platform/workers/whatsapp-worker/Dockerfile
cd scripts
./down.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./up.sh
reboot
sway
sudo systemctl start docker
cd code/notify-platform
clear
cd scripts
chmod +x ~/code/notify-platform/scripts/*.sh
./up.sh
docker-compose -f deployments/docker-compose.yml logs -f no
cd ..
docker-compose -f deployments/docker-compose.yml logs -f notification-service
docker-compose -f deployments/docker-compose.yml logs -f user-service
clear
ls
rm logs
ls
cd 
v deepseek.txt
clear
cd code/notify-platform
ls
cd ..
ls
cp notify-platform backup3
cd notify-platform
ls
cd scripts
chmod +x ~/code/notify-platform/scripts/*.sh
./up.sh
cd ..
docker-compose logs prometheus
docker exec -it user-service curl -v http://localhost:8081/metrics
v deployments/docker-compose.yml
cd scripts
./down.sh
cd ..
v notification-service/cmd
v user-service/cmd/main.go
clear
ls
cd scripts
cd ..
docker-compose -f deployments/docker-compose.yml build --no-cache\

cd scripts
chmod +x ~/code/notify-platform/scripts/*.sh
./up.sh
docker login -u thesankareaa -p a21w9n703
./up.sh
./down.sh
v ../deployments/docker-compose.yml
clear
cd ..
v ~/code/notify-platform/deployments/prometheus/prometheus.yml
./scripts/down.sh\

docker-compose -f deployments/docker-compose.yml build --no-cache\

cd scripts
chmod +x ~/code/notify-platform/scripts/*.sh
./up.sh
# –Éø—Ä–æ–≤–µ—Ä–∏—Ç—É¨ user-service\
docker exec -it notify-platform-user-service-1 wget -qO- http://localhost:8081/health\
\
# –Éø—Ä–æ–≤–µ—Ä–∏—Ç—É¨ notification-service\
docker exec -it notify-platform-notification-service-1 wget -qO- http://localhost:8082/health\
\
# –Éø—Ä–æ–≤–µ—Ä–∏—Ç—É¨ workers\
docker exec -it notify-platform-email-worker-1 wget -qO- http://localhost:8083\
docker exec -it notify-platform-telegram-worker-1 wget -qO- http://localhost:8084\
docker exec -it notify-platform-whatsapp-worker-1 wget -qO- http://localhost:8085
docker exec -it deployments-user-service-1 wget -qO- http://localhost:8081/health\

docker exec -it deployments-notification-service-1 wget -qO- http://localhost:8082/health\

docker exec -it deployments-email-worker-1 wget -qO- http://localhost:8083\

docker exec -it deployments-telegram-worker-1 wget -qO- http://localhost:8084\

docker exec -it deployments-whatsapp-worker-1 wget -qO- http://localhost:8085\

docker network inspect notify-platform_notify-net | grep "Name"\

docker network inspect deployments_notify-net | grep "Name"\

cd ..
docker-compose logs prometheus
clear
docker logs notify-platform-prometheus-1 | grep target
docker logs deployments-prometheus-1 | grep target
clear
docker exec -it deployments-prometheus-1 ping user-service\

docker exec -it deployments-prometheus-1 nc -zv user-service 8081\

docker logs deployments-user-service-1 | grep metrics\

docker logs notify-platform-prometheus-1 | grep target
docker logs deployments-prometheus-1 | grep target
cd scripts
ls
./down.sh
clear
cd ..
clear
chmod +x ~/code/notify-platform/scripts/*.sh
clear
cd
v deepseek.txt
cd code/notify-platform
docker ps
v ~/code/notify-platform/deployments/grafana/datasources.yml
v ~/code/notify-platform/deployments/docker-compose.yml
v ~/code/notify-platform/deployments/prometheus/prometheus.yml
v .config/nvim/lua/plugins/colorscheme.lua
v ~/code/notify-platform/user-service/cmd/main.go
v ~/code/notify-platform/deployments/grafana/datasources.yml
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/user-service/cmd/main.go
v ~/code/notify-platform/notification-service/cmd/main.go
clear
cd scripts
./up.sh
cd ..
v ~/code/notify-platform/deployments/grafana/datasources.yml
v deepseek.txt
v ~/code/notify-platform/deployments/docker-compose.yml
v ~/code/notify-platform/deployments/prometheus/prometheus.yml
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/user-service/cmd/main.go
docker ps
cd scripts
./down.sh
clear
shutdown
sway
sudo systemctl start docker
cd code/notify-platform
chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
docker-compose -f deployments/docker-compose.yml logs telegram-worker\

docker-compose -f deployments/docker-compose.yml logs whatsapp-worker\

docker-compose -f deployments/docker-compose.yml exec telegram-worker netstat -tuln | grep 8084\

docker-compose -f deployments/docker-compose.yml ps\

docker-compose -f deployments/docker-compose.yml logs -f telegram-worker whatsapp-worker\

curl http://localhost:8084/metrics  # Telegram\

v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go
v ~/code/notify-platform/workers/telegram-worker/cmd/main.go
clear
cd scripts
./down.sh
cd ..
docker-compose -f deployments/docker-compose.yml build -d --no-cache \

docker-compose -f deployments/docker-compose.yml build --no-cache \

cd scripts
./up.sh
cd ..
ls
cp notify-platform backup4-prometheus-zeleniy
cd notify-platform
v ~/code/notify-platform/workers/telegram-worker/cmd/main.go
v deepseek.txt
docker ps
firefox
ls
docker ps
cd scripts
v test-api.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./test-api.sh
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
cd ..
curl -s http://localhost:8082/metrics | grep -E 'notification_status_total|notification_processing_seconds'
curl -s http://localhost:15692/metrics | grep 'rabbitmq_queue_messages'
v ~/code/notify-platform/deployments/prometheus/prometheus.yml
v ~/code/notify-platform/workers/email-worker/cmd/main.go
cd scripts
ls
cd ..
docker-compose -f deployments/docker-compose.yml down
chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
v test-api.sh
cd scripts
v test-api.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./test-api.sh
clear
cd ..
curl -s http://localhost:8082/metrics | grep -E 'notification_status_total|notification_processing_seconds'
curl -s http://localhost:15692/metrics | grep 'rabbitmq_queue_messages'
curl -X POST -H "Content-Type: application/json" -d '{\
  "name": "AdminKey",\
  "role": "Admin"\
}' http://admin:admin@localhost:3000/api/auth/keys\

sudo pacman -S prometheus-cli
paru -S prometheus-cli
paru -S prometheus
sudo pacman -S prometheus
prometheus query 'sum(rate(notification_status_total[5m])) by (status, channel)'
cd scripts
./down.sh
v ~/code/notify-platform/notification-service/cmd/main.go
cd ..
chmod +x ~/code/notify-platform/scripts/*.sh
v ~/code/notify-platform/workers/email-worker/cmd/main.go
v ~/code/notify-platform/notification-service/cmd/main.go
reboot
sway
sudo systemctl start docker
firefox
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
v ~/code/notify-platform/workers/email-worker/cmd/main.go
v ~/code/notify-platform/workers/telegram-worker/cmd/main.go
v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go
clear
v ~/code/notify-platform/deployments/prometheus/prometheus.yml
cd code/notify-platform
clear
docker-compose -f deployments/docker-compose.yml build
v ~/code/notify-platform/notification-service/internal/handler/notification.go
clear
v deepseek.txt
clear
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
cd code/notify-platform
v ~/code/notify-platform/notification-service/internal/handler/notification.go
v ~/code/notify-platform/notification-service/cmd/main.go
docker-compose -f deployments/docker-compose.yml build
cd scripts
v test-api.sh
firefox
chmod +x ~/code/notify-platform/scripts/*.sh
./up.sh
./test-api.sh
docker-compose -f deployments/docker-compose.yml logs -f no\

cd ..
docker-compose -f deployments/docker-compose.yml logs -f notification-service user-service \

docker-compose -f deployments/docker-compose.yml logs -f workers/email-worker\

docker-compose -f deployments/docker-compose.yml logs\

v ~/code/notify-platform/notification-service/internal/handler/notification.go
v deepseek.txt
g
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/deployments/prometheus/prometheus.yml\

v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go
v ~/code/notify-platform/workers/telegram-worker/cmd/main.go
v ~/code/notify-platform/workers/email-worker/cmd/main.go
cd code
ls
mv notify-platform gavno
ls
mv backup4-prometheus-zeleniy notify-platform
ls
cd notify-platform/
tree
v deepseek.txt
v ~/code/notify-platform/.env\

v ~/code/notify-platform/go.mod\

ls
rm logs
ls
cd deployments
ls
tree
v ~/code/notify-platform/deployments/docker-compose.yml\

v ~/code/notify-platform/deployments/grafana/datasources.yml\

v ~/code/notify-platform/deployments/grafana/dashboards.yml\

v ~/code/notify-platform/deployments/grafana/datasources.yml\

v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json\

v ~/code/notify-platform/deployments/prometheus/prometheus.yml\

cd ..
cd scripts
ls
v ~/code/notify-platform/scripts/test-rate-limiting.sh\

v ~/code/notify-platform/scripts/up.sh\

v ~/code/notify-platform/scripts/down.sh\

v ~/code/notify-platform/scripts/test-api.sh\

cd ../workers/whatsapp-worker
ls
tree
v ~/code/notify-platform/workers/whatsapp-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/Dockerfile\

v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go\

cd ../telegram-worker
ls
tree
v ~/code/notify-platform/workers/telegram-worker/go.mod\

v ~/code/notify-platform/workers/telegram-worker/Dockerfile\

v ~/code/notify-platform/workers/telegram-worker/cmd/main.go\

cd ../email-worker
ls
v ~/code/notify-platform/workers/email-worker/go.mod\

v ~/code/notify-platform/workers/email-worker/Dockerfile\

v ~/code/notify-platform/workers/email-worker/cmd/main.go\

cd ..
cd scripts
./down.sh
clear
cd ..
cd notification-service
ls
tree
v ~/code/notify-platform/notification-service/Dockerfile\

v ~/code/notify-platform/notification-service/cmd/main.go\

v ~/code/notify-platform/notification-service/internal/service/audit_service.go\

v ~/code/notify-platform/notification-service/internal/repository/rate_limit.go\

v ~/code/notify-platform/notification-service/internal/repository/audit_log.go\

v ~/code/notify-platform/notification-service/internal/repository/notification.go\

v ~/code/notify-platform/notification-service/internal/middleware/rate_limiter.go\

v ~/code/notify-platform/notification-service/internal/middleware/auth.go\

v ~/code/notify-platform/notification-service/internal/handler/notification.go\

v ~/code/notify-platform/notification-service/go.mod\

cd ../user-service
ls
tree
v ~/code/notify-platform/user-service/Dockerfile\

v ~/code/notify-platform/user-service/pkg/common/limiter.go\

v ~/code/notify-platform/user-service/pkg/common/email.go\

v ~/code/notify-platform/user-service/pkg/common/password.go\

v ~/code/notify-platform/user-service/migrations/004_add_password_reset_fields.up.sql\

v ~/code/notify-platform/user-service/migrations/003_create_notifications_table.up.sql\

v ~/code/notify-platform/user-service/migrations/002_add_verification_fields.up.sql\

v ~/code/notify-platform/user-service/migrations/001_create_users_table.up.sql\

v ~/code/notify-platform/user-service/internal/middleware/auth.go\

v ~/code/notify-platform/user-service/internal/handler/auth.go\

v ~/code/notify-platform/user-service/cmd/main.go\

v ~/code/notify-platform/user-service/go.mod\

cd code/notify-platform
ls
cd 
v deepseek.txt
clear
cd code/notify-platform
chmod +x ~/code/notify-platform/scripts/*.sh
clear
reboot
sway
cd code/notify-platform
sudo systemctl start docker
firefox
v scripts/test-api.sh
chmod +x ~/code/notify-platform/scripts/*.sh
cleear
clear
docker-compose -f deployments/docker-compose.yml build --no-cache \

chmod +x ~/code/notify-platform/scripts/*.sh
clear
./scripts/up.sh
./scripts/test-api.sh
clear
mkdir -p ~/code/notify-platform/frontend/
cd frontend
v index.html
v auth.html
v dashboard.html
v styles.css
v auth.js
v dashboard.js
cd ..
cd frontend
python3 -m http.server 8000\

cd ..
ls
cd frontend
ls
v index.html
v auth.html
v dashboard.html
v styles.css
v auth.js
v dashboard.js
python3 -m http.server 8000\

clear
python3 -m http.server 8000\

cd code/notify-platform
chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
v ~/code/notify-platform/user-service/cmd/main.go
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/user-service/cmd/main.go
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/frontend/Dockerfile
v ~/code/notify-platform/deployments/docker-compose.yml
v ~/code/notify-platform/scripts/up.sh
clear
cd frontend
v auth.js
v ~/code/notify-platform/deployments/docker-compose.yml
v ~/code/notify-platform/user-service/cmd/main.go
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/frontend/Dockerfile
v ~/code/notify-platform/scripts/up.sh
v ~/code/notify-platform/frontend/auth.js
v ~/code/notify-platform/frontend/dashboard.js
v ~/code/notify-platform/frontend/dashboard.js\

clear
cd ..
./scripts/down.sh\

docker-compose -f deployments/docker-compose.yml build --no-cache\

chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh\

v scripts/down.sh
reboot
sway
sudo systemctl start docker
cd code/notify-platform
chmod +x ~/code/notify-platform/scripts/*.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

./scripts/up.sh\

firefox
v scripts/test-api.sh
./scripts/down.sh
v ~/code/notify-platform/notification-service/internal/repository/audit_log.go
v ~/code/notify-platform/notification-service/internal/repository/notification.go
v ~/code/notify-platform/notification-service/internal/handler/notification.go
v ~/code/notify-platform/frontend/dashboard.js
clear
ls
rm logs
ls
v scripts/up.sh
chmod +x ~/code/notify-platform/scripts/*.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

./scripts/up.sh
v scripts/up.sh
v scripts/down.sh
sudo lsof -i :80
v ~/code/notify-platform/deployments/docker-compose.yml
v scripts/up.sh
clear
reboot
sway
sudo systemctl start docker
cd code/notify-platform
docker-compose -f deployments/docker-compose.yml build --no-cache\

chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
v ~/code/notify-platform/frontend/dashboard.js
clar
clear
./scripts/down.sh
reboot
sway
cd code/notify-platform
sudo systemctl start docker
clear
ls
chmod +x ~/code/notify-platform/scripts/*.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

./scripts/up.sh
v ~/code/notify-platform/frontend/dashboard.html
v ~/code/notify-platform/frontend/dashboard.js
reboot
sway
sudo systemctl start docker
cd code/notify-platform
docker-compose -f deployments/docker-compose.yml build --no-cache\

chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
v deepseek.txt
./scripts/down.sh
clear
tree
v ~/code/notify-platform/workers/whatsapp-worker/go.mod\

v ~/code/notify-platform/workers/whatsapp-worker/Dockerfile\

v ~/code/notify-platform/workers/whatsapp-worker/cmd/main.go\

v ~/code/notify-platform/workers/telegram-worker/go.mod\

v ~/code/notify-platform/workers/telegram-worker/Dockerfile\

v ~/code/notify-platform/workers/telegram-worker/cmd/main.go\

v ~/code/notify-platform/workers/email-worker/go.mod\

v ~/code/notify-platform/workers/email-worker/Dockerfile\

v ~/code/notify-platform/workers/email-worker/cmd/main.go\

tree
v ~/code/notify-platform/user-service/go.mod\

v ~/code/notify-platform/user-service/Dockerfile\

v ~/code/notify-platform/user-service/pkg/common/password.go\

v ~/code/notify-platform/user-service/pkg/common/limiter.go\

v ~/code/notify-platform/user-service/pkg/common/email.go\

v ~/code/notify-platform/user-service/migrations/004_add_password_reset_fields.up.sql\

v ~/code/notify-platform/user-service/migrations/003_create_notifications_table.up.sql\

v ~/code/notify-platform/user-service/migrations/002_add_verification_fields.up.sql\

v ~/code/notify-platform/user-service/migrations/001_create_users_table.up.sql\

v ~/code/notify-platform/user-service/internal/middleware/auth.go\

v ~/code/notify-platform/user-service/internal/handler/auth.go\

v ~/code/notify-platform/user-service/cmd/main.go\

v deepseek.txt
tree
v ~/code/notify-platform/scripts/up.sh\

v ~/code/notify-platform/scripts/test-rate-limiting.sh\

v ~/code/notify-platform/scripts/test-api.sh\

v ~/code/notify-platform/scripts/down.sh\

tree
v ~/code/notify-platform/notification-service/go.mod\

v ~/code/notify-platform/notification-service/Dockerfile\

v ~/code/notify-platform/notification-service/internal/service/audit_service.go\

v ~/code/notify-platform/notification-service/internal/repository/rate_limit.go\

v ~/code/notify-platform/notification-service/internal/repository/notification.go\

v ~/code/notify-platform/notification-service/internal/repository/audit_log.go\

v ~/code/notify-platform/notification-service/internal/middleware/rate_limiter.go\

v ~/code/notify-platform/notification-service/internal/middleware/auth.go\

v ~/code/notify-platform/notification-service/internal/handler/notification.go\

v ~/code/notify-platform/notification-service/cmd/main.go\

tree
v ~/code/notify-platform/go.mod\

v ~/code/notify-platform/.env\

v ~/code/notify-platform/deployments/docker-compose.yml\

v ~/code/notify-platform/deployments/prometheus/prometheus.yml\

v ~/code/notify-platform/deployments/grafana/datasources.yml\

v ~/code/notify-platform/deployments/grafana/dashboards.yml\

v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json\

cd frontend
ls
tree
v ~/code/notify-platform/frontend/styles.css\

v ~/code/notify-platform/frontend/index.html\

v ~/code/notify-platform/frontend/dashboard.js\

v ~/code/notify-platform/frontend/dashboard.html\

v ~/code/notify-platform/frontend/auth.js\

v ~/code/notify-platform/frontend/auth.html\

v ~/code/notify-platform/frontend/Dockerfile\

ls
cd ..
sl
cd ..
ls
cp notify-platform notify-platformdeepseek
cd notify-platform
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
v ~/code/notify-platform/deployments/grafana/alerting.yml
v ~/code/notify-platform/notification-service/cmd/main.go
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
cd deployments/grafana
ls
rm alerting.yml
cd ..
v ~/code/notify-platform/deployments/grafana/provisioning/alerting/alert-rules.yml
mkdir ~/code/notify-platform/deployments/grafana/provisioning/alerting/
v ~/code/notify-platform/deployments/grafana/provisioning/alerting/alert-rules.yml
./scripts/down.sh
clear
reboot
sway
sudo systemctl start docker
cd code/notify-platform
prometheus --config.file=~/code/notify-platform/deployments/prometheus/prometheus.yml\

clear
cd ~/code/notify-platform\

docker-compose -f deployments/docker-compose.yml build --no-cache\

chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
curl http://localhost:9090/api/v1/query?query=rabbitmq_queue_size\

xdg-open http://localhost:3000\

prometheus --config.file=~/code/notify-platform/deployments/prometheus/prometheus.yml\

curl http://localhost:9090/api/v1/query?query=rabbitmq_queue_size\

# –Éø—Ä–æ–≤–µ—Ä–∏—Ç—É¨ —Ä–∞–∑–º–µ—Ä –æ—Éß–µ—Ä–µ–¥–µ–π\
curl -s http://localhost:9090/api/v1/query?query=rabbitmq_queue_size | jq
prometheus --config.file=~/code/notify-platform/deployments/prometheus/prometheus.yml\

v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
clear
v ~/code/notify-platform/deployments/grafana/provisioning/alerting/alert-rules.yml
curl -s "http://localhost:9090/api/v1/query?query=rabbitmq_queue_size" | jq\

curl -s "http://localhost:9090/api/v1/query?query=up" | jq\

xdg-open http://localhost:3000\

for i in {1..1500}; do\
  curl -s -X POST -H "Content-Type: application/json" \\
  -d '{"channel":"email","recipient":"test'$i'@example.com","subject":"Test","body":"Load test"}' \\
  http://localhost:8081/notify > /dev/null\
  echo -n "."\
  if (( $i % 100 == 0 )); then\
    echo\
  fi\
done\
echo "Load test completed"
mkdir -p ~/code/notify-platform/deployments/grafana/provisioning/alerting\

cat > ~/code/notify-platform/deployments/grafana/provisioning/alerting/alerting.yml << 'EOF'\
apiVersion: 1\
\
datasources:\
  - name: Prometheus\
    type: prometheus\
    access: proxy\
    url: http://prometheus:9090\
    isDefault: true\
\
alerting:\
  enabled: true\
\
rules:\
  - organization_id: 1\
    name: notification-alerts\
    folder: Notify Platform\
    interval: 1m\
    rules:\
      - grafana_alert:\
          title: High Failure Rate\
          condition: C\
          data:\
            - refId: A\
              datasourceUid: 'prometheus'\
              model:\
                expr: sum(rate(notification_status_total{status="failed"}[5m]))\
                refId: A\
            - refId: B\
              datasourceUid: 'prometheus'\
              model:\
                expr: sum(rate(notification_status_total[5m]))\
                refId: B\
            - refId: C\
              datasourceUid: '__expr__'\
              model:\
                type: math\
                expr: $A / $B > 0.05\
                refId: C\
          no_data_state: Alerting\
          exec_err_state: Alerting\
          for: 5m\
          annotations:\
            summary: 'High notification failure rate ({{ $value }})'\
            description: 'More than 5% of notifications are failing'\
          labels:\
            severity: critical\
\
      - grafana_alert:\
          title: RabbitMQ Queue Full\
          condition: A\
          data:\
            - refId: A\
              datasourceUid: 'prometheus'\
              model:\
                expr: rabbitmq_queue_size > 1000\
                refId: A\
          no_data_state: Alerting\
          exec_err_state: Alerting\
          for: 10m\
          annotations:\
            summary: 'RabbitMQ queue is filling up ({{ $value }} messages)'\
            description: 'Message queue has more than 1000 pending messages'\
          labels:\
            severity: warning\
\
      - grafana_alert:\
          title: Service Down\
          condition: A\
          data:\
            - refId: A\
              datasourceUid: 'prometheus'\
              model:\
                expr: up == 0\
                refId: A\
          no_data_state: Alerting\
          exec_err_state: Alerting\
          for: 1m\
          annotations:\
            summary: 'Service {{ $labels.job }} is down'\
            description: 'Service {{ $labels.job }} has been down for more than 1 minute'\
          labels:\
            severity: critical\
EOF
clear
v ~/code/notify-platform/deployments/docker-compose.yml
reboot
sway
sudo systemctl start docker
cd code/notify-platform
docker-compose -f deployments/docker-compose.yml build --no-cache\

./scripts/up.sh\

v ~/code/notify-platform/deployments/docker-compose.yml
cd scripts/
./down.sh
cd ..
docker-compose -f deployments/docker-compose.yml build --no-cache\

chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh\

curl -u admin:admin http://localhost:3000/api/v1/provisioning/alert-rules | jq\

v ~/code/notify-platform/deployments/grafana/provisioning/alerting/alerting.yml
docker-compose -f deployments/docker-compose.yml ps\

docker-compose -f deployments/docker-compose.yml logs grafana\

cat > ~/code/notify-platform/deployments/grafana/provisioning/alerting/alert-rules.yml << 'EOF'\
apiVersion: 1\
\
groups:\
  - name: notification-alerts\
    rules:\
      - alert: HighFailureRate\
        expr: sum(rate(notification_status_total{status="failed"}[5m])) / sum(rate(notification_status_total[5m])) > 0.05\
        for: 5m\
        labels:\
          severity: critical\
        annotations:\
          summary: "High notification failure rate ({{ $value }})"\
          description: "More than 5% of notifications are failing"\
\
      - alert: RabbitMQQueueFull\
        expr: rabbitmq_queue_size > 1000\
        for: 10m\
        labels:\
          severity: warning\
        annotations:\
          summary: "RabbitMQ queue is filling up ({{ $value }} messages)"\
          description: "Message queue has more than 1000 pending messages"\
\
      - alert: ServiceDown\
        expr: up == 0\
        for: 1m\
        labels:\
          severity: critical\
        annotations:\
          summary: "Service {{ $labels.job }} is down"\
          description: "Service {{ $labels.job }} has been down for more than 1 minute"\
EOF
docker-compose -f deployments/docker-compose.yml restart grafana\

docker-compose -f deployments/docker-compose.yml logs -f grafana\

docker exec -it $(docker-compose -f deployments/docker-compose.yml ps -q grafana) \\
  grafana provisioning validate-alerting /etc/grafana/provisioning/alerting/alert-rules.yml
clear
v ~/code/notify-platform/deployments/grafana/provisioning/alerting/alerting.yml
v ~/code/notify-platform/deployments/grafana/provisioning/alerting/alert-rules.yml
clear
ls
docker-compose -f deployments/docker-compose.yml up -d --force-recreate grafana\

docker ps
clear
ls
curl -s http://localhost:9090/api/v1/targets | jq\

docker exec -it $(docker-compose -f deployments/docker-compose.yml ps -q grafana) \\
  curl -u admin:admin http://localhost:3000/api/datasources | jq
cat ~/code/notify-platform/deployments/grafana/provisioning/alerting/alert-rules.yml\

v ~/code/notify-platform/deployments/docker-compose.yml
mkdir -p ~/code/notify-platform/deployments/grafana/provisioning/alerting\

cat > ~/code/notify-platform/deployments/grafana/provisioning/alerting/alert-rules.yml << 'EOF'\
apiVersion: 1\
\
groups:\
  - name: notification-alerts\
    interval: 1m\
    rules:\
      - alert: HighFailureRate\
        expr: sum(rate(notification_status_total{status="failed"}[5m])) / sum(rate(notification_status_total[5m])) > 0.05\
        for: 5m\
        labels:\
          severity: critical\
        annotations:\
          summary: High notification failure rate ({{ $value }})\
          description: More than 5% of notifications are failing\
\
      - alert: RabbitMQQueueFull\
        expr: rabbitmq_queue_size > 1000\
        for: 10m\
        labels:\
          severity: warning\
        annotations:\
          summary: RabbitMQ queue is filling up ({{ $value }} messages)\
          description: Message queue has more than 1000 pending messages\
\
      - alert: ServiceDown\
        expr: up == 0\
        for: 1m\
        labels:\
          severity: critical\
        annotations:\
          summary: Service {{ $labels.job }} is down\
          description: Service {{ $labels.job }} has been down for more than 1 minute\
EOF
cd ~/code/notify-platform\

docker-compose -f deployments/docker-compose.yml down -v\

docker-compose -f deployments/docker-compose.yml build --no-cache\

chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh\

docker-compose -f deployments/docker-compose.yml logs -f grafana\

v deployments/docker-compose.yml
./scripts/down.sh
./scripts/up.sh\

cd ..
ls
mv notify-platform latest
mv notify-platformdeepseek notify-platform
cd notify-platform
cd code/notify-platform
./scripts/down.sh
clear
ls
cd 
cd Downloads
ls
cd ..
ls
mkdir diploma
ks
ls
mv deepseek.txt Downloads/Pamyatka_po_oformleniyu_VKR.docx Downloads/Metodicheskie_rekomendatsii_po_VKR_bakalavrov_2019.docx Downloads/–É≤–É∫–ÉÄ\ –É∏–≥–Ω–∞—Ç—É¨–µ–≤\ –É∫–∏—Ä–∏–ª–ª\ 09-012.docx diploma
ls
cd Downloads
ls
unzip Diplomniki2025.zip
ls
paru ttf-times-new-roman
v diploma/deepseek.txt
cd diploma
ls
cp deepseek.txt aaa.txt
v deepseek.txt
docker ps
clar
clear
firefox
sudo systemctl stop docker
reboot
sway
v ~/code/notify-platform/notification-service/cmd/main.go  
v ~/code/notify-platform/user-service/auth.go
cd diploma
v deepseek.txt
v ~/code/notify-platform/user-service/internal/handler/auth.go  
firefox
clear
sudo pacman -S flameshot
clear
ls
cd .config/nvim
cd ..
cd sway
v config
sudo pacman -S grim slurp
paru -S grim slurp
cd
paru -S grim slurp
sudo pacman -S grim slurp
paru -S grim slurp
sudo pacman -S grim slurp
cd .config/sway
v config
v main.go
cd code/notify-platform
v deployments/prometheus/prometheus.yml.
v deployments/prometheus/prometheus.yml
cd deployments/grafana
;s
v datasources.yml
v dashboards.yml
cd code/notify-platform
./scripts/up.sh
sudo systemctl start docker
./scripts/up.sh
docker exec -it mysql bash
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify -e "SHOW TABLES;"
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify -e "SELECT * FROM users WHERE email = 're.kitaev@gmail.com';"
docker-compose -f deployments/docker-compose.yml exec mysql \\
  mysql -u app -papp_password notify -e "DELETE FROM users WHERE email = 're.kitaev@gmail.com';"
clear
ls
reboot
sway
cd code/notify-platform
docker-compose -f deployments/docker-compose.yml build --no-cache\

sudo systemctl start docker
docker-compose -f deployments/docker-compose.yml build --no-cache\

firefox
cd scripts/
chmod +x ~/code/notify-platform/scripts/*.sh
./up.sh
cd ..
clear
./scripts/down.sh
chmod +x ~/code/notify-platform/scripts/*.sh
v scripts/up.sh
./scripts/up.sh
docker-compose -f deployments/docker-compose.yml logs telegram-worker\

docker-compose -f deployments/docker-compose.yml logs notification-service\

docker-compose -f deployments/docker-compose.yml logs user-service\

./scripts/down.sh
docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql\
docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/002_add_verification_fields.up.sql\
docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/003_create_notifications_table.up.sql
./scripts/up.sh
docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/001_create_users_table.up.sql\
docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/002_add_verification_fields.up.sql\
docker exec -i deployments-mysql-1 mysql -uapp -papp_password notify < user-service/migrations/003_create_notifications_table.up.sql
clear
./scripts/down.sh
chmod +x ~/code/notify-platform/scripts/*.sh
cd code/notify-platform
docker-compose -f deployments/docker-compose.yml build --no-cache\

./scripts/up.sh
v scripts/test-
v scripts/test-api.sh
clear
ls
docker ps
clear
v scripts/test-api.sh
sudo pacman -Syyu
shutdown
sway
sudo pacman -Syyu
clear
nmtui
clear
ping google.com
clear
sudo pacman -Syu
firefox
clear
firefox
sudo reflector --latest 200 --protocol http --protocol https --sort rate --save /etc/pacman.d/mirrorlist
reboot
sway
sudo pacman -Syyu
paru
firefox
paru -S scenefx
clear
paru
reboot
sway
ll
cd Downloads
ls
cd –É¥–∏–ø–ª–æ–º–Ω–∏–∫–∏2025
ls
cd .config/sway
v config
v .config/zsh/aliases.zsh
source .zprofile
cd config
ls
config
v sway/config
ll
cd diploma
ls
cp deepseek.txt ~/vroderabotal.txt
cd
ll
sudo systemctl start docker
clear
cd code/notify-platform
chmod +x ~/code/notify-platform/scripts/*.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

./scripts/up.sh
cd deployments/grafana/dashboards
ls
cd ..
ll
v dashboards.yml
..
v docker-compose.yml
cd -
v dashboards/notifications.json
cd
cd code/notify-platform
clear
v ~/code/notify-platform/deployments/grafana/dashboards/notifications.json
./scripts/down.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

./scripts/up.sh
v scripts/test-api.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/test-api.sh
v scripts/test-api.sh
curl http://localhost:8082/metrics | grep http_requests_total
v scripts/test-rate-limiting.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/test-rate-limiting.sh
./scripts/down.sh
v ~/code/notify-platform/scripts/load.sh
chmod +x ~/code/notify-platform/scripts/*.sh
docker ps
docker-compose -f deployments/docker-compose.yml build --no-cache\

./scripts/up.sh
./scripts/load.sh
ls
cd 
v vroderabotal.txt
—Å–¥—É£—É§–∫
clear
ls
cd code/notify-platform
./scripts/down.sh
v ~/code/notify-platform/notification-service/internal/middleware/auth.go
v main.go
./scripts/up.sh
v scripts/test-api.sh
clear
v scripts/down.sh
./scripts/down.sh
clear
./scripts/up.sh
cd frontend
v ~/code/notify-platform/frontend/reset.html
v ~/code/notify-platform/frontend/reset.js
v ~/code/notify-platform/frontend/dashboard.js
cd ..
./scripts/down.sh
chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
./scripts/down.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

./scripts/up.sh
tree
./scripts/down.sh
v ~/code/notify-platform/frontend/dashboard.js
v frontend/auth.js
v frontend/auth.html
v frontend/auth.js
./scripts/down.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

./scripts/up.sh
v vroderabotal.txt
v frontend/auth.js
v frontend/auth.html
./scripts/down.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

./scripts/up.sh
docker-compose -f deployments/docker-compose.yml logs user-service\

./scripts/down.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

./scripts/up.sh
v frontend/auth.js
./scripts/down.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

./scripts/up.sh
./scripts/down.sh
nmtui
clear
ping google.com
clear
cd code/notify-platform
./scripts/up.sh
v scripts/test-api.sh
reboot
sway
reboot
sway
config
v nvim/lua/plugins
v nvim/lua/plugins/speedtyper.lua
\:wq
v nvim/lua/plugins/speedtyper.lua
rm nvim/lua/plugins/speedtyper.lua
l
ll
cd Downloads
ls
mkdir Bairasheva
rm otzyv_rukovoditelya.docx
ll
mv –Éæ—Ç–∑—É´–≤\ —Ä—É£–∫–æ–≤–æ–¥–∏—Ç–µ–ª—ÉØ.docx Bairasheva
ls
cd Bairasheva
ls
cd ..
ll
rm retsenzia.docx
ll
mv –ÉÄ–µ—É¶–µ–Ω–∑–∏—ÉØ.docx Bairasheva
ls
ls Bairasheva
clar
clear
echo {\
  "status": "queued",\
  "message": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏–Ω—ÉØ—Ç–æ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É£"\
}\

clear
ls
cd
v text
cat text
—Å–¥—É£—É§–∫
clear
ls
cd code/notify-platform
ls
clear
ls
git init
git branch -M master
git add .
git commit -m "Messy"
git remote add origin git@github.com:skillissu3e/Multi-Channel-Notification-Management-Platform.git
git push -u origin master
cleaer
cd code/notify-platform
v .env
clear
cd Downloads
ls
mv –É¥–∏–ø–ª–æ–º.docx Bairasheva
ls
ls Bairasheva
ll
cd Bairasheva
ll
reboot
sway
cd .config/swa
cd .config/sway
v config
cd ..
ll
v i3status-rs/config.toml
alsa
cd .config
v i3status-rs/config.toml
clar
clear
amixer
cd ..
sudo pacman -Syyu
paru
clear
sudo pacman -Syyu
paru
cd .config/nvim
ls
cd lua
ls
dc p
cd plugins
ls
btop
shutdown
sway
ls
cd code
ls
cd backup
ls
cd notification-service
ls
v go.mod
ll
rm text.help
cd Downloads
ls
cd Downloads
v l\ \(1\)
v l
ls
clear
ls
clear
cd .config
ls
cd nvim
ls
cd .config
ls
cp nvim nvim1221
ls
cd nvim1221
ls
v init.lua
clear
ls
v stylua.toml
clear
ls
v init.lua
v stylua.toml
clear
ls
rm lazy-lock.json
ls
cd after
ls
cd ftplugin
ls
v go.lua
v lua.lua
v go.lua
cd ..
ls
cd lua
ls
cd plugins
ls
cd ..
ls
rm nvim1221
ls
cp nvim nvim1221
ls
cd nvim
ls
rm lazy-lock.json
ls
v init.lua
ls
ls lua/plugins/
clear
ls
v init.lua
cd .config
ls
rm nvim1221
cp nvim nvim1221
cd nvim
ls
rm lazy-lock.json
v stylua.toml
ls
v after/ftplugin/lua.lua
ls
v after/ftplugin/go.lua
ls
clear
ls
v plugin/options.lua
ls
v after/ftplugin/go.lua
v after/ftplugin/lua.lua
ls
cd lua
ls
cd plugins
ls
v trouble.lua
ls
cd .config
nvim
cd nvim/lua/plugins
ls
cd ..
v after/ftplugin
v trouble.lua
v blink.lua
v trouble.lua
cd code/notify-platform
ls
v notification-service/cmd/main.go
v user-service/cmd/main.go
v user-service/internal/handler/auth.go
v user-service/internal/middleware
v notification-service/internal/handler/notification.go
v notification-service/internal/middleware/auth.go
v notification-service/internal/middleware/rate_limiter.go
v notification-service/internal/repository/rate_limit.go
v notification-service/internal/repository/audit_log.go
v notification-service/internal/repository/notification.go
rm trouble.lua
v tiny-inline-diagnostic.lua
v mini-comment.lua
v blink.lua
ll
v tiny-inline-diagnostic.lua
v trouble.lua
rm tiny-inline-diagnostic.lua
ls
v trouble.lua
v blink.lua
v trouble.lua
v blink.lua
v trouble.lua
cd ..
ls
cd ..
ls
cd plugin
ls
v options.lua
v autocmds.lua
v keymaps.lua
v options.lua
v ../lua/plugins/trouble.lua
ls
v ../lua/plugins/blink.lua
v ../lua/plugins/trouble.lua
v options.lua
clear
ls
cd Downloads
v l
shutdown
sway
v .config/sway/config
sudo pacman -S nautilus
shutdown
sway
nmtui
[Bclear
clear
nmtui
ping google.com
sudo pacman -Syyu
paeu
paru
cd .config
ls
cd nvim/lua/plugins
ls
v trouble.lua
v colorscheme.lua
clea
v lsp-config.lua
clear
ls
v lsp-config.lua
clear
ls
ll
clear
ll
v formatter.lua
ls
clear
ll
v mini-hipatterns.lua
v mini-surround.lua
v formatter.lua
cd nvim/lua/plugins
cd .config
cd nvim/lua/plugins
ls
rm ;
ls
ll
rm \;
ls
clear
ls
cd ..
ls
cd ..
ls
v stylua.toml
v mini-surround.lua
v mini-hipatterns.lua
v mini-surround.lua
v mini-hipatterns.lua
v mini-surround.lua
v mini-hipatterns.lua
clea
clear
ls
v mini-pairs.lua
clear
ls
v mini-comment.lua
v mini-pairs.lua
v mini-hipatterns.lua
v mini-surround.lua
v mini-comment.lua
v mini-pairs.lua
v mini-ai.lua
ls
v mini-ai.lua
ls
ll
clear
ll
v mini-files.lua
ls
v mini-files.lua
ls
rm mini-files.lua
ls
clear
ls
ll
clear
l
clear
ll
v linter.lua
ls
v linter.lua
clear
ll
v colorscheme.lua
clear
ll
clear
ll
v typst-preview.lua
cd .config
cd nvim/lua/plugins
ls
v lsp-config.lua
v mini-surround.lua
v lsp-config.lua
v typst-preview.lua
v mini-ai.lua
v mini-pairs.lua
v mini-comment.lua
v mini-hipatterns.lua
cd code/notify-platform
v frontend/styles.css
v mini-hipatterns.lua
v mini-surround.lua
v typst-preview.lua
ls
v typst-preview.lua
ls
ll
ls
clear
ls
clear
ls
v scrolleof.lua
rm scrolleof.lua
v scrolleof.lua
v blink.lua
v scrolleof.lua
v blink.lua
ls
clear
v mini-pairs.lua
v scrolleof.lua
ll
rm hop.lua
ls
v formatter.lua
ls
v formatter.lua
clear
ls
v linter.lua
ls
v blink.lua
clear
ll
v mini-pairs.lua
v colorscheme.lua
v blink.lua
v colorscheme.lua
v blink.lua
v colorscheme.lua
v blink.lua
v preview.lua
cd .config
cd nvim/lua/plugins
v typst-preview.lua
ls
rm typst-preview.lua
v preview.lua
v haha.typst
v preview.lua
v haha.typst
v preview.lua
v haha.typst
v preview.lua
v haha.md
sudo pacman -S deno
v haha.md
cd .config
ls
cd nvim/lua/plugins
v haha.md
ls
v preview.lua
v haha.md
v preview.lua
clear
ls
clear
ls
v preview.lua
ls
rm haha.md haha.typst 
ls
sudo pacman -Runs deno
clear
ll
v colorscheme.lua
ls
v mini-ai.lua
v mini-pairs.lua
v mini-comment.lua
v mini-hipatterns.lua
v mini-surround.lua
clear
ll
v scrolleof.lua
v mini-ai.lua
v scrolleof.lua
v mini-pairs.lua
v mini-ai.lua
v mini-comment.lua
v mini-hipatterns.lua
v mini-surround.lua
clear
ls
ll
v preview.lua
v trouble.lua
v mini-surround.lua
v formatter.lua
v lsp-config.lua
v snacks.lua
v preview.lua
v snacks.lua
v preview.lua
v snacks.lua
v preview.lua
v haha.typst
ls
rm haha.typst
ls
v preview.lua
v mini-surround.lua
ll
clear
ll
v formatter.lua
v blink.lua
v lualine.lua
fc
v lualine.lua
fc
pwd
v trouble.lua
v formatter.lua
v lsp-config.lua
v formatter.lua
v cursor.lua
v formatter.lua
v cursor.lua
sudo pacman -S kitty
clear
kitty
v blink.lua
sudo pacman -Runs kitty
v blink.lua
v cursor.lua
v blink.lua
v cursor.lua
v blink.lua
v cursor.lua
v blink.lua
v cursor.lua
v blink.lua
sudo pacman -S pre-commit 
sudo pacman -S make
clear
sudo pacman -S make
clear
v blink.lua
v cursor.lua
v blink.lua
v cursor.lua
v blink.lua
v cursor.lua
v blink.lua
v cursor.lua
clear
ls
v cursor.lua
v fidget.lua
cd code/notify-platform
v notification-service/cmd/main.go
rm fidget.lua
ls
v cursor.lua
clear
ls
v cursor.lua
sudo pacman -S kitty
kitty
cd .config/nvim/lua/plugins
ls
v blink.lua
v cursor.lua
v colorscheme.lua
ls
v colorscheme.lua
clear
l
ll
v
ls
rm cursor.lua
ls
v
v transparency.lua
v .config/sway/config
v transparency.lua
ls
clear
ls
v treesitter.lua
v textobjects.lua
ks
rm treesitter.lua textobjects.lua
ls
v 
clear
v zen.lua
v blink.lua
rm zen.lua
ls
clear
ls
v
nvim --profile
v vim-startuptime.lua
vim-startuptime\

v vim-startuptime.lua
rm vim-startuptime.lua
v vim-startuptime.lua
v mini-comment.lua
go install github.com/rhysd/vim-startuptime@latest\

ll
vim-startuptime\

go install github.com/rhysd/vim-startuptime@latest\

vim-startuptime\

clear
vim-startuptime\

claer
nvim --startuptime
cd .config/nvim/lua/plugins
v supermaven.lua
rm supermaven.lua
ls
v undotree.lua
ls
v preview.lua
v undotree.lua
cd .config/nvim/lua/plugins
cd ..
ls
v plugin/options.lua
v plugin/keymaps.lua
v plugin/autocmds.lua
v undotree.lua
ls
rm undotree.lua
ls
cd .config/nvim/lua/plugins
ls
ll
v snacks.lua
v lsp-config.lua
v snacks.lua
v lsp-config.lua
v snacks.lua
v lsp-config.lua
ls
v snacks.lua
ls
v lsp-config.lua
ls
v blink.lua
v lsp-config.lua
v snacks.lua
v blink.lua
cd .config/nvim/lua/plugins
v lsp-config.lua
cd
git clone git@github.com:nyangkosense/i.git
cd i
make clean install\

sudo make clean install\

clear
i
clear
cd .config/nvim/lua/plugins
v colorscheme.lua
clear
v blink.lua
v colorscheme.lua
v .config/sway/config
v blink.lua
v colorscheme.lua
shutdown
sway
cd .config/nvim/lua/plugins
ls
v transparency.lua
rm transparency.lua
ls
v mini-ai.lua
v snacks.lua
v blink.lua
cd code/notify-platform
v notification-service/cmd/main.go
v snacks.lua
v preview.lua
v snacks.lua
v trouble.lua
ls
v snacks.lua
sudo pacman -S cliphist
v snacks.lua
cliphist list
v snacks.lua
ls
v lsp-config.lua
ls
v lsp-config.lua
cd .config/nvim/lua/plugins
cd ..
cd nvim1221
ls
cd lua
lsc
cd plugins
ls
v lsp-config.lua
cat /etc/ssh/sshd_config | wc -l
cat /etc/ssh/sshd_config | grep Port
grep --help
cat /etc/ssh/sshd_config | grep -v Port
clear
grep Port /etc/ssh/sshd_config 
grep -v Port /etc/ssh/sshd_config 
clear
cd Dw
cd Downloads
ll
ls
clear
ls
v grep.text
v characters.txt
clea
clear
ls
clear
cat characters.txt
v characters.txt
cat characters.txt
clear
cat characters.txt
grep Turtle characters.txt
grep Human characters.txt
grep -n Human characters.txt
grep -nv Human characters.txt
clear
cat characters.txt
grep -c Human characters.txt
clear
grep -nc Human characters.txt
clear
grep human characters.txt
grep -i human characters.txt
grep -ri /var/log
grep -ri Error /var/log
grep -rin Error /var/log
clar
clear
sudo pacman -Syyu
paru
clear
cat characters.txt
grep --help
clear
git clone git@github.com:learnbyexample/TUI-apps.git
sudo pacman -S pip
pip
paru -S pip
clear
sudo pacman -S python-pip
clar
clear
python3 -m venv textual_apps
cd textual_apps
source bin/activate
pip install grepexercises
grepexercises
grep --help
v grep.help
info grep
egrep
clear
grep --help
v sample_log.txt
clear
ls
clear
grep INFO sample_log.txt
grep ERROR sample_log.txt
grep -v DEBUG sample_log.txt
grep JOB sample_log.txt
grep Job sample_log.txt
grep -i Job sample_log.txt
grep -i Disk sample_log.txt
grep -c INFO sample_log.txt
clear
ls
grep -E "^[" sample_log.txt
grep -E '^[' sample_log.txt
grep -E '^\[' sample_log.txt
grep -E 'completed$' sample_log.txt
grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' sample_log.txt
grep -E '[0-9]\.?' sample_log.txt
grep -E '[0-9]\.+' sample_log.txt
grep -E '^' sample_log.txt
grep -E '^\/etc' sample_log.txt
grep -E '^/etc' sample_log.txt
grep -E '^\/etc' sample_log.txt
grep -E '^\//etc' sample_log.txt
grep -E '^\/etc' sample_log.txt
grep -E '^/etc' sample_log.txt
grep -E '/etc' sample_log.txt
grep -E '[0-9]{2}' sample_log.txt
grep -E '\b[A-Z][a-zA-Z]+\b' sample_log.txt\

grep -E '[A-Z][a-zA-Z]+' sample_log.txt\

shutdown
sway
sudo pacman -S fastfetch
fastfetch
clear
ls
cd textual_apps
ls
grepexercises
cd
grepexercises
cd textual_apps
source bin/activate
grepexercises
grep --help
wc --help
ls
v characters.txt
ls
cd textual_apps
source bin/activate
grepexercises
grep --help
which grep
clear
sudo pacman -Syu
ping google.com
fastfetch
clear
vim
nvim
paru -S vivaldi
clear
paru -S zen-browser-bin
zen-browser
reboot
sway
shutdown
sway
shutdown
sway
ll
sudo pacman -S sddm qt6 qt6-svg qt6-multimedia
git clone --depth 1 https://github.com/Bqrry4/sddm-stray.git && cd sddm-stray\

sudo cp -r theme/ /usr/share/sddm/themes/stray\

v /etc/sddm.conf
ls
cd ..
ls
v /etc/sddm.conf
sudo v /etc/sddm.conf
sudo -E nvim /etc/sddm.conf
reboot
sway
ls
sudo -E nvim /etc/sddm.conf
sudo rm /etc/sddm.conf
ls
sudo pacman -Runs sddm 
sudo pacman -Syyu
paru
sudo pacman -Runs scenefx
paru -R scenefx
reboot
sway
nmtui
shutdown
sway
sudo pacman -Syyu
paru
clear
ll
rm text sample_log.txt otter-launcher.sh sddm-stray grep.help i deepseek-4ccd7956-ff00-4c4a-a8c5-7e61d0afc67b.log deepseekrabotaet.txt  characters.txt .xinitrc
ks
ll
clear
ls
ll
cd Downloads/o
ls
cd Downloads/
ls
cd other
ls
cd
cd code/notify-platform
v .env
cd code/notify-platform
clear
ls
sudo systemctl start docker
chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
ll
tree
clear
ls
./scripts/down.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
./scripts/test-api.sh
cear
clear
v scripts/test-api.sh
ll
ls
cd ..
ls
cd notify-platform
ls
—ÉÆ.—É´—Å
./scripts/down.sh
sudo systemctl stop docker
alsamixer
ll
cd Downloads
ls
cd Telegram\ Desktop
ls
mv img-250622225424.pdf ~
ls
cd
mv img-250622225424.pdf –É∫–∏—Ç–∞–µ–≤ –Éº.–É∞. 09-112
mv img-250622225424.pdf "–É∫–∏—Ç–∞–µ–≤ –Éº.–É∞. 09-112.pdf"
ls
sudo pacman -Syyu
paru
sudo pacman -Rdd linux-firmware
sudo pacman -Syu linux-firmware
sudo pacman -Syyu
paru
sudo pacman -Rdd scenefx
paru
paru -Rns $(paru -Qqtd)
pacman -Rs $(pacman -Qqtd)
clear
sudo pacman -Rs $(pacman -Qqtd)
sudo pacman -Syyu
paru
sudo pacman -Runs libva-vdpau-driver-wayland
sudo pacman -Syyu
paru
sudo pacman -Syyu
reboot
sway
ls
cd code
ls
mv notify-platform latestlatest
git clone git@github.com:skillissu3e/MCNMP.git
sudo systemctl start docker
ls
mv MCNMP notify-platform
ls
cd notify-platform
ls
clear
ls
docker-compose -f deployments/docker-compose.yml build --no-cache\

chmod +x ~/code/notify-platform/scripts/*.sh
ls
./scripts/up.sh
zen-browser
cd frontend
ls
v auth.
v auth.js
v dashboard.js
v auth.html
v dashboard.html
v Dockerfile
v index.html
ls
cd ..
cd fr
cd frontend
ls
v auth.html
v dashboard.html
v dashboard.js
ls
cd code/notify-platform
ls
./scripts/down.sh
cd ..
ls
mv notify-platform ssh
mv latestlatest notify-platform
cd notify-platform
v frontend/dashboard.js
docker-compose -f deployments/docker-compose.yml build --no-cache\

chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
v frontend/dashboard.js
./scripts/down.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
v frontend/dashboard.js
./scripts/down.sh
docker-compose -f deployments/docker-compose.yml build --no-cache\

chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
docker-compose -f deployments/docker-compose.yml logs frontend\

docker-compose -f deployments/docker-compose.yml logs notification-service\

docker-compose -f deployments/docker-compose.yml logs user-service\

docker-compose -f deployments/docker-compose.yml logs workers/email-worker\

docker-compose -f deployments/docker-compose.yml logs \

v scripts/test-api.sh
docker-compose -f deployments/docker-compose.yml logs \

clear
ls
./scripts/down.sh
v frontend/dashboard.js
docker-compose -f deployments/docker-compose.yml build --no-cache\

chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
docker-compose -f deployments/docker-compose.yml logs \

v .env
cd code/notify-platform
ls
cd ..
ls
v ssh
v latest
v .env
cd code/notify-platform
./scripts/down.sh
reboot
sway
alsamixer
arecord -l
dmesg | grep -i audio
sudo dmesg | grep -i audio
sudo pacman -Syu pipewire pipewire-audio pipewire-pulse wireplumber\

clear
pavucontrol\

alsamixer\

arecord -l
sudo dmesg | grep -i audio
alsamixer
amixer -c 1 scontrols
amixer -c 1 sset 'Capture' cap
amixer -c 1 sset 'Headset Mic' 100%
amixer -c 1 sset 'Capture Source' 'Headset Mic'
sudo pacman -S pipewire pipewire-alsa pipewire-pulse pipewire-jack wireplumber\

systemctl --user disable --now pulseaudio.socket pulseaudio.service
systemctl --user enable --now pipewire pipewire-pulse wireplumber
systemctl --user status pipewire
systemctl --user status wireplumber
pactl info
sudo pacman -S pavucontrol
pavucontrol
sudo systemctl start docker
cd code/notify-platform
ls
docker-compose -f deployments/docker-compose.yml build --no-cache\

chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
v .env
v scripts/test-api.sh
ls
clear
ls
cd scripts
v main.py
v test-api.sh
v main.py
chmod +x ~/code/notify-platform/scripts/*.sh
pip install aiohttp
rm main.py
v stress_test.sh
chmod +x ~/code/notify-platform/scripts/*.sh
ls
v stress_test.sh
v test-api.sh
v stress_test.sh
v test-api.sh
ls
cd
pactl load-module module-echo-cancel
sudo pacman -S helvum
helvum
cd code/notify-platform
./scripts/down.sh
sudo systemctl stop docker
sudo pacman -Syyu
paru
clear
reboot
sway
reboot
sway
top
cd code/notify-platform
sudo systemctl start docker
chmod +x ~/code/notify-platform/scripts/*.sh
./scripts/up.sh
v scripts/test-api.sh
./scripts/down.sh
ls
cd scripts
ls
rm load.sh stress_test.sh test-api.sh test-rate-limiting.sh 
ls
cd ..
ls
chmod +x ~/code/notify-platform/scripts/*.sh
ga
gcm "latest, still messy"
git push -u origin master
v .env
ga
gcm "i fucked up"
git push -u origin master
ll
cd Downloads
ls
–¥—É´
lls
ll
ls
cd code/notify-platform
ls
cd Downloads
ls
cp –É≤–É∫–ÉÄ\ –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞..pdf –Éø—Ä–µ–∑–µ–Ω—Ç–∞—É¶–∏—ÉØ\ –É≤–É∫–ÉÄ\ –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞..pptx ~/code/notify-platform
ls
mv –É≤–É∫–ÉÄ\ –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞..pdf –Éø—Ä–µ–∑–µ–Ω—Ç–∞—É¶–∏—ÉØ\ –É≤–É∫–ÉÄ\ –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞..pptx ..
cd ..
ls
cclear
clear
zip -r "–É∫–∏—Ç–∞–µ–≤ –Éº.–É∞. –≥—Ä. 09-112.zip" –É≤–É∫–ÉÄ\ –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞..pdf –Éø—Ä–µ–∑–µ–Ω—Ç–∞—É¶–∏—ÉØ\ –É≤–É∫–ÉÄ\ –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞..pptx notify-platform
ll
unzip -l –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞.\ –≥—Ä.\ 09-112.zip
ls
rm –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞.\ –≥—Ä.\ 09-112.zip
cp notify-platform notify-platformdeepseek
cd notify-platform
ls
ls -a
rm .git
ls
cd ..
zip -r "–É∫–∏—Ç–∞–µ–≤ –Éº.–É∞. –≥—Ä. 09-112.zip" –É≤–É∫–ÉÄ\ –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞..pdf –Éø—Ä–µ–∑–µ–Ω—Ç–∞—É¶–∏—ÉØ\ –É≤–É∫–ÉÄ\ –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞..pptx notify-platform
clear
ls
unzip -l –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞.\ –≥—Ä.\ 09-112.zip
cd code/notify-platform
v .env
cd notify-platform
v .env
cd ..
rm –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞.\ –≥—Ä.\ 09-112.zip
zip -r "–É∫–∏—Ç–∞–µ–≤ –Éº.–É∞. –≥—Ä. 09-112.zip" –É≤–É∫–ÉÄ\ –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞..pdf –Éø—Ä–µ–∑–µ–Ω—Ç–∞—É¶–∏—ÉØ\ –É≤–É∫–ÉÄ\ –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞..pptx notify-platform
unzip -l –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞.\ –≥—Ä.\ 09-112.zip
shutdown
sway
lls
ll
cd Doq
cd Downloads
ls
cd ..
cd code
ls
rm –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞.\ –≥—Ä.\ 09-112.zip
ls
cd –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞.\ –≥—Ä.\ 09-112
ls
cd ..
ls
zip -r "–É∫–∏—Ç–∞–µ–≤ –Éº.–É∞. –≥—Ä. 09-112.zip" –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞.\ –≥—Ä.\ 09-112
cd code
ls
cd –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞.\ –≥—Ä.\ 09-112
ls
zip -r "notify-platfrom.zip" notify-platform
ll
rm notify-platfrom.zip
ls
zip -r "notify-platform.zip" notify-platform
ll
rm notify-platform
ls
cd ..
ls
zip -r "–É∫–∏—Ç–∞–µ–≤ –Éº.–É∞. –≥—Ä. 09-112.zip" –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞.\ –≥—Ä.\ 09-112
ls
rm –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞.\ –≥—Ä.\ 09-112
ls
unzip -l –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞.\ –≥—Ä.\ 09-112.zip
ls
unzip -l –É∫–∏—Ç–∞–µ–≤\ –Éº.–É∞.\ –≥—Ä.\ 09-112.zip
ll
v vroderabotal.txt
reboot
sway
sudo pacman -Syyu
paru
which niri
sudo pacman -Syyu
paru
shutdown
sway
config
ls
ll
v niri/config.kdl
sudo pacman -Syyu
paru
shutdown
sway
niri-session
ll
sway
sudo pacman -Syyu
shutdown
sway
sudo pacman -Syyu
paru
paru -S aylurs-gtk-shell 
ags
ags run
config
ls
ags init
cd ags
ls
ags 
ags ru
ags run
v app.ts
ll
cd .zen
ls
dc
cd .zen
la
ll
v installs.ini
v profile
v profiles.ini
ll
cd ..
ll
ipython
shutdown
sway
config
v nvim/lua/plugins/hardtime.lua
v nvim/lua/plugins
ls
config
cd nvim/lua/plugins
ls
v blink.lua
ls
ll
v archinstallscript
sudo pacman -Rsc pulseaudio pulseaudio-alsa pulseaudio-bluetooth
sudo pacman -S jack2 alsa-utils alsa-firmware realtime-privileges
# Remove JACK2, PulseAudio, and related dependencies\
sudo pacman -Rsc jack2 pulseaudio pulseaudio-alsa\
\
# Install PipeWire with JACK/PulseAudio support\
sudo pacman -S pipewire pipewire-jack pipewire-pulse wireplumber realtime-privileges\
\
# For 32-bit app support (e.g., Wine)\
sudo pacman -S lib32-pipewire-jack\
\
# Add user to realtime group for low latency\
sudo usermod -aG realtime $USER
v ~/.config/pipewire/pipewire.conf
touch ~/.config/pipewire/pipewire.conf
mkdir ~/.config/pipewire/
touch ~/.config/pipewire/pipewire.conf
v ~/.config/pipewire/pipewire.conf
v /etc/wireplumber/main.lua.d/51-alsa-lowlatency.lua
mkdir /etc/wireplumber/main.lua.d/
sudo mkdir /etc/wireplumber/main.lua.d/
sudo mkdir -p /etc/wireplumber/main.lua.d
v /etc/wireplumber/main.lua.d/51-alsa-lowlatency.lua
sudo v /etc/wireplumber/main.lua.d/51-alsa-lowlatency.lua
sudo -E v /etc/wireplumber/main.lua.d/51-alsa-lowlatency.lua
sudo -E nvim /etc/wireplumber/main.lua.d/51-alsa-lowlatency.lua
pw-cli list-objects | grep node.name
sudo cpupower frequency-set --governor performance\

sudo pacman -S cpupower
sudo cpupower frequency-set --governor performance\

sudo tee /etc/wireplumber/main.lua.d/51-alsa-lowlatency.lua <<EOF\
rule = {\
  matches = {\
    { "node.name", "equals", "alsa_output.pci-0000_03_00.6.analog-stereo" },\
    { "node.name", "equals", "alsa_input.pci-0000_03_00.6.analog-stereo" }\
  },\
  apply_properties = {\
    ["api.alsa.period-size"]  = 64,   # 1.33ms buffer @48kHz\
    ["api.alsa.period-num"]   = 3,    # 3 periods = 4ms total latency\
    ["api.alsa.headroom"]     = 512,  # Extra safety buffer\
  }\
}\
table.insert(alsa_monitor.rules, rule)\
EOF
sudo -E nvim /etc/wireplumber/main.lua.d/51-alsa-lowlatency.lua
mkdir -p ~/.config/pipewire/pipewire.conf.d\
tee ~/.config/pipewire/pipewire.conf.d/99-lowlatency.conf <<EOF\
context.properties = {\
    default.clock.quantum  = 64     # Match ALSA period-size\
    default.clock.min-quantum = 64\
    default.clock.rate     = 48000\
}\
EOF
sudo -E nvim ~/.config/pipewire/pipewire.conf.d/99-lowlatency.conf
sudo tee /etc/security/limits.d/99-pipewire-realtime.conf <<EOF\
@realtime - rtprio 99\
@realtime - memlock unlimited\
EOF\
sudo usermod -aG realtime $USER
systemctl --user restart pipewire pipewire-pulse wireplumber
pw-top | grep -E 'node|Quantum'
reboot
sway
# Increase period-size progressively\
sed -i 's/period-size = 64/period-size = 128/' /etc/wireplumber/main.lua.d/51-alsa-lowlatency.lua\
systemctl --user restart wireplumber
# Increase period-size progressively\
sudo sed -i 's/period-size = 64/period-size = 128/' /etc/wireplumber/main.lua.d/51-alsa-lowlatency.lua\
systemctl --user restart wireplumber
sudo alsactl restore
jackd -d dummy &\

jack_lsp -c\

jack_delay
pw-top   
rm -rf ~/.config/pipewire\
sudo rm /etc/wireplumber/main.lua.d/51-alsa-lowlatency.lua
systemctl --user restart pipewire pipewire-pulse wireplumber
speaker-test -c 2 -t wav
sudo tee /etc/wireplumber/main.lua.d/50-alsa-defaults.lua <<'EOF'\
alsa_monitor.rules = {\
  {\
    matches = {\
      { "node.name", "matches", "alsa_output.*" },\
    },\
    apply_properties = {\
      ["api.alsa.period-size"]  = 1024,\
      ["api.alsa.period-num"]   = 3,\
    }\
  }\
}\
EOF
mkdir -p ~/.config/pipewire/pipewire.conf.d\
tee ~/.config/pipewire/pipewire.conf.d/10-settings.conf <<'EOF'\
context.properties = {\
    default.clock.quantum  = 1024\
    default.clock.rate     = 48000\
}\
EOF
aplay -l\

paru -S muxbar
git clone git@github.com:Dlurak/muxbar.git
cd muxbar
cargo install --path .
tmux
cd 
ls
config
ll
v .tmux.conf
tmux
sudo pacman -S rofi-wayland
rofi
rofi -show drun
sudo pacman -S yazi
yazi
paru -S pywal
fastfetch
btop
reboot
: 1751063451:0;sway
: 1751120637:0;sudo pacman -Syyu
: 1751120657:0;clear
: 1751121716:0;paru -S raycast
: 1751122196:0;paru -S gauntlet-bin\
\

: 1751122241:0;sudo systemctl --user enable --now gauntlet.service\
\

: 1751122246:0;systemctl --user enable --now gauntlet.service\
\

: 1751122380:0;gauntlet
: 1751122398:0;config
: 1751122401:0;v sway/config
: 1751122522:0;cd
: 1751122530:0;paru -S ueli-bin
: 1751122677:0;ueli
: 1751122799:0;ls
: 1751122868:0;config
: 1751122869:0;ls
: 1751122875:0;mkdir gauntlet
: 1751122878:0;cd gauntlet
: 1751122887:0;v theme.toml
: 1751122928:0;config
: 1751122929:0;cd gauntlet
: 1751123082:0;v theme.toml
: 1751123133:0;systemctl -u restart gauntlet.service
: 1751123137:0;systemctl -user restart gauntlet.service
: 1751123142:0;systemctl restart gauntlet.service
: 1751123167:0;systemctl --user disable --now gauntlet.service\
\

: 1751123173:0;systemctl --user enable --now gauntlet.service\
\

: 1751126009:0;ls
: 1751126011:0;lll
: 1751126011:0;ll
: 1751133467:0;shutdown
: 1751136013:0;sway
: 1751136024:0;config
: 1751136024:0;ls
: 1751136031:0;v gauntlet/theme.toml
: 1751136034:0;ls
: 1751136038:0;v sway/config
: 1751136106:0;v niri/config.kdl
: 1751136148:0;niri-session
: 1751136155:0;config
: 1751136156:0;v niri/config.kdl
: 1751136179:0;sway
: 1751144531:0;shutdown
: 1751458769:0;sway
: 1751458796:0;ls
: 1751458799:0;config
: 1751458799:0;ls
: 1751458805:0;git init
: 1751458810:0;git remote add origin git@github.com:skillissu3e/dots.git
: 1751458817:0;git branch -M master
: 1751458822:0;ga
: 1751458828:0;ga .
: 1751458850:0;ls
: 1751458853:0;gs
: 1751458863:0;clea
: 1751458864:0;clear
: 1751458865:0;ls
: 1751458868:0;ll
: 1751458892:0;cp -r .zprofile archinstallscript ~/.config
: 1751458896:0;cd Downloads
: 1751458897:0;ls
: 1751458904:0;yazi 
: 1751459012:0;cd
: 1751459021:0;cd /home/ame/.cache/zsh
: 1751459021:0;ls
: 1751459027:0;mv zsh_history ~/.config
